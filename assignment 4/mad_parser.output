Terminals unused in grammar

   FOR
   PRINT
   READ
   TERMINAL
   VALUE


State 83 conflicts: 1 shift/reduce
State 85 conflicts: 3 shift/reduce
State 99 conflicts: 3 shift/reduce
State 111 conflicts: 3 shift/reduce
State 112 conflicts: 3 shift/reduce
State 113 conflicts: 3 shift/reduce
State 114 conflicts: 3 shift/reduce


Grammar

    0 $accept: start_mad_program NONTERMINAL

    1 start_mad_program: mad_program

    2 mad_program: supported_declarations
    3            | supported_declarations mad_program
    4            | error '\n'

    5 supported_declarations: variable_declarations
    6                       | function_declarations

    7 variable_declarations: variable_definitions SEMI

    8 variable_definitions: dtype var_decl
    9                     | variable_definitions comma_rule var_decl
   10                     | variable_definitions error var_decl '\n'

   11 comma_rule: COMMA

   12 dtype: DTYPE_INT
   13      | DTYPE_BOOL
   14      | DTYPE_CHAR

   15 $@1: %empty

   16 function_declarations: dtype func_name OPENPAREN $@1 argument_list CLOSEPAREN statement_block

   17 $@2: %empty

   18 function_declarations: VOID func_name $@2 OPENPAREN argument_list CLOSEPAREN statement_block

   19 func_name: ID

   20 argument_list: dtype var_decl COMMA argument_list
   21              | %empty
   22              | dtype ID error argument_list
   23              | dtype error COMMA argument_list

   24 statement_block: opencurly variable_list statement_list CLOSECURLY

   25 opencurly: OPENCURLY

   26 variable_list: %empty
   27              | variable_declarations variable_list

   28 statement_list: %empty
   29               | supported_statement statement_list

   30 supported_statement: alr_subexpression SEMI
   31                    | if_statement
   32                    | while_statement
   33                    | return_statement
   34                    | statement_block
   35                    | alr_subexpression error

   36 if_statement: IF OPENPAREN alr_subexpression CLOSEPAREN statement_block else_statement

   37 else_statement: %empty
   38               | ELSE statement_block

   39 while_statement: WHILE OPENPAREN alr_subexpression CLOSEPAREN statement_block

   40 return_statement: RETURN SEMI
   41                 | RETURN alr_subexpression SEMI
   42                 | RETURN error
   43                 | RETURN alr_subexpression error

   44 alr_subexpression: supported_constant
   45                  | var_use
   46                  | ID OPENPAREN id_list CLOSEPAREN
   47                  | OPENPAREN alr_subexpression CLOSEPAREN
   48                  | alr_subexpression ARITH alr_subexpression
   49                  | OPENNEGATE alr_subexpression CLOSEPAREN
   50                  | alr_subexpression RELN alr_subexpression
   51                  | alr_subexpression LOGICAL alr_subexpression
   52                  | LOGICALNOT alr_subexpression
   53                  | lhs EQ alr_subexpression
   54                  | error EQ alr_subexpression

   55 id_list: id_list COMMA var_use
   56        | var_use
   57        | %empty

   58 lhs: ID
   59    | ID OPENSQUARE INTCONST CLOSESQUARE

   60 var_decl: ID
   61         | ID OPENSQUARE INTCONST CLOSESQUARE

   62 var_use: ID
   63        | ID OPENSQUARE INTCONST CLOSESQUARE

   64 supported_constant: INTCONST
   65                   | CHARCONST
   66                   | BOOLCONST
   67                   | OPENNEGATE INTCONST CLOSEPAREN


Terminals, with rules where they appear

NONTERMINAL (0) 0
TERMINAL (1)
VALUE (2)
'\n' (10) 4 10
error (256) 4 10 22 23 35 42 43 54
ID (258) 19 22 46 58 59 60 61 62 63
COMMA (259) 11 20 23 55
SEMI (260) 7 30 40 41
OPENPAREN (261) 16 18 36 39 46 47
CLOSEPAREN (262) 16 18 36 39 46 47 49 67
OPENCURLY (263) 25
CLOSECURLY (264) 24
OPENSQUARE (265) 59 61 63
CLOSESQUARE (266) 59 61 63
OPENNEGATE (267) 49 67
VOID (268) 18
DTYPE_INT (269) 12
DTYPE_BOOL (270) 13
DTYPE_CHAR (271) 14
EQ (272) 53 54
ARITH (273) 48
RELN (274) 50
LOGICAL (275) 51
LOGICALNOT (276) 52
IF (277) 36
ELSE (278) 38
WHILE (279) 39
FOR (280)
RETURN (281) 40 41 42 43
PRINT (282)
READ (283)
BOOLCONST (284) 66
INTCONST (285) 59 61 63 64 67
CHARCONST (286) 65


Nonterminals, with rules where they appear

$accept (35)
    on left: 0
start_mad_program (36)
    on left: 1, on right: 0
mad_program (37)
    on left: 2 3 4, on right: 1 3
supported_declarations (38)
    on left: 5 6, on right: 2 3
variable_declarations (39)
    on left: 7, on right: 5 27
variable_definitions (40)
    on left: 8 9 10, on right: 7 9 10
comma_rule (41)
    on left: 11, on right: 9
dtype (42)
    on left: 12 13 14, on right: 8 16 20 22 23
function_declarations (43)
    on left: 16 18, on right: 6
$@1 (44)
    on left: 15, on right: 16
$@2 (45)
    on left: 17, on right: 18
func_name (46)
    on left: 19, on right: 16 18
argument_list (47)
    on left: 20 21 22 23, on right: 16 18 20 22 23
statement_block (48)
    on left: 24, on right: 16 18 34 36 38 39
opencurly (49)
    on left: 25, on right: 24
variable_list (50)
    on left: 26 27, on right: 24 27
statement_list (51)
    on left: 28 29, on right: 24 29
supported_statement (52)
    on left: 30 31 32 33 34 35, on right: 29
if_statement (53)
    on left: 36, on right: 31
else_statement (54)
    on left: 37 38, on right: 36
while_statement (55)
    on left: 39, on right: 32
return_statement (56)
    on left: 40 41 42 43, on right: 33
alr_subexpression (57)
    on left: 44 45 46 47 48 49 50 51 52 53 54, on right: 30 35 36 39
    41 43 47 48 49 50 51 52 53 54
id_list (58)
    on left: 55 56 57, on right: 46 55
lhs (59)
    on left: 58 59, on right: 53
var_decl (60)
    on left: 60 61, on right: 8 9 10 20
var_use (61)
    on left: 62 63, on right: 45 55 56
supported_constant (62)
    on left: 64 65 66 67, on right: 44


State 0

    0 $accept: . start_mad_program NONTERMINAL

    error       shift, and go to state 1
    VOID        shift, and go to state 2
    DTYPE_INT   shift, and go to state 3
    DTYPE_BOOL  shift, and go to state 4
    DTYPE_CHAR  shift, and go to state 5

    start_mad_program       go to state 6
    mad_program             go to state 7
    supported_declarations  go to state 8
    variable_declarations   go to state 9
    variable_definitions    go to state 10
    dtype                   go to state 11
    function_declarations   go to state 12


State 1

    4 mad_program: error . '\n'

    '\n'  shift, and go to state 13


State 2

   18 function_declarations: VOID . func_name $@2 OPENPAREN argument_list CLOSEPAREN statement_block

    ID  shift, and go to state 14

    func_name  go to state 15


State 3

   12 dtype: DTYPE_INT .

    $default  reduce using rule 12 (dtype)


State 4

   13 dtype: DTYPE_BOOL .

    $default  reduce using rule 13 (dtype)


State 5

   14 dtype: DTYPE_CHAR .

    $default  reduce using rule 14 (dtype)


State 6

    0 $accept: start_mad_program . NONTERMINAL

    NONTERMINAL  shift, and go to state 16


State 7

    1 start_mad_program: mad_program .

    $default  reduce using rule 1 (start_mad_program)


State 8

    2 mad_program: supported_declarations .
    3            | supported_declarations . mad_program

    error       shift, and go to state 1
    VOID        shift, and go to state 2
    DTYPE_INT   shift, and go to state 3
    DTYPE_BOOL  shift, and go to state 4
    DTYPE_CHAR  shift, and go to state 5

    NONTERMINAL  reduce using rule 2 (mad_program)

    mad_program             go to state 17
    supported_declarations  go to state 8
    variable_declarations   go to state 9
    variable_definitions    go to state 10
    dtype                   go to state 11
    function_declarations   go to state 12


State 9

    5 supported_declarations: variable_declarations .

    $default  reduce using rule 5 (supported_declarations)


State 10

    7 variable_declarations: variable_definitions . SEMI
    9 variable_definitions: variable_definitions . comma_rule var_decl
   10                     | variable_definitions . error var_decl '\n'

    error  shift, and go to state 18
    COMMA  shift, and go to state 19
    SEMI   shift, and go to state 20

    comma_rule  go to state 21


State 11

    8 variable_definitions: dtype . var_decl
   16 function_declarations: dtype . func_name OPENPAREN $@1 argument_list CLOSEPAREN statement_block

    ID  shift, and go to state 22

    func_name  go to state 23
    var_decl   go to state 24


State 12

    6 supported_declarations: function_declarations .

    $default  reduce using rule 6 (supported_declarations)


State 13

    4 mad_program: error '\n' .

    $default  reduce using rule 4 (mad_program)


State 14

   19 func_name: ID .

    $default  reduce using rule 19 (func_name)


State 15

   18 function_declarations: VOID func_name . $@2 OPENPAREN argument_list CLOSEPAREN statement_block

    $default  reduce using rule 17 ($@2)

    $@2  go to state 25


State 16

    0 $accept: start_mad_program NONTERMINAL .

    $default  accept


State 17

    3 mad_program: supported_declarations mad_program .

    $default  reduce using rule 3 (mad_program)


State 18

   10 variable_definitions: variable_definitions error . var_decl '\n'

    ID  shift, and go to state 26

    var_decl  go to state 27


State 19

   11 comma_rule: COMMA .

    $default  reduce using rule 11 (comma_rule)


State 20

    7 variable_declarations: variable_definitions SEMI .

    $default  reduce using rule 7 (variable_declarations)


State 21

    9 variable_definitions: variable_definitions comma_rule . var_decl

    ID  shift, and go to state 26

    var_decl  go to state 28


State 22

   19 func_name: ID .
   60 var_decl: ID .
   61         | ID . OPENSQUARE INTCONST CLOSESQUARE

    OPENSQUARE  shift, and go to state 29

    OPENPAREN  reduce using rule 19 (func_name)
    $default   reduce using rule 60 (var_decl)


State 23

   16 function_declarations: dtype func_name . OPENPAREN $@1 argument_list CLOSEPAREN statement_block

    OPENPAREN  shift, and go to state 30


State 24

    8 variable_definitions: dtype var_decl .

    $default  reduce using rule 8 (variable_definitions)


State 25

   18 function_declarations: VOID func_name $@2 . OPENPAREN argument_list CLOSEPAREN statement_block

    OPENPAREN  shift, and go to state 31


State 26

   60 var_decl: ID .
   61         | ID . OPENSQUARE INTCONST CLOSESQUARE

    OPENSQUARE  shift, and go to state 29

    $default  reduce using rule 60 (var_decl)


State 27

   10 variable_definitions: variable_definitions error var_decl . '\n'

    '\n'  shift, and go to state 32


State 28

    9 variable_definitions: variable_definitions comma_rule var_decl .

    $default  reduce using rule 9 (variable_definitions)


State 29

   61 var_decl: ID OPENSQUARE . INTCONST CLOSESQUARE

    INTCONST  shift, and go to state 33


State 30

   16 function_declarations: dtype func_name OPENPAREN . $@1 argument_list CLOSEPAREN statement_block

    $default  reduce using rule 15 ($@1)

    $@1  go to state 34


State 31

   18 function_declarations: VOID func_name $@2 OPENPAREN . argument_list CLOSEPAREN statement_block

    DTYPE_INT   shift, and go to state 3
    DTYPE_BOOL  shift, and go to state 4
    DTYPE_CHAR  shift, and go to state 5

    $default  reduce using rule 21 (argument_list)

    dtype          go to state 35
    argument_list  go to state 36


State 32

   10 variable_definitions: variable_definitions error var_decl '\n' .

    $default  reduce using rule 10 (variable_definitions)


State 33

   61 var_decl: ID OPENSQUARE INTCONST . CLOSESQUARE

    CLOSESQUARE  shift, and go to state 37


State 34

   16 function_declarations: dtype func_name OPENPAREN $@1 . argument_list CLOSEPAREN statement_block

    DTYPE_INT   shift, and go to state 3
    DTYPE_BOOL  shift, and go to state 4
    DTYPE_CHAR  shift, and go to state 5

    $default  reduce using rule 21 (argument_list)

    dtype          go to state 35
    argument_list  go to state 38


State 35

   20 argument_list: dtype . var_decl COMMA argument_list
   22              | dtype . ID error argument_list
   23              | dtype . error COMMA argument_list

    error  shift, and go to state 39
    ID     shift, and go to state 40

    var_decl  go to state 41


State 36

   18 function_declarations: VOID func_name $@2 OPENPAREN argument_list . CLOSEPAREN statement_block

    CLOSEPAREN  shift, and go to state 42


State 37

   61 var_decl: ID OPENSQUARE INTCONST CLOSESQUARE .

    $default  reduce using rule 61 (var_decl)


State 38

   16 function_declarations: dtype func_name OPENPAREN $@1 argument_list . CLOSEPAREN statement_block

    CLOSEPAREN  shift, and go to state 43


State 39

   23 argument_list: dtype error . COMMA argument_list

    COMMA  shift, and go to state 44


State 40

   22 argument_list: dtype ID . error argument_list
   60 var_decl: ID .
   61         | ID . OPENSQUARE INTCONST CLOSESQUARE

    error       shift, and go to state 45
    OPENSQUARE  shift, and go to state 29

    COMMA  reduce using rule 60 (var_decl)


State 41

   20 argument_list: dtype var_decl . COMMA argument_list

    COMMA  shift, and go to state 46


State 42

   18 function_declarations: VOID func_name $@2 OPENPAREN argument_list CLOSEPAREN . statement_block

    OPENCURLY  shift, and go to state 47

    statement_block  go to state 48
    opencurly        go to state 49


State 43

   16 function_declarations: dtype func_name OPENPAREN $@1 argument_list CLOSEPAREN . statement_block

    OPENCURLY  shift, and go to state 47

    statement_block  go to state 50
    opencurly        go to state 49


State 44

   23 argument_list: dtype error COMMA . argument_list

    DTYPE_INT   shift, and go to state 3
    DTYPE_BOOL  shift, and go to state 4
    DTYPE_CHAR  shift, and go to state 5

    $default  reduce using rule 21 (argument_list)

    dtype          go to state 35
    argument_list  go to state 51


State 45

   22 argument_list: dtype ID error . argument_list

    DTYPE_INT   shift, and go to state 3
    DTYPE_BOOL  shift, and go to state 4
    DTYPE_CHAR  shift, and go to state 5

    $default  reduce using rule 21 (argument_list)

    dtype          go to state 35
    argument_list  go to state 52


State 46

   20 argument_list: dtype var_decl COMMA . argument_list

    DTYPE_INT   shift, and go to state 3
    DTYPE_BOOL  shift, and go to state 4
    DTYPE_CHAR  shift, and go to state 5

    $default  reduce using rule 21 (argument_list)

    dtype          go to state 35
    argument_list  go to state 53


State 47

   25 opencurly: OPENCURLY .

    $default  reduce using rule 25 (opencurly)


State 48

   18 function_declarations: VOID func_name $@2 OPENPAREN argument_list CLOSEPAREN statement_block .

    $default  reduce using rule 18 (function_declarations)


State 49

   24 statement_block: opencurly . variable_list statement_list CLOSECURLY

    DTYPE_INT   shift, and go to state 3
    DTYPE_BOOL  shift, and go to state 4
    DTYPE_CHAR  shift, and go to state 5

    $default  reduce using rule 26 (variable_list)

    variable_declarations  go to state 54
    variable_definitions   go to state 10
    dtype                  go to state 55
    variable_list          go to state 56


State 50

   16 function_declarations: dtype func_name OPENPAREN $@1 argument_list CLOSEPAREN statement_block .

    $default  reduce using rule 16 (function_declarations)


State 51

   23 argument_list: dtype error COMMA argument_list .

    $default  reduce using rule 23 (argument_list)


State 52

   22 argument_list: dtype ID error argument_list .

    $default  reduce using rule 22 (argument_list)


State 53

   20 argument_list: dtype var_decl COMMA argument_list .

    $default  reduce using rule 20 (argument_list)


State 54

   27 variable_list: variable_declarations . variable_list

    DTYPE_INT   shift, and go to state 3
    DTYPE_BOOL  shift, and go to state 4
    DTYPE_CHAR  shift, and go to state 5

    $default  reduce using rule 26 (variable_list)

    variable_declarations  go to state 54
    variable_definitions   go to state 10
    dtype                  go to state 55
    variable_list          go to state 57


State 55

    8 variable_definitions: dtype . var_decl

    ID  shift, and go to state 26

    var_decl  go to state 24


State 56

   24 statement_block: opencurly variable_list . statement_list CLOSECURLY

    error       shift, and go to state 58
    ID          shift, and go to state 59
    OPENPAREN   shift, and go to state 60
    OPENCURLY   shift, and go to state 47
    OPENNEGATE  shift, and go to state 61
    LOGICALNOT  shift, and go to state 62
    IF          shift, and go to state 63
    WHILE       shift, and go to state 64
    RETURN      shift, and go to state 65
    BOOLCONST   shift, and go to state 66
    INTCONST    shift, and go to state 67
    CHARCONST   shift, and go to state 68

    CLOSECURLY  reduce using rule 28 (statement_list)

    statement_block      go to state 69
    opencurly            go to state 49
    statement_list       go to state 70
    supported_statement  go to state 71
    if_statement         go to state 72
    while_statement      go to state 73
    return_statement     go to state 74
    alr_subexpression    go to state 75
    lhs                  go to state 76
    var_use              go to state 77
    supported_constant   go to state 78


State 57

   27 variable_list: variable_declarations variable_list .

    $default  reduce using rule 27 (variable_list)


State 58

   54 alr_subexpression: error . EQ alr_subexpression

    EQ  shift, and go to state 79


State 59

   46 alr_subexpression: ID . OPENPAREN id_list CLOSEPAREN
   58 lhs: ID .
   59    | ID . OPENSQUARE INTCONST CLOSESQUARE
   62 var_use: ID .
   63        | ID . OPENSQUARE INTCONST CLOSESQUARE

    OPENPAREN   shift, and go to state 80
    OPENSQUARE  shift, and go to state 81

    EQ        reduce using rule 58 (lhs)
    $default  reduce using rule 62 (var_use)


State 60

   47 alr_subexpression: OPENPAREN . alr_subexpression CLOSEPAREN

    error       shift, and go to state 58
    ID          shift, and go to state 59
    OPENPAREN   shift, and go to state 60
    OPENNEGATE  shift, and go to state 61
    LOGICALNOT  shift, and go to state 62
    BOOLCONST   shift, and go to state 66
    INTCONST    shift, and go to state 67
    CHARCONST   shift, and go to state 68

    alr_subexpression   go to state 82
    lhs                 go to state 76
    var_use             go to state 77
    supported_constant  go to state 78


State 61

   49 alr_subexpression: OPENNEGATE . alr_subexpression CLOSEPAREN
   67 supported_constant: OPENNEGATE . INTCONST CLOSEPAREN

    error       shift, and go to state 58
    ID          shift, and go to state 59
    OPENPAREN   shift, and go to state 60
    OPENNEGATE  shift, and go to state 61
    LOGICALNOT  shift, and go to state 62
    BOOLCONST   shift, and go to state 66
    INTCONST    shift, and go to state 83
    CHARCONST   shift, and go to state 68

    alr_subexpression   go to state 84
    lhs                 go to state 76
    var_use             go to state 77
    supported_constant  go to state 78


State 62

   52 alr_subexpression: LOGICALNOT . alr_subexpression

    error       shift, and go to state 58
    ID          shift, and go to state 59
    OPENPAREN   shift, and go to state 60
    OPENNEGATE  shift, and go to state 61
    LOGICALNOT  shift, and go to state 62
    BOOLCONST   shift, and go to state 66
    INTCONST    shift, and go to state 67
    CHARCONST   shift, and go to state 68

    alr_subexpression   go to state 85
    lhs                 go to state 76
    var_use             go to state 77
    supported_constant  go to state 78


State 63

   36 if_statement: IF . OPENPAREN alr_subexpression CLOSEPAREN statement_block else_statement

    OPENPAREN  shift, and go to state 86


State 64

   39 while_statement: WHILE . OPENPAREN alr_subexpression CLOSEPAREN statement_block

    OPENPAREN  shift, and go to state 87


State 65

   40 return_statement: RETURN . SEMI
   41                 | RETURN . alr_subexpression SEMI
   42                 | RETURN . error
   43                 | RETURN . alr_subexpression error

    error       shift, and go to state 88
    ID          shift, and go to state 59
    SEMI        shift, and go to state 89
    OPENPAREN   shift, and go to state 60
    OPENNEGATE  shift, and go to state 61
    LOGICALNOT  shift, and go to state 62
    BOOLCONST   shift, and go to state 66
    INTCONST    shift, and go to state 67
    CHARCONST   shift, and go to state 68

    alr_subexpression   go to state 90
    lhs                 go to state 76
    var_use             go to state 77
    supported_constant  go to state 78


State 66

   66 supported_constant: BOOLCONST .

    $default  reduce using rule 66 (supported_constant)


State 67

   64 supported_constant: INTCONST .

    $default  reduce using rule 64 (supported_constant)


State 68

   65 supported_constant: CHARCONST .

    $default  reduce using rule 65 (supported_constant)


State 69

   34 supported_statement: statement_block .

    $default  reduce using rule 34 (supported_statement)


State 70

   24 statement_block: opencurly variable_list statement_list . CLOSECURLY

    CLOSECURLY  shift, and go to state 91


State 71

   29 statement_list: supported_statement . statement_list

    error       shift, and go to state 58
    ID          shift, and go to state 59
    OPENPAREN   shift, and go to state 60
    OPENCURLY   shift, and go to state 47
    OPENNEGATE  shift, and go to state 61
    LOGICALNOT  shift, and go to state 62
    IF          shift, and go to state 63
    WHILE       shift, and go to state 64
    RETURN      shift, and go to state 65
    BOOLCONST   shift, and go to state 66
    INTCONST    shift, and go to state 67
    CHARCONST   shift, and go to state 68

    CLOSECURLY  reduce using rule 28 (statement_list)

    statement_block      go to state 69
    opencurly            go to state 49
    statement_list       go to state 92
    supported_statement  go to state 71
    if_statement         go to state 72
    while_statement      go to state 73
    return_statement     go to state 74
    alr_subexpression    go to state 75
    lhs                  go to state 76
    var_use              go to state 77
    supported_constant   go to state 78


State 72

   31 supported_statement: if_statement .

    $default  reduce using rule 31 (supported_statement)


State 73

   32 supported_statement: while_statement .

    $default  reduce using rule 32 (supported_statement)


State 74

   33 supported_statement: return_statement .

    $default  reduce using rule 33 (supported_statement)


State 75

   30 supported_statement: alr_subexpression . SEMI
   35                    | alr_subexpression . error
   48 alr_subexpression: alr_subexpression . ARITH alr_subexpression
   50                  | alr_subexpression . RELN alr_subexpression
   51                  | alr_subexpression . LOGICAL alr_subexpression

    error    shift, and go to state 93
    SEMI     shift, and go to state 94
    ARITH    shift, and go to state 95
    RELN     shift, and go to state 96
    LOGICAL  shift, and go to state 97


State 76

   53 alr_subexpression: lhs . EQ alr_subexpression

    EQ  shift, and go to state 98


State 77

   45 alr_subexpression: var_use .

    $default  reduce using rule 45 (alr_subexpression)


State 78

   44 alr_subexpression: supported_constant .

    $default  reduce using rule 44 (alr_subexpression)


State 79

   54 alr_subexpression: error EQ . alr_subexpression

    error       shift, and go to state 58
    ID          shift, and go to state 59
    OPENPAREN   shift, and go to state 60
    OPENNEGATE  shift, and go to state 61
    LOGICALNOT  shift, and go to state 62
    BOOLCONST   shift, and go to state 66
    INTCONST    shift, and go to state 67
    CHARCONST   shift, and go to state 68

    alr_subexpression   go to state 99
    lhs                 go to state 76
    var_use             go to state 77
    supported_constant  go to state 78


State 80

   46 alr_subexpression: ID OPENPAREN . id_list CLOSEPAREN

    ID  shift, and go to state 100

    $default  reduce using rule 57 (id_list)

    id_list  go to state 101
    var_use  go to state 102


State 81

   59 lhs: ID OPENSQUARE . INTCONST CLOSESQUARE
   63 var_use: ID OPENSQUARE . INTCONST CLOSESQUARE

    INTCONST  shift, and go to state 103


State 82

   47 alr_subexpression: OPENPAREN alr_subexpression . CLOSEPAREN
   48                  | alr_subexpression . ARITH alr_subexpression
   50                  | alr_subexpression . RELN alr_subexpression
   51                  | alr_subexpression . LOGICAL alr_subexpression

    CLOSEPAREN  shift, and go to state 104
    ARITH       shift, and go to state 95
    RELN        shift, and go to state 96
    LOGICAL     shift, and go to state 97


State 83

   64 supported_constant: INTCONST .
   67                   | OPENNEGATE INTCONST . CLOSEPAREN

    CLOSEPAREN  shift, and go to state 105

    CLOSEPAREN  [reduce using rule 64 (supported_constant)]
    $default    reduce using rule 64 (supported_constant)


State 84

   48 alr_subexpression: alr_subexpression . ARITH alr_subexpression
   49                  | OPENNEGATE alr_subexpression . CLOSEPAREN
   50                  | alr_subexpression . RELN alr_subexpression
   51                  | alr_subexpression . LOGICAL alr_subexpression

    CLOSEPAREN  shift, and go to state 106
    ARITH       shift, and go to state 95
    RELN        shift, and go to state 96
    LOGICAL     shift, and go to state 97


State 85

   48 alr_subexpression: alr_subexpression . ARITH alr_subexpression
   50                  | alr_subexpression . RELN alr_subexpression
   51                  | alr_subexpression . LOGICAL alr_subexpression
   52                  | LOGICALNOT alr_subexpression .

    ARITH    shift, and go to state 95
    RELN     shift, and go to state 96
    LOGICAL  shift, and go to state 97

    ARITH     [reduce using rule 52 (alr_subexpression)]
    RELN      [reduce using rule 52 (alr_subexpression)]
    LOGICAL   [reduce using rule 52 (alr_subexpression)]
    $default  reduce using rule 52 (alr_subexpression)


State 86

   36 if_statement: IF OPENPAREN . alr_subexpression CLOSEPAREN statement_block else_statement

    error       shift, and go to state 58
    ID          shift, and go to state 59
    OPENPAREN   shift, and go to state 60
    OPENNEGATE  shift, and go to state 61
    LOGICALNOT  shift, and go to state 62
    BOOLCONST   shift, and go to state 66
    INTCONST    shift, and go to state 67
    CHARCONST   shift, and go to state 68

    alr_subexpression   go to state 107
    lhs                 go to state 76
    var_use             go to state 77
    supported_constant  go to state 78


State 87

   39 while_statement: WHILE OPENPAREN . alr_subexpression CLOSEPAREN statement_block

    error       shift, and go to state 58
    ID          shift, and go to state 59
    OPENPAREN   shift, and go to state 60
    OPENNEGATE  shift, and go to state 61
    LOGICALNOT  shift, and go to state 62
    BOOLCONST   shift, and go to state 66
    INTCONST    shift, and go to state 67
    CHARCONST   shift, and go to state 68

    alr_subexpression   go to state 108
    lhs                 go to state 76
    var_use             go to state 77
    supported_constant  go to state 78


State 88

   42 return_statement: RETURN error .
   54 alr_subexpression: error . EQ alr_subexpression

    EQ  shift, and go to state 79

    $default  reduce using rule 42 (return_statement)


State 89

   40 return_statement: RETURN SEMI .

    $default  reduce using rule 40 (return_statement)


State 90

   41 return_statement: RETURN alr_subexpression . SEMI
   43                 | RETURN alr_subexpression . error
   48 alr_subexpression: alr_subexpression . ARITH alr_subexpression
   50                  | alr_subexpression . RELN alr_subexpression
   51                  | alr_subexpression . LOGICAL alr_subexpression

    error    shift, and go to state 109
    SEMI     shift, and go to state 110
    ARITH    shift, and go to state 95
    RELN     shift, and go to state 96
    LOGICAL  shift, and go to state 97


State 91

   24 statement_block: opencurly variable_list statement_list CLOSECURLY .

    $default  reduce using rule 24 (statement_block)


State 92

   29 statement_list: supported_statement statement_list .

    $default  reduce using rule 29 (statement_list)


State 93

   35 supported_statement: alr_subexpression error .

    $default  reduce using rule 35 (supported_statement)


State 94

   30 supported_statement: alr_subexpression SEMI .

    $default  reduce using rule 30 (supported_statement)


State 95

   48 alr_subexpression: alr_subexpression ARITH . alr_subexpression

    error       shift, and go to state 58
    ID          shift, and go to state 59
    OPENPAREN   shift, and go to state 60
    OPENNEGATE  shift, and go to state 61
    LOGICALNOT  shift, and go to state 62
    BOOLCONST   shift, and go to state 66
    INTCONST    shift, and go to state 67
    CHARCONST   shift, and go to state 68

    alr_subexpression   go to state 111
    lhs                 go to state 76
    var_use             go to state 77
    supported_constant  go to state 78


State 96

   50 alr_subexpression: alr_subexpression RELN . alr_subexpression

    error       shift, and go to state 58
    ID          shift, and go to state 59
    OPENPAREN   shift, and go to state 60
    OPENNEGATE  shift, and go to state 61
    LOGICALNOT  shift, and go to state 62
    BOOLCONST   shift, and go to state 66
    INTCONST    shift, and go to state 67
    CHARCONST   shift, and go to state 68

    alr_subexpression   go to state 112
    lhs                 go to state 76
    var_use             go to state 77
    supported_constant  go to state 78


State 97

   51 alr_subexpression: alr_subexpression LOGICAL . alr_subexpression

    error       shift, and go to state 58
    ID          shift, and go to state 59
    OPENPAREN   shift, and go to state 60
    OPENNEGATE  shift, and go to state 61
    LOGICALNOT  shift, and go to state 62
    BOOLCONST   shift, and go to state 66
    INTCONST    shift, and go to state 67
    CHARCONST   shift, and go to state 68

    alr_subexpression   go to state 113
    lhs                 go to state 76
    var_use             go to state 77
    supported_constant  go to state 78


State 98

   53 alr_subexpression: lhs EQ . alr_subexpression

    error       shift, and go to state 58
    ID          shift, and go to state 59
    OPENPAREN   shift, and go to state 60
    OPENNEGATE  shift, and go to state 61
    LOGICALNOT  shift, and go to state 62
    BOOLCONST   shift, and go to state 66
    INTCONST    shift, and go to state 67
    CHARCONST   shift, and go to state 68

    alr_subexpression   go to state 114
    lhs                 go to state 76
    var_use             go to state 77
    supported_constant  go to state 78


State 99

   48 alr_subexpression: alr_subexpression . ARITH alr_subexpression
   50                  | alr_subexpression . RELN alr_subexpression
   51                  | alr_subexpression . LOGICAL alr_subexpression
   54                  | error EQ alr_subexpression .

    ARITH    shift, and go to state 95
    RELN     shift, and go to state 96
    LOGICAL  shift, and go to state 97

    ARITH     [reduce using rule 54 (alr_subexpression)]
    RELN      [reduce using rule 54 (alr_subexpression)]
    LOGICAL   [reduce using rule 54 (alr_subexpression)]
    $default  reduce using rule 54 (alr_subexpression)


State 100

   62 var_use: ID .
   63        | ID . OPENSQUARE INTCONST CLOSESQUARE

    OPENSQUARE  shift, and go to state 115

    $default  reduce using rule 62 (var_use)


State 101

   46 alr_subexpression: ID OPENPAREN id_list . CLOSEPAREN
   55 id_list: id_list . COMMA var_use

    COMMA       shift, and go to state 116
    CLOSEPAREN  shift, and go to state 117


State 102

   56 id_list: var_use .

    $default  reduce using rule 56 (id_list)


State 103

   59 lhs: ID OPENSQUARE INTCONST . CLOSESQUARE
   63 var_use: ID OPENSQUARE INTCONST . CLOSESQUARE

    CLOSESQUARE  shift, and go to state 118


State 104

   47 alr_subexpression: OPENPAREN alr_subexpression CLOSEPAREN .

    $default  reduce using rule 47 (alr_subexpression)


State 105

   67 supported_constant: OPENNEGATE INTCONST CLOSEPAREN .

    $default  reduce using rule 67 (supported_constant)


State 106

   49 alr_subexpression: OPENNEGATE alr_subexpression CLOSEPAREN .

    $default  reduce using rule 49 (alr_subexpression)


State 107

   36 if_statement: IF OPENPAREN alr_subexpression . CLOSEPAREN statement_block else_statement
   48 alr_subexpression: alr_subexpression . ARITH alr_subexpression
   50                  | alr_subexpression . RELN alr_subexpression
   51                  | alr_subexpression . LOGICAL alr_subexpression

    CLOSEPAREN  shift, and go to state 119
    ARITH       shift, and go to state 95
    RELN        shift, and go to state 96
    LOGICAL     shift, and go to state 97


State 108

   39 while_statement: WHILE OPENPAREN alr_subexpression . CLOSEPAREN statement_block
   48 alr_subexpression: alr_subexpression . ARITH alr_subexpression
   50                  | alr_subexpression . RELN alr_subexpression
   51                  | alr_subexpression . LOGICAL alr_subexpression

    CLOSEPAREN  shift, and go to state 120
    ARITH       shift, and go to state 95
    RELN        shift, and go to state 96
    LOGICAL     shift, and go to state 97


State 109

   43 return_statement: RETURN alr_subexpression error .

    $default  reduce using rule 43 (return_statement)


State 110

   41 return_statement: RETURN alr_subexpression SEMI .

    $default  reduce using rule 41 (return_statement)


State 111

   48 alr_subexpression: alr_subexpression . ARITH alr_subexpression
   48                  | alr_subexpression ARITH alr_subexpression .
   50                  | alr_subexpression . RELN alr_subexpression
   51                  | alr_subexpression . LOGICAL alr_subexpression

    ARITH    shift, and go to state 95
    RELN     shift, and go to state 96
    LOGICAL  shift, and go to state 97

    ARITH     [reduce using rule 48 (alr_subexpression)]
    RELN      [reduce using rule 48 (alr_subexpression)]
    LOGICAL   [reduce using rule 48 (alr_subexpression)]
    $default  reduce using rule 48 (alr_subexpression)


State 112

   48 alr_subexpression: alr_subexpression . ARITH alr_subexpression
   50                  | alr_subexpression . RELN alr_subexpression
   50                  | alr_subexpression RELN alr_subexpression .
   51                  | alr_subexpression . LOGICAL alr_subexpression

    ARITH    shift, and go to state 95
    RELN     shift, and go to state 96
    LOGICAL  shift, and go to state 97

    ARITH     [reduce using rule 50 (alr_subexpression)]
    RELN      [reduce using rule 50 (alr_subexpression)]
    LOGICAL   [reduce using rule 50 (alr_subexpression)]
    $default  reduce using rule 50 (alr_subexpression)


State 113

   48 alr_subexpression: alr_subexpression . ARITH alr_subexpression
   50                  | alr_subexpression . RELN alr_subexpression
   51                  | alr_subexpression . LOGICAL alr_subexpression
   51                  | alr_subexpression LOGICAL alr_subexpression .

    ARITH    shift, and go to state 95
    RELN     shift, and go to state 96
    LOGICAL  shift, and go to state 97

    ARITH     [reduce using rule 51 (alr_subexpression)]
    RELN      [reduce using rule 51 (alr_subexpression)]
    LOGICAL   [reduce using rule 51 (alr_subexpression)]
    $default  reduce using rule 51 (alr_subexpression)


State 114

   48 alr_subexpression: alr_subexpression . ARITH alr_subexpression
   50                  | alr_subexpression . RELN alr_subexpression
   51                  | alr_subexpression . LOGICAL alr_subexpression
   53                  | lhs EQ alr_subexpression .

    ARITH    shift, and go to state 95
    RELN     shift, and go to state 96
    LOGICAL  shift, and go to state 97

    ARITH     [reduce using rule 53 (alr_subexpression)]
    RELN      [reduce using rule 53 (alr_subexpression)]
    LOGICAL   [reduce using rule 53 (alr_subexpression)]
    $default  reduce using rule 53 (alr_subexpression)


State 115

   63 var_use: ID OPENSQUARE . INTCONST CLOSESQUARE

    INTCONST  shift, and go to state 121


State 116

   55 id_list: id_list COMMA . var_use

    ID  shift, and go to state 100

    var_use  go to state 122


State 117

   46 alr_subexpression: ID OPENPAREN id_list CLOSEPAREN .

    $default  reduce using rule 46 (alr_subexpression)


State 118

   59 lhs: ID OPENSQUARE INTCONST CLOSESQUARE .
   63 var_use: ID OPENSQUARE INTCONST CLOSESQUARE .

    EQ        reduce using rule 59 (lhs)
    $default  reduce using rule 63 (var_use)


State 119

   36 if_statement: IF OPENPAREN alr_subexpression CLOSEPAREN . statement_block else_statement

    OPENCURLY  shift, and go to state 47

    statement_block  go to state 123
    opencurly        go to state 49


State 120

   39 while_statement: WHILE OPENPAREN alr_subexpression CLOSEPAREN . statement_block

    OPENCURLY  shift, and go to state 47

    statement_block  go to state 124
    opencurly        go to state 49


State 121

   63 var_use: ID OPENSQUARE INTCONST . CLOSESQUARE

    CLOSESQUARE  shift, and go to state 125


State 122

   55 id_list: id_list COMMA var_use .

    $default  reduce using rule 55 (id_list)


State 123

   36 if_statement: IF OPENPAREN alr_subexpression CLOSEPAREN statement_block . else_statement

    ELSE  shift, and go to state 126

    $default  reduce using rule 37 (else_statement)

    else_statement  go to state 127


State 124

   39 while_statement: WHILE OPENPAREN alr_subexpression CLOSEPAREN statement_block .

    $default  reduce using rule 39 (while_statement)


State 125

   63 var_use: ID OPENSQUARE INTCONST CLOSESQUARE .

    $default  reduce using rule 63 (var_use)


State 126

   38 else_statement: ELSE . statement_block

    OPENCURLY  shift, and go to state 47

    statement_block  go to state 128
    opencurly        go to state 49


State 127

   36 if_statement: IF OPENPAREN alr_subexpression CLOSEPAREN statement_block else_statement .

    $default  reduce using rule 36 (if_statement)


State 128

   38 else_statement: ELSE statement_block .

    $default  reduce using rule 38 (else_statement)
