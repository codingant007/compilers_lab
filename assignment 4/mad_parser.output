Terminals unused in grammar

   FOR
   PRINT
   READ
   TERMINAL
   VALUE


State 17 conflicts: 1 shift/reduce
State 47 conflicts: 4 shift/reduce, 12 reduce/reduce
State 53 conflicts: 1 shift/reduce
State 55 conflicts: 1 shift/reduce
State 56 conflicts: 1 shift/reduce
State 60 conflicts: 1 shift/reduce
State 72 conflicts: 1 shift/reduce
State 78 conflicts: 1 shift/reduce
State 85 conflicts: 1 shift/reduce
State 87 conflicts: 3 reduce/reduce
State 102 conflicts: 1 shift/reduce
State 104 conflicts: 3 reduce/reduce
State 120 conflicts: 3 reduce/reduce
State 121 conflicts: 3 reduce/reduce
State 123 conflicts: 1 shift/reduce
State 130 conflicts: 3 reduce/reduce
State 131 conflicts: 3 reduce/reduce
State 132 conflicts: 3 reduce/reduce
State 134 conflicts: 1 shift/reduce


Grammar

    0 $accept: mad_program NONTERMINAL

    1 mad_program: supported_declarations
    2            | supported_declarations mad_program
    3            | error '\n'

    4 supported_declarations: variable_declarations
    5                       | function_declarations

    6 variable_declarations: variable_definitions SEMI
    7                      | variable_definitions error

    8 variable_definitions: dtype var_decl

    9 @1: %empty

   10 variable_definitions: variable_definitions COMMA @1 var_decl
   11                     | variable_definitions error var_decl '\n'

   12 dtype: DTYPE_INT
   13      | DTYPE_BOOL
   14      | DTYPE_CHAR
   15      | error

   16 $@2: %empty

   17 function_declarations: dtype func_name $@2 OPENPAREN argument_list CLOSEPAREN statement_block

   18 $@3: %empty

   19 function_declarations: VOID func_name $@3 OPENPAREN argument_list CLOSEPAREN statement_block

   20 func_name: ID

   21 argument_list: dtype var_decl COMMA argument_list
   22              | %empty
   23              | dtype ID error argument_list
   24              | dtype error COMMA argument_list

   25 $@4: %empty

   26 statement_block: OPENCURLY $@4 variable_list statement_list CLOSECURLY
   27                | OPENCURLY variable_list statement_list error

   28 variable_list: %empty
   29              | variable_declarations variable_list

   30 statement_list: %empty
   31               | supported_statement statement_list

   32 supported_statement: alr_subexpression SEMI
   33                    | if_statement
   34                    | while_statement
   35                    | return_statement
   36                    | statement_block
   37                    | alr_subexpression error

   38 if_statement: IF OPENPAREN alr_subexpression CLOSEPAREN statement_block else_statement

   39 else_statement: %empty
   40               | ELSE statement_block

   41 while_statement: WHILE OPENPAREN alr_subexpression CLOSEPAREN statement_block

   42 return_statement: RETURN SEMI
   43                 | RETURN alr_subexpression SEMI
   44                 | RETURN error
   45                 | RETURN alr_subexpression error

   46 alr_subexpression: lhs EQ alr_subexpression
   47                  | supported_constant
   48                  | var_use
   49                  | ID OPENPAREN id_list CLOSEPAREN
   50                  | OPENPAREN alr_subexpression CLOSEPAREN

   51 @5: %empty

   52 alr_subexpression: alr_subexpression @5 ARITH alr_subexpression
   53                  | OPENNEGATE alr_subexpression CLOSEPAREN

   54 @6: %empty

   55 alr_subexpression: alr_subexpression @6 RELN alr_subexpression

   56 @7: %empty

   57 alr_subexpression: alr_subexpression @7 LOGICAL alr_subexpression
   58                  | LOGICALNOT alr_subexpression
   59                  | error EQ alr_subexpression
   60                  | var_use error alr_subexpression
   61                  | var_use OPENPAREN id_list error

   62 id_list: id_list COMMA var_use
   63        | var_use
   64        | %empty
   65        | error COMMA id_list

   66 lhs: ID
   67    | ID OPENSQUARE INTCONST CLOSESQUARE

   68 var_decl: ID
   69         | ID OPENSQUARE INTCONST CLOSESQUARE

   70 var_use: ID
   71        | ID OPENSQUARE INTCONST CLOSESQUARE

   72 supported_constant: INTCONST
   73                   | CHARCONST
   74                   | BOOLCONST
   75                   | OPENNEGATE INTCONST CLOSEPAREN


Terminals, with rules where they appear

NONTERMINAL (0) 0
TERMINAL (1)
VALUE (2)
'\n' (10) 3 11
error (256) 3 7 11 15 23 24 27 37 44 45 59 60 61 65
ID (258) 20 23 49 66 67 68 69 70 71
COMMA (259) 10 21 24 62 65
SEMI (260) 6 32 42 43
OPENPAREN (261) 17 19 38 41 49 50 61
CLOSEPAREN (262) 17 19 38 41 49 50 53 75
OPENCURLY (263) 26 27
CLOSECURLY (264) 26
OPENSQUARE (265) 67 69 71
CLOSESQUARE (266) 67 69 71
OPENNEGATE (267) 53 75
VOID (268) 19
DTYPE_INT (269) 12
DTYPE_BOOL (270) 13
DTYPE_CHAR (271) 14
EQ (272) 46 59
ARITH (273) 52
RELN (274) 55
LOGICAL (275) 57
LOGICALNOT (276) 58
IF (277) 38
ELSE (278) 40
WHILE (279) 41
FOR (280)
RETURN (281) 42 43 44 45
PRINT (282)
READ (283)
BOOLCONST (284) 74
INTCONST (285) 67 69 71 72 75
CHARCONST (286) 73


Nonterminals, with rules where they appear

$accept (35)
    on left: 0
mad_program (36)
    on left: 1 2 3, on right: 0 2
supported_declarations (37)
    on left: 4 5, on right: 1 2
variable_declarations (38)
    on left: 6 7, on right: 4 29
variable_definitions (39)
    on left: 8 10 11, on right: 6 7 10 11
@1 (40)
    on left: 9, on right: 10
dtype (41)
    on left: 12 13 14 15, on right: 8 17 21 23 24
function_declarations (42)
    on left: 17 19, on right: 5
$@2 (43)
    on left: 16, on right: 17
$@3 (44)
    on left: 18, on right: 19
func_name (45)
    on left: 20, on right: 17 19
argument_list (46)
    on left: 21 22 23 24, on right: 17 19 21 23 24
statement_block (47)
    on left: 26 27, on right: 17 19 36 38 40 41
$@4 (48)
    on left: 25, on right: 26
variable_list (49)
    on left: 28 29, on right: 26 27 29
statement_list (50)
    on left: 30 31, on right: 26 27 31
supported_statement (51)
    on left: 32 33 34 35 36 37, on right: 31
if_statement (52)
    on left: 38, on right: 33
else_statement (53)
    on left: 39 40, on right: 38
while_statement (54)
    on left: 41, on right: 34
return_statement (55)
    on left: 42 43 44 45, on right: 35
alr_subexpression (56)
    on left: 46 47 48 49 50 52 53 55 57 58 59 60 61, on right: 32 37
    38 41 43 45 46 50 52 53 55 57 58 59 60
@5 (57)
    on left: 51, on right: 52
@6 (58)
    on left: 54, on right: 55
@7 (59)
    on left: 56, on right: 57
id_list (60)
    on left: 62 63 64 65, on right: 49 61 62 65
lhs (61)
    on left: 66 67, on right: 46
var_decl (62)
    on left: 68 69, on right: 8 10 11 21
var_use (63)
    on left: 70 71, on right: 48 60 61 62 63
supported_constant (64)
    on left: 72 73 74 75, on right: 47


State 0

    0 $accept: . mad_program NONTERMINAL

    error       shift, and go to state 1
    VOID        shift, and go to state 2
    DTYPE_INT   shift, and go to state 3
    DTYPE_BOOL  shift, and go to state 4
    DTYPE_CHAR  shift, and go to state 5

    mad_program             go to state 6
    supported_declarations  go to state 7
    variable_declarations   go to state 8
    variable_definitions    go to state 9
    dtype                   go to state 10
    function_declarations   go to state 11


State 1

    3 mad_program: error . '\n'
   15 dtype: error .

    '\n'  shift, and go to state 12

    $default  reduce using rule 15 (dtype)


State 2

   19 function_declarations: VOID . func_name $@3 OPENPAREN argument_list CLOSEPAREN statement_block

    ID  shift, and go to state 13

    func_name  go to state 14


State 3

   12 dtype: DTYPE_INT .

    $default  reduce using rule 12 (dtype)


State 4

   13 dtype: DTYPE_BOOL .

    $default  reduce using rule 13 (dtype)


State 5

   14 dtype: DTYPE_CHAR .

    $default  reduce using rule 14 (dtype)


State 6

    0 $accept: mad_program . NONTERMINAL

    NONTERMINAL  shift, and go to state 15


State 7

    1 mad_program: supported_declarations .
    2            | supported_declarations . mad_program

    error       shift, and go to state 1
    VOID        shift, and go to state 2
    DTYPE_INT   shift, and go to state 3
    DTYPE_BOOL  shift, and go to state 4
    DTYPE_CHAR  shift, and go to state 5

    NONTERMINAL  reduce using rule 1 (mad_program)

    mad_program             go to state 16
    supported_declarations  go to state 7
    variable_declarations   go to state 8
    variable_definitions    go to state 9
    dtype                   go to state 10
    function_declarations   go to state 11


State 8

    4 supported_declarations: variable_declarations .

    $default  reduce using rule 4 (supported_declarations)


State 9

    6 variable_declarations: variable_definitions . SEMI
    7                      | variable_definitions . error
   10 variable_definitions: variable_definitions . COMMA @1 var_decl
   11                     | variable_definitions . error var_decl '\n'

    error  shift, and go to state 17
    COMMA  shift, and go to state 18
    SEMI   shift, and go to state 19


State 10

    8 variable_definitions: dtype . var_decl
   17 function_declarations: dtype . func_name $@2 OPENPAREN argument_list CLOSEPAREN statement_block

    ID  shift, and go to state 20

    func_name  go to state 21
    var_decl   go to state 22


State 11

    5 supported_declarations: function_declarations .

    $default  reduce using rule 5 (supported_declarations)


State 12

    3 mad_program: error '\n' .

    $default  reduce using rule 3 (mad_program)


State 13

   20 func_name: ID .

    $default  reduce using rule 20 (func_name)


State 14

   19 function_declarations: VOID func_name . $@3 OPENPAREN argument_list CLOSEPAREN statement_block

    $default  reduce using rule 18 ($@3)

    $@3  go to state 23


State 15

    0 $accept: mad_program NONTERMINAL .

    $default  accept


State 16

    2 mad_program: supported_declarations mad_program .

    $default  reduce using rule 2 (mad_program)


State 17

    7 variable_declarations: variable_definitions error .
   11 variable_definitions: variable_definitions error . var_decl '\n'

    ID  shift, and go to state 24

    ID        [reduce using rule 7 (variable_declarations)]
    $default  reduce using rule 7 (variable_declarations)

    var_decl  go to state 25


State 18

   10 variable_definitions: variable_definitions COMMA . @1 var_decl

    $default  reduce using rule 9 (@1)

    @1  go to state 26


State 19

    6 variable_declarations: variable_definitions SEMI .

    $default  reduce using rule 6 (variable_declarations)


State 20

   20 func_name: ID .
   68 var_decl: ID .
   69         | ID . OPENSQUARE INTCONST CLOSESQUARE

    OPENSQUARE  shift, and go to state 27

    OPENPAREN  reduce using rule 20 (func_name)
    $default   reduce using rule 68 (var_decl)


State 21

   17 function_declarations: dtype func_name . $@2 OPENPAREN argument_list CLOSEPAREN statement_block

    $default  reduce using rule 16 ($@2)

    $@2  go to state 28


State 22

    8 variable_definitions: dtype var_decl .

    $default  reduce using rule 8 (variable_definitions)


State 23

   19 function_declarations: VOID func_name $@3 . OPENPAREN argument_list CLOSEPAREN statement_block

    OPENPAREN  shift, and go to state 29


State 24

   68 var_decl: ID .
   69         | ID . OPENSQUARE INTCONST CLOSESQUARE

    OPENSQUARE  shift, and go to state 27

    $default  reduce using rule 68 (var_decl)


State 25

   11 variable_definitions: variable_definitions error var_decl . '\n'

    '\n'  shift, and go to state 30


State 26

   10 variable_definitions: variable_definitions COMMA @1 . var_decl

    ID  shift, and go to state 24

    var_decl  go to state 31


State 27

   69 var_decl: ID OPENSQUARE . INTCONST CLOSESQUARE

    INTCONST  shift, and go to state 32


State 28

   17 function_declarations: dtype func_name $@2 . OPENPAREN argument_list CLOSEPAREN statement_block

    OPENPAREN  shift, and go to state 33


State 29

   19 function_declarations: VOID func_name $@3 OPENPAREN . argument_list CLOSEPAREN statement_block

    error       shift, and go to state 34
    DTYPE_INT   shift, and go to state 3
    DTYPE_BOOL  shift, and go to state 4
    DTYPE_CHAR  shift, and go to state 5

    CLOSEPAREN  reduce using rule 22 (argument_list)

    dtype          go to state 35
    argument_list  go to state 36


State 30

   11 variable_definitions: variable_definitions error var_decl '\n' .

    $default  reduce using rule 11 (variable_definitions)


State 31

   10 variable_definitions: variable_definitions COMMA @1 var_decl .

    $default  reduce using rule 10 (variable_definitions)


State 32

   69 var_decl: ID OPENSQUARE INTCONST . CLOSESQUARE

    CLOSESQUARE  shift, and go to state 37


State 33

   17 function_declarations: dtype func_name $@2 OPENPAREN . argument_list CLOSEPAREN statement_block

    error       shift, and go to state 34
    DTYPE_INT   shift, and go to state 3
    DTYPE_BOOL  shift, and go to state 4
    DTYPE_CHAR  shift, and go to state 5

    CLOSEPAREN  reduce using rule 22 (argument_list)

    dtype          go to state 35
    argument_list  go to state 38


State 34

   15 dtype: error .

    $default  reduce using rule 15 (dtype)


State 35

   21 argument_list: dtype . var_decl COMMA argument_list
   23              | dtype . ID error argument_list
   24              | dtype . error COMMA argument_list

    error  shift, and go to state 39
    ID     shift, and go to state 40

    var_decl  go to state 41


State 36

   19 function_declarations: VOID func_name $@3 OPENPAREN argument_list . CLOSEPAREN statement_block

    CLOSEPAREN  shift, and go to state 42


State 37

   69 var_decl: ID OPENSQUARE INTCONST CLOSESQUARE .

    $default  reduce using rule 69 (var_decl)


State 38

   17 function_declarations: dtype func_name $@2 OPENPAREN argument_list . CLOSEPAREN statement_block

    CLOSEPAREN  shift, and go to state 43


State 39

   24 argument_list: dtype error . COMMA argument_list

    COMMA  shift, and go to state 44


State 40

   23 argument_list: dtype ID . error argument_list
   68 var_decl: ID .
   69         | ID . OPENSQUARE INTCONST CLOSESQUARE

    error       shift, and go to state 45
    OPENSQUARE  shift, and go to state 27

    COMMA  reduce using rule 68 (var_decl)


State 41

   21 argument_list: dtype var_decl . COMMA argument_list

    COMMA  shift, and go to state 46


State 42

   19 function_declarations: VOID func_name $@3 OPENPAREN argument_list CLOSEPAREN . statement_block

    OPENCURLY  shift, and go to state 47

    statement_block  go to state 48


State 43

   17 function_declarations: dtype func_name $@2 OPENPAREN argument_list CLOSEPAREN . statement_block

    OPENCURLY  shift, and go to state 47

    statement_block  go to state 49


State 44

   24 argument_list: dtype error COMMA . argument_list

    error       shift, and go to state 34
    DTYPE_INT   shift, and go to state 3
    DTYPE_BOOL  shift, and go to state 4
    DTYPE_CHAR  shift, and go to state 5

    CLOSEPAREN  reduce using rule 22 (argument_list)

    dtype          go to state 35
    argument_list  go to state 50


State 45

   23 argument_list: dtype ID error . argument_list

    error       shift, and go to state 34
    DTYPE_INT   shift, and go to state 3
    DTYPE_BOOL  shift, and go to state 4
    DTYPE_CHAR  shift, and go to state 5

    CLOSEPAREN  reduce using rule 22 (argument_list)

    dtype          go to state 35
    argument_list  go to state 51


State 46

   21 argument_list: dtype var_decl COMMA . argument_list

    error       shift, and go to state 34
    DTYPE_INT   shift, and go to state 3
    DTYPE_BOOL  shift, and go to state 4
    DTYPE_CHAR  shift, and go to state 5

    CLOSEPAREN  reduce using rule 22 (argument_list)

    dtype          go to state 35
    argument_list  go to state 52


State 47

   26 statement_block: OPENCURLY . $@4 variable_list statement_list CLOSECURLY
   27                | OPENCURLY . variable_list statement_list error

    error       shift, and go to state 34
    DTYPE_INT   shift, and go to state 3
    DTYPE_BOOL  shift, and go to state 4
    DTYPE_CHAR  shift, and go to state 5

    error       [reduce using rule 25 ($@4)]
    error       [reduce using rule 28 (variable_list)]
    ID          reduce using rule 25 ($@4)
    ID          [reduce using rule 28 (variable_list)]
    OPENPAREN   reduce using rule 25 ($@4)
    OPENPAREN   [reduce using rule 28 (variable_list)]
    OPENCURLY   reduce using rule 25 ($@4)
    OPENCURLY   [reduce using rule 28 (variable_list)]
    CLOSECURLY  reduce using rule 25 ($@4)
    OPENNEGATE  reduce using rule 25 ($@4)
    OPENNEGATE  [reduce using rule 28 (variable_list)]
    DTYPE_INT   [reduce using rule 25 ($@4)]
    DTYPE_BOOL  [reduce using rule 25 ($@4)]
    DTYPE_CHAR  [reduce using rule 25 ($@4)]
    LOGICALNOT  reduce using rule 25 ($@4)
    LOGICALNOT  [reduce using rule 28 (variable_list)]
    IF          reduce using rule 25 ($@4)
    IF          [reduce using rule 28 (variable_list)]
    WHILE       reduce using rule 25 ($@4)
    WHILE       [reduce using rule 28 (variable_list)]
    RETURN      reduce using rule 25 ($@4)
    RETURN      [reduce using rule 28 (variable_list)]
    BOOLCONST   reduce using rule 25 ($@4)
    BOOLCONST   [reduce using rule 28 (variable_list)]
    INTCONST    reduce using rule 25 ($@4)
    INTCONST    [reduce using rule 28 (variable_list)]
    CHARCONST   reduce using rule 25 ($@4)
    CHARCONST   [reduce using rule 28 (variable_list)]

    variable_declarations  go to state 53
    variable_definitions   go to state 9
    dtype                  go to state 54
    $@4                    go to state 55
    variable_list          go to state 56


State 48

   19 function_declarations: VOID func_name $@3 OPENPAREN argument_list CLOSEPAREN statement_block .

    $default  reduce using rule 19 (function_declarations)


State 49

   17 function_declarations: dtype func_name $@2 OPENPAREN argument_list CLOSEPAREN statement_block .

    $default  reduce using rule 17 (function_declarations)


State 50

   24 argument_list: dtype error COMMA argument_list .

    $default  reduce using rule 24 (argument_list)


State 51

   23 argument_list: dtype ID error argument_list .

    $default  reduce using rule 23 (argument_list)


State 52

   21 argument_list: dtype var_decl COMMA argument_list .

    $default  reduce using rule 21 (argument_list)


State 53

   29 variable_list: variable_declarations . variable_list

    error       shift, and go to state 34
    DTYPE_INT   shift, and go to state 3
    DTYPE_BOOL  shift, and go to state 4
    DTYPE_CHAR  shift, and go to state 5

    error       [reduce using rule 28 (variable_list)]
    ID          reduce using rule 28 (variable_list)
    OPENPAREN   reduce using rule 28 (variable_list)
    OPENCURLY   reduce using rule 28 (variable_list)
    CLOSECURLY  reduce using rule 28 (variable_list)
    OPENNEGATE  reduce using rule 28 (variable_list)
    LOGICALNOT  reduce using rule 28 (variable_list)
    IF          reduce using rule 28 (variable_list)
    WHILE       reduce using rule 28 (variable_list)
    RETURN      reduce using rule 28 (variable_list)
    BOOLCONST   reduce using rule 28 (variable_list)
    INTCONST    reduce using rule 28 (variable_list)
    CHARCONST   reduce using rule 28 (variable_list)

    variable_declarations  go to state 53
    variable_definitions   go to state 9
    dtype                  go to state 54
    variable_list          go to state 57


State 54

    8 variable_definitions: dtype . var_decl

    ID  shift, and go to state 24

    var_decl  go to state 22


State 55

   26 statement_block: OPENCURLY $@4 . variable_list statement_list CLOSECURLY

    error       shift, and go to state 34
    DTYPE_INT   shift, and go to state 3
    DTYPE_BOOL  shift, and go to state 4
    DTYPE_CHAR  shift, and go to state 5

    error       [reduce using rule 28 (variable_list)]
    ID          reduce using rule 28 (variable_list)
    OPENPAREN   reduce using rule 28 (variable_list)
    OPENCURLY   reduce using rule 28 (variable_list)
    CLOSECURLY  reduce using rule 28 (variable_list)
    OPENNEGATE  reduce using rule 28 (variable_list)
    LOGICALNOT  reduce using rule 28 (variable_list)
    IF          reduce using rule 28 (variable_list)
    WHILE       reduce using rule 28 (variable_list)
    RETURN      reduce using rule 28 (variable_list)
    BOOLCONST   reduce using rule 28 (variable_list)
    INTCONST    reduce using rule 28 (variable_list)
    CHARCONST   reduce using rule 28 (variable_list)

    variable_declarations  go to state 53
    variable_definitions   go to state 9
    dtype                  go to state 54
    variable_list          go to state 58


State 56

   27 statement_block: OPENCURLY variable_list . statement_list error

    error       shift, and go to state 59
    ID          shift, and go to state 60
    OPENPAREN   shift, and go to state 61
    OPENCURLY   shift, and go to state 47
    OPENNEGATE  shift, and go to state 62
    LOGICALNOT  shift, and go to state 63
    IF          shift, and go to state 64
    WHILE       shift, and go to state 65
    RETURN      shift, and go to state 66
    BOOLCONST   shift, and go to state 67
    INTCONST    shift, and go to state 68
    CHARCONST   shift, and go to state 69

    error  [reduce using rule 30 (statement_list)]

    statement_block      go to state 70
    statement_list       go to state 71
    supported_statement  go to state 72
    if_statement         go to state 73
    while_statement      go to state 74
    return_statement     go to state 75
    alr_subexpression    go to state 76
    lhs                  go to state 77
    var_use              go to state 78
    supported_constant   go to state 79


State 57

   29 variable_list: variable_declarations variable_list .

    $default  reduce using rule 29 (variable_list)


State 58

   26 statement_block: OPENCURLY $@4 variable_list . statement_list CLOSECURLY

    error       shift, and go to state 59
    ID          shift, and go to state 60
    OPENPAREN   shift, and go to state 61
    OPENCURLY   shift, and go to state 47
    OPENNEGATE  shift, and go to state 62
    LOGICALNOT  shift, and go to state 63
    IF          shift, and go to state 64
    WHILE       shift, and go to state 65
    RETURN      shift, and go to state 66
    BOOLCONST   shift, and go to state 67
    INTCONST    shift, and go to state 68
    CHARCONST   shift, and go to state 69

    CLOSECURLY  reduce using rule 30 (statement_list)

    statement_block      go to state 70
    statement_list       go to state 80
    supported_statement  go to state 72
    if_statement         go to state 73
    while_statement      go to state 74
    return_statement     go to state 75
    alr_subexpression    go to state 76
    lhs                  go to state 77
    var_use              go to state 78
    supported_constant   go to state 79


State 59

   59 alr_subexpression: error . EQ alr_subexpression

    EQ  shift, and go to state 81


State 60

   49 alr_subexpression: ID . OPENPAREN id_list CLOSEPAREN
   66 lhs: ID .
   67    | ID . OPENSQUARE INTCONST CLOSESQUARE
   70 var_use: ID .
   71        | ID . OPENSQUARE INTCONST CLOSESQUARE

    OPENPAREN   shift, and go to state 82
    OPENSQUARE  shift, and go to state 83

    OPENPAREN  [reduce using rule 70 (var_use)]
    EQ         reduce using rule 66 (lhs)
    $default   reduce using rule 70 (var_use)


State 61

   50 alr_subexpression: OPENPAREN . alr_subexpression CLOSEPAREN

    error       shift, and go to state 59
    ID          shift, and go to state 60
    OPENPAREN   shift, and go to state 61
    OPENNEGATE  shift, and go to state 62
    LOGICALNOT  shift, and go to state 63
    BOOLCONST   shift, and go to state 67
    INTCONST    shift, and go to state 68
    CHARCONST   shift, and go to state 69

    alr_subexpression   go to state 84
    lhs                 go to state 77
    var_use             go to state 78
    supported_constant  go to state 79


State 62

   53 alr_subexpression: OPENNEGATE . alr_subexpression CLOSEPAREN
   75 supported_constant: OPENNEGATE . INTCONST CLOSEPAREN

    error       shift, and go to state 59
    ID          shift, and go to state 60
    OPENPAREN   shift, and go to state 61
    OPENNEGATE  shift, and go to state 62
    LOGICALNOT  shift, and go to state 63
    BOOLCONST   shift, and go to state 67
    INTCONST    shift, and go to state 85
    CHARCONST   shift, and go to state 69

    alr_subexpression   go to state 86
    lhs                 go to state 77
    var_use             go to state 78
    supported_constant  go to state 79


State 63

   58 alr_subexpression: LOGICALNOT . alr_subexpression

    error       shift, and go to state 59
    ID          shift, and go to state 60
    OPENPAREN   shift, and go to state 61
    OPENNEGATE  shift, and go to state 62
    LOGICALNOT  shift, and go to state 63
    BOOLCONST   shift, and go to state 67
    INTCONST    shift, and go to state 68
    CHARCONST   shift, and go to state 69

    alr_subexpression   go to state 87
    lhs                 go to state 77
    var_use             go to state 78
    supported_constant  go to state 79


State 64

   38 if_statement: IF . OPENPAREN alr_subexpression CLOSEPAREN statement_block else_statement

    OPENPAREN  shift, and go to state 88


State 65

   41 while_statement: WHILE . OPENPAREN alr_subexpression CLOSEPAREN statement_block

    OPENPAREN  shift, and go to state 89


State 66

   42 return_statement: RETURN . SEMI
   43                 | RETURN . alr_subexpression SEMI
   44                 | RETURN . error
   45                 | RETURN . alr_subexpression error

    error       shift, and go to state 90
    ID          shift, and go to state 60
    SEMI        shift, and go to state 91
    OPENPAREN   shift, and go to state 61
    OPENNEGATE  shift, and go to state 62
    LOGICALNOT  shift, and go to state 63
    BOOLCONST   shift, and go to state 67
    INTCONST    shift, and go to state 68
    CHARCONST   shift, and go to state 69

    alr_subexpression   go to state 92
    lhs                 go to state 77
    var_use             go to state 78
    supported_constant  go to state 79


State 67

   74 supported_constant: BOOLCONST .

    $default  reduce using rule 74 (supported_constant)


State 68

   72 supported_constant: INTCONST .

    $default  reduce using rule 72 (supported_constant)


State 69

   73 supported_constant: CHARCONST .

    $default  reduce using rule 73 (supported_constant)


State 70

   36 supported_statement: statement_block .

    $default  reduce using rule 36 (supported_statement)


State 71

   27 statement_block: OPENCURLY variable_list statement_list . error

    error  shift, and go to state 93


State 72

   31 statement_list: supported_statement . statement_list

    error       shift, and go to state 59
    ID          shift, and go to state 60
    OPENPAREN   shift, and go to state 61
    OPENCURLY   shift, and go to state 47
    OPENNEGATE  shift, and go to state 62
    LOGICALNOT  shift, and go to state 63
    IF          shift, and go to state 64
    WHILE       shift, and go to state 65
    RETURN      shift, and go to state 66
    BOOLCONST   shift, and go to state 67
    INTCONST    shift, and go to state 68
    CHARCONST   shift, and go to state 69

    error       [reduce using rule 30 (statement_list)]
    CLOSECURLY  reduce using rule 30 (statement_list)

    statement_block      go to state 70
    statement_list       go to state 94
    supported_statement  go to state 72
    if_statement         go to state 73
    while_statement      go to state 74
    return_statement     go to state 75
    alr_subexpression    go to state 76
    lhs                  go to state 77
    var_use              go to state 78
    supported_constant   go to state 79


State 73

   33 supported_statement: if_statement .

    $default  reduce using rule 33 (supported_statement)


State 74

   34 supported_statement: while_statement .

    $default  reduce using rule 34 (supported_statement)


State 75

   35 supported_statement: return_statement .

    $default  reduce using rule 35 (supported_statement)


State 76

   32 supported_statement: alr_subexpression . SEMI
   37                    | alr_subexpression . error
   52 alr_subexpression: alr_subexpression . @5 ARITH alr_subexpression
   55                  | alr_subexpression . @6 RELN alr_subexpression
   57                  | alr_subexpression . @7 LOGICAL alr_subexpression

    error  shift, and go to state 95
    SEMI   shift, and go to state 96

    ARITH    reduce using rule 51 (@5)
    RELN     reduce using rule 54 (@6)
    LOGICAL  reduce using rule 56 (@7)

    @5  go to state 97
    @6  go to state 98
    @7  go to state 99


State 77

   46 alr_subexpression: lhs . EQ alr_subexpression

    EQ  shift, and go to state 100


State 78

   48 alr_subexpression: var_use .
   60                  | var_use . error alr_subexpression
   61                  | var_use . OPENPAREN id_list error

    error      shift, and go to state 101
    OPENPAREN  shift, and go to state 102

    error       [reduce using rule 48 (alr_subexpression)]
    SEMI        reduce using rule 48 (alr_subexpression)
    CLOSEPAREN  reduce using rule 48 (alr_subexpression)
    ARITH       reduce using rule 48 (alr_subexpression)
    RELN        reduce using rule 48 (alr_subexpression)
    LOGICAL     reduce using rule 48 (alr_subexpression)


State 79

   47 alr_subexpression: supported_constant .

    $default  reduce using rule 47 (alr_subexpression)


State 80

   26 statement_block: OPENCURLY $@4 variable_list statement_list . CLOSECURLY

    CLOSECURLY  shift, and go to state 103


State 81

   59 alr_subexpression: error EQ . alr_subexpression

    error       shift, and go to state 59
    ID          shift, and go to state 60
    OPENPAREN   shift, and go to state 61
    OPENNEGATE  shift, and go to state 62
    LOGICALNOT  shift, and go to state 63
    BOOLCONST   shift, and go to state 67
    INTCONST    shift, and go to state 68
    CHARCONST   shift, and go to state 69

    alr_subexpression   go to state 104
    lhs                 go to state 77
    var_use             go to state 78
    supported_constant  go to state 79


State 82

   49 alr_subexpression: ID OPENPAREN . id_list CLOSEPAREN

    error  shift, and go to state 105
    ID     shift, and go to state 106

    COMMA       reduce using rule 64 (id_list)
    CLOSEPAREN  reduce using rule 64 (id_list)

    id_list  go to state 107
    var_use  go to state 108


State 83

   67 lhs: ID OPENSQUARE . INTCONST CLOSESQUARE
   71 var_use: ID OPENSQUARE . INTCONST CLOSESQUARE

    INTCONST  shift, and go to state 109


State 84

   50 alr_subexpression: OPENPAREN alr_subexpression . CLOSEPAREN
   52                  | alr_subexpression . @5 ARITH alr_subexpression
   55                  | alr_subexpression . @6 RELN alr_subexpression
   57                  | alr_subexpression . @7 LOGICAL alr_subexpression

    CLOSEPAREN  shift, and go to state 110

    RELN      reduce using rule 54 (@6)
    LOGICAL   reduce using rule 56 (@7)
    $default  reduce using rule 51 (@5)

    @5  go to state 97
    @6  go to state 98
    @7  go to state 99


State 85

   72 supported_constant: INTCONST .
   75                   | OPENNEGATE INTCONST . CLOSEPAREN

    CLOSEPAREN  shift, and go to state 111

    CLOSEPAREN  [reduce using rule 72 (supported_constant)]
    $default    reduce using rule 72 (supported_constant)


State 86

   52 alr_subexpression: alr_subexpression . @5 ARITH alr_subexpression
   53                  | OPENNEGATE alr_subexpression . CLOSEPAREN
   55                  | alr_subexpression . @6 RELN alr_subexpression
   57                  | alr_subexpression . @7 LOGICAL alr_subexpression

    CLOSEPAREN  shift, and go to state 112

    RELN      reduce using rule 54 (@6)
    LOGICAL   reduce using rule 56 (@7)
    $default  reduce using rule 51 (@5)

    @5  go to state 97
    @6  go to state 98
    @7  go to state 99


State 87

   52 alr_subexpression: alr_subexpression . @5 ARITH alr_subexpression
   55                  | alr_subexpression . @6 RELN alr_subexpression
   57                  | alr_subexpression . @7 LOGICAL alr_subexpression
   58                  | LOGICALNOT alr_subexpression .

    ARITH     reduce using rule 51 (@5)
    ARITH     [reduce using rule 58 (alr_subexpression)]
    RELN      reduce using rule 54 (@6)
    RELN      [reduce using rule 58 (alr_subexpression)]
    LOGICAL   reduce using rule 56 (@7)
    LOGICAL   [reduce using rule 58 (alr_subexpression)]
    $default  reduce using rule 58 (alr_subexpression)

    @5  go to state 97
    @6  go to state 98
    @7  go to state 99


State 88

   38 if_statement: IF OPENPAREN . alr_subexpression CLOSEPAREN statement_block else_statement

    error       shift, and go to state 59
    ID          shift, and go to state 60
    OPENPAREN   shift, and go to state 61
    OPENNEGATE  shift, and go to state 62
    LOGICALNOT  shift, and go to state 63
    BOOLCONST   shift, and go to state 67
    INTCONST    shift, and go to state 68
    CHARCONST   shift, and go to state 69

    alr_subexpression   go to state 113
    lhs                 go to state 77
    var_use             go to state 78
    supported_constant  go to state 79


State 89

   41 while_statement: WHILE OPENPAREN . alr_subexpression CLOSEPAREN statement_block

    error       shift, and go to state 59
    ID          shift, and go to state 60
    OPENPAREN   shift, and go to state 61
    OPENNEGATE  shift, and go to state 62
    LOGICALNOT  shift, and go to state 63
    BOOLCONST   shift, and go to state 67
    INTCONST    shift, and go to state 68
    CHARCONST   shift, and go to state 69

    alr_subexpression   go to state 114
    lhs                 go to state 77
    var_use             go to state 78
    supported_constant  go to state 79


State 90

   44 return_statement: RETURN error .
   59 alr_subexpression: error . EQ alr_subexpression

    EQ  shift, and go to state 81

    $default  reduce using rule 44 (return_statement)


State 91

   42 return_statement: RETURN SEMI .

    $default  reduce using rule 42 (return_statement)


State 92

   43 return_statement: RETURN alr_subexpression . SEMI
   45                 | RETURN alr_subexpression . error
   52 alr_subexpression: alr_subexpression . @5 ARITH alr_subexpression
   55                  | alr_subexpression . @6 RELN alr_subexpression
   57                  | alr_subexpression . @7 LOGICAL alr_subexpression

    error  shift, and go to state 115
    SEMI   shift, and go to state 116

    ARITH    reduce using rule 51 (@5)
    RELN     reduce using rule 54 (@6)
    LOGICAL  reduce using rule 56 (@7)

    @5  go to state 97
    @6  go to state 98
    @7  go to state 99


State 93

   27 statement_block: OPENCURLY variable_list statement_list error .

    $default  reduce using rule 27 (statement_block)


State 94

   31 statement_list: supported_statement statement_list .

    $default  reduce using rule 31 (statement_list)


State 95

   37 supported_statement: alr_subexpression error .

    $default  reduce using rule 37 (supported_statement)


State 96

   32 supported_statement: alr_subexpression SEMI .

    $default  reduce using rule 32 (supported_statement)


State 97

   52 alr_subexpression: alr_subexpression @5 . ARITH alr_subexpression

    ARITH  shift, and go to state 117


State 98

   55 alr_subexpression: alr_subexpression @6 . RELN alr_subexpression

    RELN  shift, and go to state 118


State 99

   57 alr_subexpression: alr_subexpression @7 . LOGICAL alr_subexpression

    LOGICAL  shift, and go to state 119


State 100

   46 alr_subexpression: lhs EQ . alr_subexpression

    error       shift, and go to state 59
    ID          shift, and go to state 60
    OPENPAREN   shift, and go to state 61
    OPENNEGATE  shift, and go to state 62
    LOGICALNOT  shift, and go to state 63
    BOOLCONST   shift, and go to state 67
    INTCONST    shift, and go to state 68
    CHARCONST   shift, and go to state 69

    alr_subexpression   go to state 120
    lhs                 go to state 77
    var_use             go to state 78
    supported_constant  go to state 79


State 101

   60 alr_subexpression: var_use error . alr_subexpression

    error       shift, and go to state 59
    ID          shift, and go to state 60
    OPENPAREN   shift, and go to state 61
    OPENNEGATE  shift, and go to state 62
    LOGICALNOT  shift, and go to state 63
    BOOLCONST   shift, and go to state 67
    INTCONST    shift, and go to state 68
    CHARCONST   shift, and go to state 69

    alr_subexpression   go to state 121
    lhs                 go to state 77
    var_use             go to state 78
    supported_constant  go to state 79


State 102

   61 alr_subexpression: var_use OPENPAREN . id_list error

    error  shift, and go to state 105
    ID     shift, and go to state 106

    error  [reduce using rule 64 (id_list)]
    COMMA  reduce using rule 64 (id_list)

    id_list  go to state 122
    var_use  go to state 108


State 103

   26 statement_block: OPENCURLY $@4 variable_list statement_list CLOSECURLY .

    $default  reduce using rule 26 (statement_block)


State 104

   52 alr_subexpression: alr_subexpression . @5 ARITH alr_subexpression
   55                  | alr_subexpression . @6 RELN alr_subexpression
   57                  | alr_subexpression . @7 LOGICAL alr_subexpression
   59                  | error EQ alr_subexpression .

    ARITH     reduce using rule 51 (@5)
    ARITH     [reduce using rule 59 (alr_subexpression)]
    RELN      reduce using rule 54 (@6)
    RELN      [reduce using rule 59 (alr_subexpression)]
    LOGICAL   reduce using rule 56 (@7)
    LOGICAL   [reduce using rule 59 (alr_subexpression)]
    $default  reduce using rule 59 (alr_subexpression)

    @5  go to state 97
    @6  go to state 98
    @7  go to state 99


State 105

   65 id_list: error . COMMA id_list

    COMMA  shift, and go to state 123


State 106

   70 var_use: ID .
   71        | ID . OPENSQUARE INTCONST CLOSESQUARE

    OPENSQUARE  shift, and go to state 124

    $default  reduce using rule 70 (var_use)


State 107

   49 alr_subexpression: ID OPENPAREN id_list . CLOSEPAREN
   62 id_list: id_list . COMMA var_use

    COMMA       shift, and go to state 125
    CLOSEPAREN  shift, and go to state 126


State 108

   63 id_list: var_use .

    $default  reduce using rule 63 (id_list)


State 109

   67 lhs: ID OPENSQUARE INTCONST . CLOSESQUARE
   71 var_use: ID OPENSQUARE INTCONST . CLOSESQUARE

    CLOSESQUARE  shift, and go to state 127


State 110

   50 alr_subexpression: OPENPAREN alr_subexpression CLOSEPAREN .

    $default  reduce using rule 50 (alr_subexpression)


State 111

   75 supported_constant: OPENNEGATE INTCONST CLOSEPAREN .

    $default  reduce using rule 75 (supported_constant)


State 112

   53 alr_subexpression: OPENNEGATE alr_subexpression CLOSEPAREN .

    $default  reduce using rule 53 (alr_subexpression)


State 113

   38 if_statement: IF OPENPAREN alr_subexpression . CLOSEPAREN statement_block else_statement
   52 alr_subexpression: alr_subexpression . @5 ARITH alr_subexpression
   55                  | alr_subexpression . @6 RELN alr_subexpression
   57                  | alr_subexpression . @7 LOGICAL alr_subexpression

    CLOSEPAREN  shift, and go to state 128

    RELN      reduce using rule 54 (@6)
    LOGICAL   reduce using rule 56 (@7)
    $default  reduce using rule 51 (@5)

    @5  go to state 97
    @6  go to state 98
    @7  go to state 99


State 114

   41 while_statement: WHILE OPENPAREN alr_subexpression . CLOSEPAREN statement_block
   52 alr_subexpression: alr_subexpression . @5 ARITH alr_subexpression
   55                  | alr_subexpression . @6 RELN alr_subexpression
   57                  | alr_subexpression . @7 LOGICAL alr_subexpression

    CLOSEPAREN  shift, and go to state 129

    RELN      reduce using rule 54 (@6)
    LOGICAL   reduce using rule 56 (@7)
    $default  reduce using rule 51 (@5)

    @5  go to state 97
    @6  go to state 98
    @7  go to state 99


State 115

   45 return_statement: RETURN alr_subexpression error .

    $default  reduce using rule 45 (return_statement)


State 116

   43 return_statement: RETURN alr_subexpression SEMI .

    $default  reduce using rule 43 (return_statement)


State 117

   52 alr_subexpression: alr_subexpression @5 ARITH . alr_subexpression

    error       shift, and go to state 59
    ID          shift, and go to state 60
    OPENPAREN   shift, and go to state 61
    OPENNEGATE  shift, and go to state 62
    LOGICALNOT  shift, and go to state 63
    BOOLCONST   shift, and go to state 67
    INTCONST    shift, and go to state 68
    CHARCONST   shift, and go to state 69

    alr_subexpression   go to state 130
    lhs                 go to state 77
    var_use             go to state 78
    supported_constant  go to state 79


State 118

   55 alr_subexpression: alr_subexpression @6 RELN . alr_subexpression

    error       shift, and go to state 59
    ID          shift, and go to state 60
    OPENPAREN   shift, and go to state 61
    OPENNEGATE  shift, and go to state 62
    LOGICALNOT  shift, and go to state 63
    BOOLCONST   shift, and go to state 67
    INTCONST    shift, and go to state 68
    CHARCONST   shift, and go to state 69

    alr_subexpression   go to state 131
    lhs                 go to state 77
    var_use             go to state 78
    supported_constant  go to state 79


State 119

   57 alr_subexpression: alr_subexpression @7 LOGICAL . alr_subexpression

    error       shift, and go to state 59
    ID          shift, and go to state 60
    OPENPAREN   shift, and go to state 61
    OPENNEGATE  shift, and go to state 62
    LOGICALNOT  shift, and go to state 63
    BOOLCONST   shift, and go to state 67
    INTCONST    shift, and go to state 68
    CHARCONST   shift, and go to state 69

    alr_subexpression   go to state 132
    lhs                 go to state 77
    var_use             go to state 78
    supported_constant  go to state 79


State 120

   46 alr_subexpression: lhs EQ alr_subexpression .
   52                  | alr_subexpression . @5 ARITH alr_subexpression
   55                  | alr_subexpression . @6 RELN alr_subexpression
   57                  | alr_subexpression . @7 LOGICAL alr_subexpression

    ARITH     reduce using rule 46 (alr_subexpression)
    ARITH     [reduce using rule 51 (@5)]
    RELN      reduce using rule 46 (alr_subexpression)
    RELN      [reduce using rule 54 (@6)]
    LOGICAL   reduce using rule 46 (alr_subexpression)
    LOGICAL   [reduce using rule 56 (@7)]
    $default  reduce using rule 46 (alr_subexpression)

    @5  go to state 97
    @6  go to state 98
    @7  go to state 99


State 121

   52 alr_subexpression: alr_subexpression . @5 ARITH alr_subexpression
   55                  | alr_subexpression . @6 RELN alr_subexpression
   57                  | alr_subexpression . @7 LOGICAL alr_subexpression
   60                  | var_use error alr_subexpression .

    ARITH     reduce using rule 51 (@5)
    ARITH     [reduce using rule 60 (alr_subexpression)]
    RELN      reduce using rule 54 (@6)
    RELN      [reduce using rule 60 (alr_subexpression)]
    LOGICAL   reduce using rule 56 (@7)
    LOGICAL   [reduce using rule 60 (alr_subexpression)]
    $default  reduce using rule 60 (alr_subexpression)

    @5  go to state 97
    @6  go to state 98
    @7  go to state 99


State 122

   61 alr_subexpression: var_use OPENPAREN id_list . error
   62 id_list: id_list . COMMA var_use

    error  shift, and go to state 133
    COMMA  shift, and go to state 125


State 123

   65 id_list: error COMMA . id_list

    error  shift, and go to state 105
    ID     shift, and go to state 106

    error       [reduce using rule 64 (id_list)]
    COMMA       reduce using rule 64 (id_list)
    CLOSEPAREN  reduce using rule 64 (id_list)

    id_list  go to state 134
    var_use  go to state 108


State 124

   71 var_use: ID OPENSQUARE . INTCONST CLOSESQUARE

    INTCONST  shift, and go to state 135


State 125

   62 id_list: id_list COMMA . var_use

    ID  shift, and go to state 106

    var_use  go to state 136


State 126

   49 alr_subexpression: ID OPENPAREN id_list CLOSEPAREN .

    $default  reduce using rule 49 (alr_subexpression)


State 127

   67 lhs: ID OPENSQUARE INTCONST CLOSESQUARE .
   71 var_use: ID OPENSQUARE INTCONST CLOSESQUARE .

    EQ        reduce using rule 67 (lhs)
    $default  reduce using rule 71 (var_use)


State 128

   38 if_statement: IF OPENPAREN alr_subexpression CLOSEPAREN . statement_block else_statement

    OPENCURLY  shift, and go to state 47

    statement_block  go to state 137


State 129

   41 while_statement: WHILE OPENPAREN alr_subexpression CLOSEPAREN . statement_block

    OPENCURLY  shift, and go to state 47

    statement_block  go to state 138


State 130

   52 alr_subexpression: alr_subexpression . @5 ARITH alr_subexpression
   52                  | alr_subexpression @5 ARITH alr_subexpression .
   55                  | alr_subexpression . @6 RELN alr_subexpression
   57                  | alr_subexpression . @7 LOGICAL alr_subexpression

    ARITH     reduce using rule 51 (@5)
    ARITH     [reduce using rule 52 (alr_subexpression)]
    RELN      reduce using rule 52 (alr_subexpression)
    RELN      [reduce using rule 54 (@6)]
    LOGICAL   reduce using rule 52 (alr_subexpression)
    LOGICAL   [reduce using rule 56 (@7)]
    $default  reduce using rule 52 (alr_subexpression)

    @5  go to state 97
    @6  go to state 98
    @7  go to state 99


State 131

   52 alr_subexpression: alr_subexpression . @5 ARITH alr_subexpression
   55                  | alr_subexpression . @6 RELN alr_subexpression
   55                  | alr_subexpression @6 RELN alr_subexpression .
   57                  | alr_subexpression . @7 LOGICAL alr_subexpression

    ARITH     reduce using rule 51 (@5)
    ARITH     [reduce using rule 55 (alr_subexpression)]
    RELN      reduce using rule 54 (@6)
    RELN      [reduce using rule 55 (alr_subexpression)]
    LOGICAL   reduce using rule 55 (alr_subexpression)
    LOGICAL   [reduce using rule 56 (@7)]
    $default  reduce using rule 55 (alr_subexpression)

    @5  go to state 97
    @6  go to state 98
    @7  go to state 99


State 132

   52 alr_subexpression: alr_subexpression . @5 ARITH alr_subexpression
   55                  | alr_subexpression . @6 RELN alr_subexpression
   57                  | alr_subexpression . @7 LOGICAL alr_subexpression
   57                  | alr_subexpression @7 LOGICAL alr_subexpression .

    ARITH     reduce using rule 51 (@5)
    ARITH     [reduce using rule 57 (alr_subexpression)]
    RELN      reduce using rule 54 (@6)
    RELN      [reduce using rule 57 (alr_subexpression)]
    LOGICAL   reduce using rule 56 (@7)
    LOGICAL   [reduce using rule 57 (alr_subexpression)]
    $default  reduce using rule 57 (alr_subexpression)

    @5  go to state 97
    @6  go to state 98
    @7  go to state 99


State 133

   61 alr_subexpression: var_use OPENPAREN id_list error .

    $default  reduce using rule 61 (alr_subexpression)


State 134

   62 id_list: id_list . COMMA var_use
   65        | error COMMA id_list .

    COMMA  shift, and go to state 125

    COMMA     [reduce using rule 65 (id_list)]
    $default  reduce using rule 65 (id_list)


State 135

   71 var_use: ID OPENSQUARE INTCONST . CLOSESQUARE

    CLOSESQUARE  shift, and go to state 139


State 136

   62 id_list: id_list COMMA var_use .

    $default  reduce using rule 62 (id_list)


State 137

   38 if_statement: IF OPENPAREN alr_subexpression CLOSEPAREN statement_block . else_statement

    ELSE  shift, and go to state 140

    $default  reduce using rule 39 (else_statement)

    else_statement  go to state 141


State 138

   41 while_statement: WHILE OPENPAREN alr_subexpression CLOSEPAREN statement_block .

    $default  reduce using rule 41 (while_statement)


State 139

   71 var_use: ID OPENSQUARE INTCONST CLOSESQUARE .

    $default  reduce using rule 71 (var_use)


State 140

   40 else_statement: ELSE . statement_block

    OPENCURLY  shift, and go to state 47

    statement_block  go to state 142


State 141

   38 if_statement: IF OPENPAREN alr_subexpression CLOSEPAREN statement_block else_statement .

    $default  reduce using rule 38 (if_statement)


State 142

   40 else_statement: ELSE statement_block .

    $default  reduce using rule 40 (else_statement)
