Terminals unused in grammar

   FOR
   PRINT
   READ
   TERMINAL
   VALUE


State 82 conflicts: 1 shift/reduce
State 84 conflicts: 3 reduce/reduce
State 98 conflicts: 3 reduce/reduce
State 113 conflicts: 3 reduce/reduce
State 120 conflicts: 3 reduce/reduce
State 121 conflicts: 3 reduce/reduce
State 122 conflicts: 3 reduce/reduce


Grammar

    0 $accept: mad_program NONTERMINAL

    1 mad_program: supported_declarations
    2            | supported_declarations mad_program
    3            | error '\n'

    4 supported_declarations: variable_declarations
    5                       | function_declarations

    6 variable_declarations: variable_definitions SEMI

    7 variable_definitions: dtype var_decl

    8 @1: %empty

    9 variable_definitions: variable_definitions COMMA @1 var_decl
   10                     | variable_definitions error var_decl '\n'

   11 dtype: DTYPE_INT
   12      | DTYPE_BOOL
   13      | DTYPE_CHAR

   14 $@2: %empty

   15 function_declarations: dtype func_name OPENPAREN $@2 argument_list CLOSEPAREN statement_block

   16 $@3: %empty

   17 function_declarations: VOID func_name $@3 OPENPAREN argument_list CLOSEPAREN statement_block

   18 func_name: ID

   19 argument_list: dtype var_decl COMMA argument_list
   20              | %empty
   21              | dtype ID error argument_list
   22              | dtype error COMMA argument_list

   23 statement_block: opencurly variable_list statement_list CLOSECURLY

   24 opencurly: OPENCURLY

   25 variable_list: %empty
   26              | variable_declarations variable_list

   27 statement_list: %empty
   28               | supported_statement statement_list

   29 supported_statement: alr_subexpression SEMI
   30                    | if_statement
   31                    | while_statement
   32                    | return_statement
   33                    | statement_block
   34                    | alr_subexpression error

   35 if_statement: IF OPENPAREN alr_subexpression CLOSEPAREN statement_block else_statement

   36 else_statement: %empty
   37               | ELSE statement_block

   38 while_statement: WHILE OPENPAREN alr_subexpression CLOSEPAREN statement_block

   39 return_statement: RETURN SEMI
   40                 | RETURN alr_subexpression SEMI
   41                 | RETURN error
   42                 | RETURN alr_subexpression error

   43 alr_subexpression: lhs EQ alr_subexpression
   44                  | supported_constant
   45                  | var_use
   46                  | ID OPENPAREN id_list CLOSEPAREN
   47                  | OPENPAREN alr_subexpression CLOSEPAREN

   48 @4: %empty

   49 alr_subexpression: alr_subexpression @4 ARITH alr_subexpression
   50                  | OPENNEGATE alr_subexpression CLOSEPAREN

   51 @5: %empty

   52 alr_subexpression: alr_subexpression @5 RELN alr_subexpression

   53 @6: %empty

   54 alr_subexpression: alr_subexpression @6 LOGICAL alr_subexpression
   55                  | LOGICALNOT alr_subexpression
   56                  | error EQ alr_subexpression

   57 id_list: id_list COMMA var_use
   58        | var_use
   59        | %empty

   60 lhs: ID
   61    | ID OPENSQUARE INTCONST CLOSESQUARE

   62 var_decl: ID
   63         | ID OPENSQUARE INTCONST CLOSESQUARE

   64 var_use: ID
   65        | ID OPENSQUARE INTCONST CLOSESQUARE

   66 supported_constant: INTCONST
   67                   | CHARCONST
   68                   | BOOLCONST
   69                   | OPENNEGATE INTCONST CLOSEPAREN


Terminals, with rules where they appear

NONTERMINAL (0) 0
TERMINAL (1)
VALUE (2)
'\n' (10) 3 10
error (256) 3 10 21 22 34 41 42 56
ID (258) 18 21 46 60 61 62 63 64 65
COMMA (259) 9 19 22 57
SEMI (260) 6 29 39 40
OPENPAREN (261) 15 17 35 38 46 47
CLOSEPAREN (262) 15 17 35 38 46 47 50 69
OPENCURLY (263) 24
CLOSECURLY (264) 23
OPENSQUARE (265) 61 63 65
CLOSESQUARE (266) 61 63 65
OPENNEGATE (267) 50 69
VOID (268) 17
DTYPE_INT (269) 11
DTYPE_BOOL (270) 12
DTYPE_CHAR (271) 13
EQ (272) 43 56
ARITH (273) 49
RELN (274) 52
LOGICAL (275) 54
LOGICALNOT (276) 55
IF (277) 35
ELSE (278) 37
WHILE (279) 38
FOR (280)
RETURN (281) 39 40 41 42
PRINT (282)
READ (283)
BOOLCONST (284) 68
INTCONST (285) 61 63 65 66 69
CHARCONST (286) 67


Nonterminals, with rules where they appear

$accept (35)
    on left: 0
mad_program (36)
    on left: 1 2 3, on right: 0 2
supported_declarations (37)
    on left: 4 5, on right: 1 2
variable_declarations (38)
    on left: 6, on right: 4 26
variable_definitions (39)
    on left: 7 9 10, on right: 6 9 10
@1 (40)
    on left: 8, on right: 9
dtype (41)
    on left: 11 12 13, on right: 7 15 19 21 22
function_declarations (42)
    on left: 15 17, on right: 5
$@2 (43)
    on left: 14, on right: 15
$@3 (44)
    on left: 16, on right: 17
func_name (45)
    on left: 18, on right: 15 17
argument_list (46)
    on left: 19 20 21 22, on right: 15 17 19 21 22
statement_block (47)
    on left: 23, on right: 15 17 33 35 37 38
opencurly (48)
    on left: 24, on right: 23
variable_list (49)
    on left: 25 26, on right: 23 26
statement_list (50)
    on left: 27 28, on right: 23 28
supported_statement (51)
    on left: 29 30 31 32 33 34, on right: 28
if_statement (52)
    on left: 35, on right: 30
else_statement (53)
    on left: 36 37, on right: 35
while_statement (54)
    on left: 38, on right: 31
return_statement (55)
    on left: 39 40 41 42, on right: 32
alr_subexpression (56)
    on left: 43 44 45 46 47 49 50 52 54 55 56, on right: 29 34 35 38
    40 42 43 47 49 50 52 54 55 56
@4 (57)
    on left: 48, on right: 49
@5 (58)
    on left: 51, on right: 52
@6 (59)
    on left: 53, on right: 54
id_list (60)
    on left: 57 58 59, on right: 46 57
lhs (61)
    on left: 60 61, on right: 43
var_decl (62)
    on left: 62 63, on right: 7 9 10 19
var_use (63)
    on left: 64 65, on right: 45 57 58
supported_constant (64)
    on left: 66 67 68 69, on right: 44


State 0

    0 $accept: . mad_program NONTERMINAL

    error       shift, and go to state 1
    VOID        shift, and go to state 2
    DTYPE_INT   shift, and go to state 3
    DTYPE_BOOL  shift, and go to state 4
    DTYPE_CHAR  shift, and go to state 5

    mad_program             go to state 6
    supported_declarations  go to state 7
    variable_declarations   go to state 8
    variable_definitions    go to state 9
    dtype                   go to state 10
    function_declarations   go to state 11


State 1

    3 mad_program: error . '\n'

    '\n'  shift, and go to state 12


State 2

   17 function_declarations: VOID . func_name $@3 OPENPAREN argument_list CLOSEPAREN statement_block

    ID  shift, and go to state 13

    func_name  go to state 14


State 3

   11 dtype: DTYPE_INT .

    $default  reduce using rule 11 (dtype)


State 4

   12 dtype: DTYPE_BOOL .

    $default  reduce using rule 12 (dtype)


State 5

   13 dtype: DTYPE_CHAR .

    $default  reduce using rule 13 (dtype)


State 6

    0 $accept: mad_program . NONTERMINAL

    NONTERMINAL  shift, and go to state 15


State 7

    1 mad_program: supported_declarations .
    2            | supported_declarations . mad_program

    error       shift, and go to state 1
    VOID        shift, and go to state 2
    DTYPE_INT   shift, and go to state 3
    DTYPE_BOOL  shift, and go to state 4
    DTYPE_CHAR  shift, and go to state 5

    NONTERMINAL  reduce using rule 1 (mad_program)

    mad_program             go to state 16
    supported_declarations  go to state 7
    variable_declarations   go to state 8
    variable_definitions    go to state 9
    dtype                   go to state 10
    function_declarations   go to state 11


State 8

    4 supported_declarations: variable_declarations .

    $default  reduce using rule 4 (supported_declarations)


State 9

    6 variable_declarations: variable_definitions . SEMI
    9 variable_definitions: variable_definitions . COMMA @1 var_decl
   10                     | variable_definitions . error var_decl '\n'

    error  shift, and go to state 17
    COMMA  shift, and go to state 18
    SEMI   shift, and go to state 19


State 10

    7 variable_definitions: dtype . var_decl
   15 function_declarations: dtype . func_name OPENPAREN $@2 argument_list CLOSEPAREN statement_block

    ID  shift, and go to state 20

    func_name  go to state 21
    var_decl   go to state 22


State 11

    5 supported_declarations: function_declarations .

    $default  reduce using rule 5 (supported_declarations)


State 12

    3 mad_program: error '\n' .

    $default  reduce using rule 3 (mad_program)


State 13

   18 func_name: ID .

    $default  reduce using rule 18 (func_name)


State 14

   17 function_declarations: VOID func_name . $@3 OPENPAREN argument_list CLOSEPAREN statement_block

    $default  reduce using rule 16 ($@3)

    $@3  go to state 23


State 15

    0 $accept: mad_program NONTERMINAL .

    $default  accept


State 16

    2 mad_program: supported_declarations mad_program .

    $default  reduce using rule 2 (mad_program)


State 17

   10 variable_definitions: variable_definitions error . var_decl '\n'

    ID  shift, and go to state 24

    var_decl  go to state 25


State 18

    9 variable_definitions: variable_definitions COMMA . @1 var_decl

    $default  reduce using rule 8 (@1)

    @1  go to state 26


State 19

    6 variable_declarations: variable_definitions SEMI .

    $default  reduce using rule 6 (variable_declarations)


State 20

   18 func_name: ID .
   62 var_decl: ID .
   63         | ID . OPENSQUARE INTCONST CLOSESQUARE

    OPENSQUARE  shift, and go to state 27

    OPENPAREN  reduce using rule 18 (func_name)
    $default   reduce using rule 62 (var_decl)


State 21

   15 function_declarations: dtype func_name . OPENPAREN $@2 argument_list CLOSEPAREN statement_block

    OPENPAREN  shift, and go to state 28


State 22

    7 variable_definitions: dtype var_decl .

    $default  reduce using rule 7 (variable_definitions)


State 23

   17 function_declarations: VOID func_name $@3 . OPENPAREN argument_list CLOSEPAREN statement_block

    OPENPAREN  shift, and go to state 29


State 24

   62 var_decl: ID .
   63         | ID . OPENSQUARE INTCONST CLOSESQUARE

    OPENSQUARE  shift, and go to state 27

    $default  reduce using rule 62 (var_decl)


State 25

   10 variable_definitions: variable_definitions error var_decl . '\n'

    '\n'  shift, and go to state 30


State 26

    9 variable_definitions: variable_definitions COMMA @1 . var_decl

    ID  shift, and go to state 24

    var_decl  go to state 31


State 27

   63 var_decl: ID OPENSQUARE . INTCONST CLOSESQUARE

    INTCONST  shift, and go to state 32


State 28

   15 function_declarations: dtype func_name OPENPAREN . $@2 argument_list CLOSEPAREN statement_block

    $default  reduce using rule 14 ($@2)

    $@2  go to state 33


State 29

   17 function_declarations: VOID func_name $@3 OPENPAREN . argument_list CLOSEPAREN statement_block

    DTYPE_INT   shift, and go to state 3
    DTYPE_BOOL  shift, and go to state 4
    DTYPE_CHAR  shift, and go to state 5

    $default  reduce using rule 20 (argument_list)

    dtype          go to state 34
    argument_list  go to state 35


State 30

   10 variable_definitions: variable_definitions error var_decl '\n' .

    $default  reduce using rule 10 (variable_definitions)


State 31

    9 variable_definitions: variable_definitions COMMA @1 var_decl .

    $default  reduce using rule 9 (variable_definitions)


State 32

   63 var_decl: ID OPENSQUARE INTCONST . CLOSESQUARE

    CLOSESQUARE  shift, and go to state 36


State 33

   15 function_declarations: dtype func_name OPENPAREN $@2 . argument_list CLOSEPAREN statement_block

    DTYPE_INT   shift, and go to state 3
    DTYPE_BOOL  shift, and go to state 4
    DTYPE_CHAR  shift, and go to state 5

    $default  reduce using rule 20 (argument_list)

    dtype          go to state 34
    argument_list  go to state 37


State 34

   19 argument_list: dtype . var_decl COMMA argument_list
   21              | dtype . ID error argument_list
   22              | dtype . error COMMA argument_list

    error  shift, and go to state 38
    ID     shift, and go to state 39

    var_decl  go to state 40


State 35

   17 function_declarations: VOID func_name $@3 OPENPAREN argument_list . CLOSEPAREN statement_block

    CLOSEPAREN  shift, and go to state 41


State 36

   63 var_decl: ID OPENSQUARE INTCONST CLOSESQUARE .

    $default  reduce using rule 63 (var_decl)


State 37

   15 function_declarations: dtype func_name OPENPAREN $@2 argument_list . CLOSEPAREN statement_block

    CLOSEPAREN  shift, and go to state 42


State 38

   22 argument_list: dtype error . COMMA argument_list

    COMMA  shift, and go to state 43


State 39

   21 argument_list: dtype ID . error argument_list
   62 var_decl: ID .
   63         | ID . OPENSQUARE INTCONST CLOSESQUARE

    error       shift, and go to state 44
    OPENSQUARE  shift, and go to state 27

    COMMA  reduce using rule 62 (var_decl)


State 40

   19 argument_list: dtype var_decl . COMMA argument_list

    COMMA  shift, and go to state 45


State 41

   17 function_declarations: VOID func_name $@3 OPENPAREN argument_list CLOSEPAREN . statement_block

    OPENCURLY  shift, and go to state 46

    statement_block  go to state 47
    opencurly        go to state 48


State 42

   15 function_declarations: dtype func_name OPENPAREN $@2 argument_list CLOSEPAREN . statement_block

    OPENCURLY  shift, and go to state 46

    statement_block  go to state 49
    opencurly        go to state 48


State 43

   22 argument_list: dtype error COMMA . argument_list

    DTYPE_INT   shift, and go to state 3
    DTYPE_BOOL  shift, and go to state 4
    DTYPE_CHAR  shift, and go to state 5

    $default  reduce using rule 20 (argument_list)

    dtype          go to state 34
    argument_list  go to state 50


State 44

   21 argument_list: dtype ID error . argument_list

    DTYPE_INT   shift, and go to state 3
    DTYPE_BOOL  shift, and go to state 4
    DTYPE_CHAR  shift, and go to state 5

    $default  reduce using rule 20 (argument_list)

    dtype          go to state 34
    argument_list  go to state 51


State 45

   19 argument_list: dtype var_decl COMMA . argument_list

    DTYPE_INT   shift, and go to state 3
    DTYPE_BOOL  shift, and go to state 4
    DTYPE_CHAR  shift, and go to state 5

    $default  reduce using rule 20 (argument_list)

    dtype          go to state 34
    argument_list  go to state 52


State 46

   24 opencurly: OPENCURLY .

    $default  reduce using rule 24 (opencurly)


State 47

   17 function_declarations: VOID func_name $@3 OPENPAREN argument_list CLOSEPAREN statement_block .

    $default  reduce using rule 17 (function_declarations)


State 48

   23 statement_block: opencurly . variable_list statement_list CLOSECURLY

    DTYPE_INT   shift, and go to state 3
    DTYPE_BOOL  shift, and go to state 4
    DTYPE_CHAR  shift, and go to state 5

    $default  reduce using rule 25 (variable_list)

    variable_declarations  go to state 53
    variable_definitions   go to state 9
    dtype                  go to state 54
    variable_list          go to state 55


State 49

   15 function_declarations: dtype func_name OPENPAREN $@2 argument_list CLOSEPAREN statement_block .

    $default  reduce using rule 15 (function_declarations)


State 50

   22 argument_list: dtype error COMMA argument_list .

    $default  reduce using rule 22 (argument_list)


State 51

   21 argument_list: dtype ID error argument_list .

    $default  reduce using rule 21 (argument_list)


State 52

   19 argument_list: dtype var_decl COMMA argument_list .

    $default  reduce using rule 19 (argument_list)


State 53

   26 variable_list: variable_declarations . variable_list

    DTYPE_INT   shift, and go to state 3
    DTYPE_BOOL  shift, and go to state 4
    DTYPE_CHAR  shift, and go to state 5

    $default  reduce using rule 25 (variable_list)

    variable_declarations  go to state 53
    variable_definitions   go to state 9
    dtype                  go to state 54
    variable_list          go to state 56


State 54

    7 variable_definitions: dtype . var_decl

    ID  shift, and go to state 24

    var_decl  go to state 22


State 55

   23 statement_block: opencurly variable_list . statement_list CLOSECURLY

    error       shift, and go to state 57
    ID          shift, and go to state 58
    OPENPAREN   shift, and go to state 59
    OPENCURLY   shift, and go to state 46
    OPENNEGATE  shift, and go to state 60
    LOGICALNOT  shift, and go to state 61
    IF          shift, and go to state 62
    WHILE       shift, and go to state 63
    RETURN      shift, and go to state 64
    BOOLCONST   shift, and go to state 65
    INTCONST    shift, and go to state 66
    CHARCONST   shift, and go to state 67

    CLOSECURLY  reduce using rule 27 (statement_list)

    statement_block      go to state 68
    opencurly            go to state 48
    statement_list       go to state 69
    supported_statement  go to state 70
    if_statement         go to state 71
    while_statement      go to state 72
    return_statement     go to state 73
    alr_subexpression    go to state 74
    lhs                  go to state 75
    var_use              go to state 76
    supported_constant   go to state 77


State 56

   26 variable_list: variable_declarations variable_list .

    $default  reduce using rule 26 (variable_list)


State 57

   56 alr_subexpression: error . EQ alr_subexpression

    EQ  shift, and go to state 78


State 58

   46 alr_subexpression: ID . OPENPAREN id_list CLOSEPAREN
   60 lhs: ID .
   61    | ID . OPENSQUARE INTCONST CLOSESQUARE
   64 var_use: ID .
   65        | ID . OPENSQUARE INTCONST CLOSESQUARE

    OPENPAREN   shift, and go to state 79
    OPENSQUARE  shift, and go to state 80

    EQ        reduce using rule 60 (lhs)
    $default  reduce using rule 64 (var_use)


State 59

   47 alr_subexpression: OPENPAREN . alr_subexpression CLOSEPAREN

    error       shift, and go to state 57
    ID          shift, and go to state 58
    OPENPAREN   shift, and go to state 59
    OPENNEGATE  shift, and go to state 60
    LOGICALNOT  shift, and go to state 61
    BOOLCONST   shift, and go to state 65
    INTCONST    shift, and go to state 66
    CHARCONST   shift, and go to state 67

    alr_subexpression   go to state 81
    lhs                 go to state 75
    var_use             go to state 76
    supported_constant  go to state 77


State 60

   50 alr_subexpression: OPENNEGATE . alr_subexpression CLOSEPAREN
   69 supported_constant: OPENNEGATE . INTCONST CLOSEPAREN

    error       shift, and go to state 57
    ID          shift, and go to state 58
    OPENPAREN   shift, and go to state 59
    OPENNEGATE  shift, and go to state 60
    LOGICALNOT  shift, and go to state 61
    BOOLCONST   shift, and go to state 65
    INTCONST    shift, and go to state 82
    CHARCONST   shift, and go to state 67

    alr_subexpression   go to state 83
    lhs                 go to state 75
    var_use             go to state 76
    supported_constant  go to state 77


State 61

   55 alr_subexpression: LOGICALNOT . alr_subexpression

    error       shift, and go to state 57
    ID          shift, and go to state 58
    OPENPAREN   shift, and go to state 59
    OPENNEGATE  shift, and go to state 60
    LOGICALNOT  shift, and go to state 61
    BOOLCONST   shift, and go to state 65
    INTCONST    shift, and go to state 66
    CHARCONST   shift, and go to state 67

    alr_subexpression   go to state 84
    lhs                 go to state 75
    var_use             go to state 76
    supported_constant  go to state 77


State 62

   35 if_statement: IF . OPENPAREN alr_subexpression CLOSEPAREN statement_block else_statement

    OPENPAREN  shift, and go to state 85


State 63

   38 while_statement: WHILE . OPENPAREN alr_subexpression CLOSEPAREN statement_block

    OPENPAREN  shift, and go to state 86


State 64

   39 return_statement: RETURN . SEMI
   40                 | RETURN . alr_subexpression SEMI
   41                 | RETURN . error
   42                 | RETURN . alr_subexpression error

    error       shift, and go to state 87
    ID          shift, and go to state 58
    SEMI        shift, and go to state 88
    OPENPAREN   shift, and go to state 59
    OPENNEGATE  shift, and go to state 60
    LOGICALNOT  shift, and go to state 61
    BOOLCONST   shift, and go to state 65
    INTCONST    shift, and go to state 66
    CHARCONST   shift, and go to state 67

    alr_subexpression   go to state 89
    lhs                 go to state 75
    var_use             go to state 76
    supported_constant  go to state 77


State 65

   68 supported_constant: BOOLCONST .

    $default  reduce using rule 68 (supported_constant)


State 66

   66 supported_constant: INTCONST .

    $default  reduce using rule 66 (supported_constant)


State 67

   67 supported_constant: CHARCONST .

    $default  reduce using rule 67 (supported_constant)


State 68

   33 supported_statement: statement_block .

    $default  reduce using rule 33 (supported_statement)


State 69

   23 statement_block: opencurly variable_list statement_list . CLOSECURLY

    CLOSECURLY  shift, and go to state 90


State 70

   28 statement_list: supported_statement . statement_list

    error       shift, and go to state 57
    ID          shift, and go to state 58
    OPENPAREN   shift, and go to state 59
    OPENCURLY   shift, and go to state 46
    OPENNEGATE  shift, and go to state 60
    LOGICALNOT  shift, and go to state 61
    IF          shift, and go to state 62
    WHILE       shift, and go to state 63
    RETURN      shift, and go to state 64
    BOOLCONST   shift, and go to state 65
    INTCONST    shift, and go to state 66
    CHARCONST   shift, and go to state 67

    CLOSECURLY  reduce using rule 27 (statement_list)

    statement_block      go to state 68
    opencurly            go to state 48
    statement_list       go to state 91
    supported_statement  go to state 70
    if_statement         go to state 71
    while_statement      go to state 72
    return_statement     go to state 73
    alr_subexpression    go to state 74
    lhs                  go to state 75
    var_use              go to state 76
    supported_constant   go to state 77


State 71

   30 supported_statement: if_statement .

    $default  reduce using rule 30 (supported_statement)


State 72

   31 supported_statement: while_statement .

    $default  reduce using rule 31 (supported_statement)


State 73

   32 supported_statement: return_statement .

    $default  reduce using rule 32 (supported_statement)


State 74

   29 supported_statement: alr_subexpression . SEMI
   34                    | alr_subexpression . error
   49 alr_subexpression: alr_subexpression . @4 ARITH alr_subexpression
   52                  | alr_subexpression . @5 RELN alr_subexpression
   54                  | alr_subexpression . @6 LOGICAL alr_subexpression

    error  shift, and go to state 92
    SEMI   shift, and go to state 93

    ARITH    reduce using rule 48 (@4)
    RELN     reduce using rule 51 (@5)
    LOGICAL  reduce using rule 53 (@6)

    @4  go to state 94
    @5  go to state 95
    @6  go to state 96


State 75

   43 alr_subexpression: lhs . EQ alr_subexpression

    EQ  shift, and go to state 97


State 76

   45 alr_subexpression: var_use .

    $default  reduce using rule 45 (alr_subexpression)


State 77

   44 alr_subexpression: supported_constant .

    $default  reduce using rule 44 (alr_subexpression)


State 78

   56 alr_subexpression: error EQ . alr_subexpression

    error       shift, and go to state 57
    ID          shift, and go to state 58
    OPENPAREN   shift, and go to state 59
    OPENNEGATE  shift, and go to state 60
    LOGICALNOT  shift, and go to state 61
    BOOLCONST   shift, and go to state 65
    INTCONST    shift, and go to state 66
    CHARCONST   shift, and go to state 67

    alr_subexpression   go to state 98
    lhs                 go to state 75
    var_use             go to state 76
    supported_constant  go to state 77


State 79

   46 alr_subexpression: ID OPENPAREN . id_list CLOSEPAREN

    ID  shift, and go to state 99

    $default  reduce using rule 59 (id_list)

    id_list  go to state 100
    var_use  go to state 101


State 80

   61 lhs: ID OPENSQUARE . INTCONST CLOSESQUARE
   65 var_use: ID OPENSQUARE . INTCONST CLOSESQUARE

    INTCONST  shift, and go to state 102


State 81

   47 alr_subexpression: OPENPAREN alr_subexpression . CLOSEPAREN
   49                  | alr_subexpression . @4 ARITH alr_subexpression
   52                  | alr_subexpression . @5 RELN alr_subexpression
   54                  | alr_subexpression . @6 LOGICAL alr_subexpression

    CLOSEPAREN  shift, and go to state 103

    RELN      reduce using rule 51 (@5)
    LOGICAL   reduce using rule 53 (@6)
    $default  reduce using rule 48 (@4)

    @4  go to state 94
    @5  go to state 95
    @6  go to state 96


State 82

   66 supported_constant: INTCONST .
   69                   | OPENNEGATE INTCONST . CLOSEPAREN

    CLOSEPAREN  shift, and go to state 104

    CLOSEPAREN  [reduce using rule 66 (supported_constant)]
    $default    reduce using rule 66 (supported_constant)


State 83

   49 alr_subexpression: alr_subexpression . @4 ARITH alr_subexpression
   50                  | OPENNEGATE alr_subexpression . CLOSEPAREN
   52                  | alr_subexpression . @5 RELN alr_subexpression
   54                  | alr_subexpression . @6 LOGICAL alr_subexpression

    CLOSEPAREN  shift, and go to state 105

    RELN      reduce using rule 51 (@5)
    LOGICAL   reduce using rule 53 (@6)
    $default  reduce using rule 48 (@4)

    @4  go to state 94
    @5  go to state 95
    @6  go to state 96


State 84

   49 alr_subexpression: alr_subexpression . @4 ARITH alr_subexpression
   52                  | alr_subexpression . @5 RELN alr_subexpression
   54                  | alr_subexpression . @6 LOGICAL alr_subexpression
   55                  | LOGICALNOT alr_subexpression .

    ARITH     reduce using rule 48 (@4)
    ARITH     [reduce using rule 55 (alr_subexpression)]
    RELN      reduce using rule 51 (@5)
    RELN      [reduce using rule 55 (alr_subexpression)]
    LOGICAL   reduce using rule 53 (@6)
    LOGICAL   [reduce using rule 55 (alr_subexpression)]
    $default  reduce using rule 55 (alr_subexpression)

    @4  go to state 94
    @5  go to state 95
    @6  go to state 96


State 85

   35 if_statement: IF OPENPAREN . alr_subexpression CLOSEPAREN statement_block else_statement

    error       shift, and go to state 57
    ID          shift, and go to state 58
    OPENPAREN   shift, and go to state 59
    OPENNEGATE  shift, and go to state 60
    LOGICALNOT  shift, and go to state 61
    BOOLCONST   shift, and go to state 65
    INTCONST    shift, and go to state 66
    CHARCONST   shift, and go to state 67

    alr_subexpression   go to state 106
    lhs                 go to state 75
    var_use             go to state 76
    supported_constant  go to state 77


State 86

   38 while_statement: WHILE OPENPAREN . alr_subexpression CLOSEPAREN statement_block

    error       shift, and go to state 57
    ID          shift, and go to state 58
    OPENPAREN   shift, and go to state 59
    OPENNEGATE  shift, and go to state 60
    LOGICALNOT  shift, and go to state 61
    BOOLCONST   shift, and go to state 65
    INTCONST    shift, and go to state 66
    CHARCONST   shift, and go to state 67

    alr_subexpression   go to state 107
    lhs                 go to state 75
    var_use             go to state 76
    supported_constant  go to state 77


State 87

   41 return_statement: RETURN error .
   56 alr_subexpression: error . EQ alr_subexpression

    EQ  shift, and go to state 78

    $default  reduce using rule 41 (return_statement)


State 88

   39 return_statement: RETURN SEMI .

    $default  reduce using rule 39 (return_statement)


State 89

   40 return_statement: RETURN alr_subexpression . SEMI
   42                 | RETURN alr_subexpression . error
   49 alr_subexpression: alr_subexpression . @4 ARITH alr_subexpression
   52                  | alr_subexpression . @5 RELN alr_subexpression
   54                  | alr_subexpression . @6 LOGICAL alr_subexpression

    error  shift, and go to state 108
    SEMI   shift, and go to state 109

    ARITH    reduce using rule 48 (@4)
    RELN     reduce using rule 51 (@5)
    LOGICAL  reduce using rule 53 (@6)

    @4  go to state 94
    @5  go to state 95
    @6  go to state 96


State 90

   23 statement_block: opencurly variable_list statement_list CLOSECURLY .

    $default  reduce using rule 23 (statement_block)


State 91

   28 statement_list: supported_statement statement_list .

    $default  reduce using rule 28 (statement_list)


State 92

   34 supported_statement: alr_subexpression error .

    $default  reduce using rule 34 (supported_statement)


State 93

   29 supported_statement: alr_subexpression SEMI .

    $default  reduce using rule 29 (supported_statement)


State 94

   49 alr_subexpression: alr_subexpression @4 . ARITH alr_subexpression

    ARITH  shift, and go to state 110


State 95

   52 alr_subexpression: alr_subexpression @5 . RELN alr_subexpression

    RELN  shift, and go to state 111


State 96

   54 alr_subexpression: alr_subexpression @6 . LOGICAL alr_subexpression

    LOGICAL  shift, and go to state 112


State 97

   43 alr_subexpression: lhs EQ . alr_subexpression

    error       shift, and go to state 57
    ID          shift, and go to state 58
    OPENPAREN   shift, and go to state 59
    OPENNEGATE  shift, and go to state 60
    LOGICALNOT  shift, and go to state 61
    BOOLCONST   shift, and go to state 65
    INTCONST    shift, and go to state 66
    CHARCONST   shift, and go to state 67

    alr_subexpression   go to state 113
    lhs                 go to state 75
    var_use             go to state 76
    supported_constant  go to state 77


State 98

   49 alr_subexpression: alr_subexpression . @4 ARITH alr_subexpression
   52                  | alr_subexpression . @5 RELN alr_subexpression
   54                  | alr_subexpression . @6 LOGICAL alr_subexpression
   56                  | error EQ alr_subexpression .

    ARITH     reduce using rule 48 (@4)
    ARITH     [reduce using rule 56 (alr_subexpression)]
    RELN      reduce using rule 51 (@5)
    RELN      [reduce using rule 56 (alr_subexpression)]
    LOGICAL   reduce using rule 53 (@6)
    LOGICAL   [reduce using rule 56 (alr_subexpression)]
    $default  reduce using rule 56 (alr_subexpression)

    @4  go to state 94
    @5  go to state 95
    @6  go to state 96


State 99

   64 var_use: ID .
   65        | ID . OPENSQUARE INTCONST CLOSESQUARE

    OPENSQUARE  shift, and go to state 114

    $default  reduce using rule 64 (var_use)


State 100

   46 alr_subexpression: ID OPENPAREN id_list . CLOSEPAREN
   57 id_list: id_list . COMMA var_use

    COMMA       shift, and go to state 115
    CLOSEPAREN  shift, and go to state 116


State 101

   58 id_list: var_use .

    $default  reduce using rule 58 (id_list)


State 102

   61 lhs: ID OPENSQUARE INTCONST . CLOSESQUARE
   65 var_use: ID OPENSQUARE INTCONST . CLOSESQUARE

    CLOSESQUARE  shift, and go to state 117


State 103

   47 alr_subexpression: OPENPAREN alr_subexpression CLOSEPAREN .

    $default  reduce using rule 47 (alr_subexpression)


State 104

   69 supported_constant: OPENNEGATE INTCONST CLOSEPAREN .

    $default  reduce using rule 69 (supported_constant)


State 105

   50 alr_subexpression: OPENNEGATE alr_subexpression CLOSEPAREN .

    $default  reduce using rule 50 (alr_subexpression)


State 106

   35 if_statement: IF OPENPAREN alr_subexpression . CLOSEPAREN statement_block else_statement
   49 alr_subexpression: alr_subexpression . @4 ARITH alr_subexpression
   52                  | alr_subexpression . @5 RELN alr_subexpression
   54                  | alr_subexpression . @6 LOGICAL alr_subexpression

    CLOSEPAREN  shift, and go to state 118

    RELN      reduce using rule 51 (@5)
    LOGICAL   reduce using rule 53 (@6)
    $default  reduce using rule 48 (@4)

    @4  go to state 94
    @5  go to state 95
    @6  go to state 96


State 107

   38 while_statement: WHILE OPENPAREN alr_subexpression . CLOSEPAREN statement_block
   49 alr_subexpression: alr_subexpression . @4 ARITH alr_subexpression
   52                  | alr_subexpression . @5 RELN alr_subexpression
   54                  | alr_subexpression . @6 LOGICAL alr_subexpression

    CLOSEPAREN  shift, and go to state 119

    RELN      reduce using rule 51 (@5)
    LOGICAL   reduce using rule 53 (@6)
    $default  reduce using rule 48 (@4)

    @4  go to state 94
    @5  go to state 95
    @6  go to state 96


State 108

   42 return_statement: RETURN alr_subexpression error .

    $default  reduce using rule 42 (return_statement)


State 109

   40 return_statement: RETURN alr_subexpression SEMI .

    $default  reduce using rule 40 (return_statement)


State 110

   49 alr_subexpression: alr_subexpression @4 ARITH . alr_subexpression

    error       shift, and go to state 57
    ID          shift, and go to state 58
    OPENPAREN   shift, and go to state 59
    OPENNEGATE  shift, and go to state 60
    LOGICALNOT  shift, and go to state 61
    BOOLCONST   shift, and go to state 65
    INTCONST    shift, and go to state 66
    CHARCONST   shift, and go to state 67

    alr_subexpression   go to state 120
    lhs                 go to state 75
    var_use             go to state 76
    supported_constant  go to state 77


State 111

   52 alr_subexpression: alr_subexpression @5 RELN . alr_subexpression

    error       shift, and go to state 57
    ID          shift, and go to state 58
    OPENPAREN   shift, and go to state 59
    OPENNEGATE  shift, and go to state 60
    LOGICALNOT  shift, and go to state 61
    BOOLCONST   shift, and go to state 65
    INTCONST    shift, and go to state 66
    CHARCONST   shift, and go to state 67

    alr_subexpression   go to state 121
    lhs                 go to state 75
    var_use             go to state 76
    supported_constant  go to state 77


State 112

   54 alr_subexpression: alr_subexpression @6 LOGICAL . alr_subexpression

    error       shift, and go to state 57
    ID          shift, and go to state 58
    OPENPAREN   shift, and go to state 59
    OPENNEGATE  shift, and go to state 60
    LOGICALNOT  shift, and go to state 61
    BOOLCONST   shift, and go to state 65
    INTCONST    shift, and go to state 66
    CHARCONST   shift, and go to state 67

    alr_subexpression   go to state 122
    lhs                 go to state 75
    var_use             go to state 76
    supported_constant  go to state 77


State 113

   43 alr_subexpression: lhs EQ alr_subexpression .
   49                  | alr_subexpression . @4 ARITH alr_subexpression
   52                  | alr_subexpression . @5 RELN alr_subexpression
   54                  | alr_subexpression . @6 LOGICAL alr_subexpression

    ARITH     reduce using rule 43 (alr_subexpression)
    ARITH     [reduce using rule 48 (@4)]
    RELN      reduce using rule 43 (alr_subexpression)
    RELN      [reduce using rule 51 (@5)]
    LOGICAL   reduce using rule 43 (alr_subexpression)
    LOGICAL   [reduce using rule 53 (@6)]
    $default  reduce using rule 43 (alr_subexpression)

    @4  go to state 94
    @5  go to state 95
    @6  go to state 96


State 114

   65 var_use: ID OPENSQUARE . INTCONST CLOSESQUARE

    INTCONST  shift, and go to state 123


State 115

   57 id_list: id_list COMMA . var_use

    ID  shift, and go to state 99

    var_use  go to state 124


State 116

   46 alr_subexpression: ID OPENPAREN id_list CLOSEPAREN .

    $default  reduce using rule 46 (alr_subexpression)


State 117

   61 lhs: ID OPENSQUARE INTCONST CLOSESQUARE .
   65 var_use: ID OPENSQUARE INTCONST CLOSESQUARE .

    EQ        reduce using rule 61 (lhs)
    $default  reduce using rule 65 (var_use)


State 118

   35 if_statement: IF OPENPAREN alr_subexpression CLOSEPAREN . statement_block else_statement

    OPENCURLY  shift, and go to state 46

    statement_block  go to state 125
    opencurly        go to state 48


State 119

   38 while_statement: WHILE OPENPAREN alr_subexpression CLOSEPAREN . statement_block

    OPENCURLY  shift, and go to state 46

    statement_block  go to state 126
    opencurly        go to state 48


State 120

   49 alr_subexpression: alr_subexpression . @4 ARITH alr_subexpression
   49                  | alr_subexpression @4 ARITH alr_subexpression .
   52                  | alr_subexpression . @5 RELN alr_subexpression
   54                  | alr_subexpression . @6 LOGICAL alr_subexpression

    ARITH     reduce using rule 48 (@4)
    ARITH     [reduce using rule 49 (alr_subexpression)]
    RELN      reduce using rule 49 (alr_subexpression)
    RELN      [reduce using rule 51 (@5)]
    LOGICAL   reduce using rule 49 (alr_subexpression)
    LOGICAL   [reduce using rule 53 (@6)]
    $default  reduce using rule 49 (alr_subexpression)

    @4  go to state 94
    @5  go to state 95
    @6  go to state 96


State 121

   49 alr_subexpression: alr_subexpression . @4 ARITH alr_subexpression
   52                  | alr_subexpression . @5 RELN alr_subexpression
   52                  | alr_subexpression @5 RELN alr_subexpression .
   54                  | alr_subexpression . @6 LOGICAL alr_subexpression

    ARITH     reduce using rule 48 (@4)
    ARITH     [reduce using rule 52 (alr_subexpression)]
    RELN      reduce using rule 51 (@5)
    RELN      [reduce using rule 52 (alr_subexpression)]
    LOGICAL   reduce using rule 52 (alr_subexpression)
    LOGICAL   [reduce using rule 53 (@6)]
    $default  reduce using rule 52 (alr_subexpression)

    @4  go to state 94
    @5  go to state 95
    @6  go to state 96


State 122

   49 alr_subexpression: alr_subexpression . @4 ARITH alr_subexpression
   52                  | alr_subexpression . @5 RELN alr_subexpression
   54                  | alr_subexpression . @6 LOGICAL alr_subexpression
   54                  | alr_subexpression @6 LOGICAL alr_subexpression .

    ARITH     reduce using rule 48 (@4)
    ARITH     [reduce using rule 54 (alr_subexpression)]
    RELN      reduce using rule 51 (@5)
    RELN      [reduce using rule 54 (alr_subexpression)]
    LOGICAL   reduce using rule 53 (@6)
    LOGICAL   [reduce using rule 54 (alr_subexpression)]
    $default  reduce using rule 54 (alr_subexpression)

    @4  go to state 94
    @5  go to state 95
    @6  go to state 96


State 123

   65 var_use: ID OPENSQUARE INTCONST . CLOSESQUARE

    CLOSESQUARE  shift, and go to state 127


State 124

   57 id_list: id_list COMMA var_use .

    $default  reduce using rule 57 (id_list)


State 125

   35 if_statement: IF OPENPAREN alr_subexpression CLOSEPAREN statement_block . else_statement

    ELSE  shift, and go to state 128

    $default  reduce using rule 36 (else_statement)

    else_statement  go to state 129


State 126

   38 while_statement: WHILE OPENPAREN alr_subexpression CLOSEPAREN statement_block .

    $default  reduce using rule 38 (while_statement)


State 127

   65 var_use: ID OPENSQUARE INTCONST CLOSESQUARE .

    $default  reduce using rule 65 (var_use)


State 128

   37 else_statement: ELSE . statement_block

    OPENCURLY  shift, and go to state 46

    statement_block  go to state 130
    opencurly        go to state 48


State 129

   35 if_statement: IF OPENPAREN alr_subexpression CLOSEPAREN statement_block else_statement .

    $default  reduce using rule 35 (if_statement)


State 130

   37 else_statement: ELSE statement_block .

    $default  reduce using rule 37 (else_statement)
