Terminals unused in grammar

   FOR
   PRINT
   READ
   TERMINAL
   VALUE


State 16 conflicts: 1 shift/reduce
State 42 conflicts: 1 shift/reduce
State 48 conflicts: 1 shift/reduce
State 50 conflicts: 1 shift/reduce
State 53 conflicts: 1 shift/reduce
State 65 conflicts: 1 shift/reduce
State 71 conflicts: 1 shift/reduce
State 77 conflicts: 1 shift/reduce
State 79 conflicts: 3 reduce/reduce
State 95 conflicts: 1 shift/reduce
State 96 conflicts: 3 reduce/reduce
State 112 conflicts: 3 reduce/reduce
State 113 conflicts: 3 reduce/reduce
State 115 conflicts: 1 shift/reduce
State 122 conflicts: 3 reduce/reduce
State 123 conflicts: 3 reduce/reduce
State 124 conflicts: 3 reduce/reduce
State 126 conflicts: 1 shift/reduce


Grammar

    0 $accept: mad_program NONTERMINAL

    1 mad_program: supported_declarations
    2            | supported_declarations mad_program
    3            | error '\n'

    4 supported_declarations: variable_declarations
    5                       | function_declarations

    6 variable_declarations: variable_definitions SEMI
    7                      | variable_definitions error

    8 variable_definitions: dtype var_decl
    9                     | variable_definitions COMMA var_decl
   10                     | variable_definitions error var_decl '\n'

   11 dtype: DTYPE_INT
   12      | DTYPE_BOOL
   13      | DTYPE_CHAR
   14      | error

   15 function_declarations: dtype ID OPENPAREN argument_list CLOSEPAREN statement_block
   16                      | VOID ID OPENPAREN argument_list CLOSEPAREN statement_block

   17 argument_list: dtype var_decl COMMA argument_list
   18              | %empty
   19              | dtype ID error argument_list
   20              | dtype error COMMA argument_list

   21 statement_block: OPENCURLY variable_list statement_list CLOSECURLY
   22                | OPENCURLY variable_list statement_list error

   23 variable_list: %empty
   24              | variable_declarations variable_list

   25 statement_list: %empty
   26               | supported_statement statement_list

   27 supported_statement: alr_subexpression SEMI
   28                    | if_statement
   29                    | while_statement
   30                    | return_statement
   31                    | statement_block
   32                    | alr_subexpression error

   33 if_statement: IF OPENPAREN alr_subexpression CLOSEPAREN statement_block else_statement

   34 else_statement: %empty
   35               | ELSE supported_statement

   36 while_statement: WHILE OPENPAREN alr_subexpression CLOSEPAREN statement_block

   37 return_statement: RETURN SEMI
   38                 | RETURN alr_subexpression SEMI
   39                 | RETURN error
   40                 | RETURN alr_subexpression error

   41 alr_subexpression: lhs EQ alr_subexpression
   42                  | supported_constant
   43                  | var_use
   44                  | ID OPENPAREN id_list CLOSEPAREN
   45                  | OPENPAREN alr_subexpression CLOSEPAREN

   46 @1: %empty

   47 alr_subexpression: alr_subexpression @1 ARITH alr_subexpression
   48                  | OPENNEGATE alr_subexpression CLOSEPAREN

   49 @2: %empty

   50 alr_subexpression: alr_subexpression @2 RELN alr_subexpression

   51 @3: %empty

   52 alr_subexpression: alr_subexpression @3 LOGICAL alr_subexpression
   53                  | LOGICALNOT alr_subexpression
   54                  | error EQ alr_subexpression
   55                  | var_use error alr_subexpression
   56                  | var_use OPENPAREN id_list error

   57 id_list: id_list COMMA var_use
   58        | var_use
   59        | %empty
   60        | error COMMA id_list

   61 lhs: ID
   62    | ID OPENSQUARE INTCONST CLOSESQUARE

   63 var_decl: ID
   64         | ID OPENSQUARE INTCONST CLOSESQUARE

   65 var_use: ID
   66        | ID OPENSQUARE INTCONST CLOSESQUARE

   67 supported_constant: INTCONST
   68                   | CHARCONST
   69                   | BOOLCONST
   70                   | OPENNEGATE INTCONST CLOSEPAREN


Terminals, with rules where they appear

NONTERMINAL (0) 0
TERMINAL (1)
VALUE (2)
'\n' (10) 3 10
error (256) 3 7 10 14 19 20 22 32 39 40 54 55 56 60
ID (258) 15 16 19 44 61 62 63 64 65 66
COMMA (259) 9 17 20 57 60
SEMI (260) 6 27 37 38
OPENPAREN (261) 15 16 33 36 44 45 56
CLOSEPAREN (262) 15 16 33 36 44 45 48 70
OPENCURLY (263) 21 22
CLOSECURLY (264) 21
OPENSQUARE (265) 62 64 66
CLOSESQUARE (266) 62 64 66
OPENNEGATE (267) 48 70
VOID (268) 16
DTYPE_INT (269) 11
DTYPE_BOOL (270) 12
DTYPE_CHAR (271) 13
EQ (272) 41 54
ARITH (273) 47
RELN (274) 50
LOGICAL (275) 52
LOGICALNOT (276) 53
IF (277) 33
ELSE (278) 35
WHILE (279) 36
FOR (280)
RETURN (281) 37 38 39 40
PRINT (282)
READ (283)
BOOLCONST (284) 69
INTCONST (285) 62 64 66 67 70
CHARCONST (286) 68


Nonterminals, with rules where they appear

$accept (35)
    on left: 0
mad_program (36)
    on left: 1 2 3, on right: 0 2
supported_declarations (37)
    on left: 4 5, on right: 1 2
variable_declarations (38)
    on left: 6 7, on right: 4 24
variable_definitions (39)
    on left: 8 9 10, on right: 6 7 9 10
dtype (40)
    on left: 11 12 13 14, on right: 8 15 17 19 20
function_declarations (41)
    on left: 15 16, on right: 5
argument_list (42)
    on left: 17 18 19 20, on right: 15 16 17 19 20
statement_block (43)
    on left: 21 22, on right: 15 16 31 33 36
variable_list (44)
    on left: 23 24, on right: 21 22 24
statement_list (45)
    on left: 25 26, on right: 21 22 26
supported_statement (46)
    on left: 27 28 29 30 31 32, on right: 26 35
if_statement (47)
    on left: 33, on right: 28
else_statement (48)
    on left: 34 35, on right: 33
while_statement (49)
    on left: 36, on right: 29
return_statement (50)
    on left: 37 38 39 40, on right: 30
alr_subexpression (51)
    on left: 41 42 43 44 45 47 48 50 52 53 54 55 56, on right: 27 32
    33 36 38 40 41 45 47 48 50 52 53 54 55
@1 (52)
    on left: 46, on right: 47
@2 (53)
    on left: 49, on right: 50
@3 (54)
    on left: 51, on right: 52
id_list (55)
    on left: 57 58 59 60, on right: 44 56 57 60
lhs (56)
    on left: 61 62, on right: 41
var_decl (57)
    on left: 63 64, on right: 8 9 10 17
var_use (58)
    on left: 65 66, on right: 43 55 56 57 58
supported_constant (59)
    on left: 67 68 69 70, on right: 42


State 0

    0 $accept: . mad_program NONTERMINAL

    error       shift, and go to state 1
    VOID        shift, and go to state 2
    DTYPE_INT   shift, and go to state 3
    DTYPE_BOOL  shift, and go to state 4
    DTYPE_CHAR  shift, and go to state 5

    mad_program             go to state 6
    supported_declarations  go to state 7
    variable_declarations   go to state 8
    variable_definitions    go to state 9
    dtype                   go to state 10
    function_declarations   go to state 11


State 1

    3 mad_program: error . '\n'
   14 dtype: error .

    '\n'  shift, and go to state 12

    $default  reduce using rule 14 (dtype)


State 2

   16 function_declarations: VOID . ID OPENPAREN argument_list CLOSEPAREN statement_block

    ID  shift, and go to state 13


State 3

   11 dtype: DTYPE_INT .

    $default  reduce using rule 11 (dtype)


State 4

   12 dtype: DTYPE_BOOL .

    $default  reduce using rule 12 (dtype)


State 5

   13 dtype: DTYPE_CHAR .

    $default  reduce using rule 13 (dtype)


State 6

    0 $accept: mad_program . NONTERMINAL

    NONTERMINAL  shift, and go to state 14


State 7

    1 mad_program: supported_declarations .
    2            | supported_declarations . mad_program

    error       shift, and go to state 1
    VOID        shift, and go to state 2
    DTYPE_INT   shift, and go to state 3
    DTYPE_BOOL  shift, and go to state 4
    DTYPE_CHAR  shift, and go to state 5

    NONTERMINAL  reduce using rule 1 (mad_program)

    mad_program             go to state 15
    supported_declarations  go to state 7
    variable_declarations   go to state 8
    variable_definitions    go to state 9
    dtype                   go to state 10
    function_declarations   go to state 11


State 8

    4 supported_declarations: variable_declarations .

    $default  reduce using rule 4 (supported_declarations)


State 9

    6 variable_declarations: variable_definitions . SEMI
    7                      | variable_definitions . error
    9 variable_definitions: variable_definitions . COMMA var_decl
   10                     | variable_definitions . error var_decl '\n'

    error  shift, and go to state 16
    COMMA  shift, and go to state 17
    SEMI   shift, and go to state 18


State 10

    8 variable_definitions: dtype . var_decl
   15 function_declarations: dtype . ID OPENPAREN argument_list CLOSEPAREN statement_block

    ID  shift, and go to state 19

    var_decl  go to state 20


State 11

    5 supported_declarations: function_declarations .

    $default  reduce using rule 5 (supported_declarations)


State 12

    3 mad_program: error '\n' .

    $default  reduce using rule 3 (mad_program)


State 13

   16 function_declarations: VOID ID . OPENPAREN argument_list CLOSEPAREN statement_block

    OPENPAREN  shift, and go to state 21


State 14

    0 $accept: mad_program NONTERMINAL .

    $default  accept


State 15

    2 mad_program: supported_declarations mad_program .

    $default  reduce using rule 2 (mad_program)


State 16

    7 variable_declarations: variable_definitions error .
   10 variable_definitions: variable_definitions error . var_decl '\n'

    ID  shift, and go to state 22

    ID        [reduce using rule 7 (variable_declarations)]
    $default  reduce using rule 7 (variable_declarations)

    var_decl  go to state 23


State 17

    9 variable_definitions: variable_definitions COMMA . var_decl

    ID  shift, and go to state 22

    var_decl  go to state 24


State 18

    6 variable_declarations: variable_definitions SEMI .

    $default  reduce using rule 6 (variable_declarations)


State 19

   15 function_declarations: dtype ID . OPENPAREN argument_list CLOSEPAREN statement_block
   63 var_decl: ID .
   64         | ID . OPENSQUARE INTCONST CLOSESQUARE

    OPENPAREN   shift, and go to state 25
    OPENSQUARE  shift, and go to state 26

    $default  reduce using rule 63 (var_decl)


State 20

    8 variable_definitions: dtype var_decl .

    $default  reduce using rule 8 (variable_definitions)


State 21

   16 function_declarations: VOID ID OPENPAREN . argument_list CLOSEPAREN statement_block

    error       shift, and go to state 27
    DTYPE_INT   shift, and go to state 3
    DTYPE_BOOL  shift, and go to state 4
    DTYPE_CHAR  shift, and go to state 5

    CLOSEPAREN  reduce using rule 18 (argument_list)

    dtype          go to state 28
    argument_list  go to state 29


State 22

   63 var_decl: ID .
   64         | ID . OPENSQUARE INTCONST CLOSESQUARE

    OPENSQUARE  shift, and go to state 26

    $default  reduce using rule 63 (var_decl)


State 23

   10 variable_definitions: variable_definitions error var_decl . '\n'

    '\n'  shift, and go to state 30


State 24

    9 variable_definitions: variable_definitions COMMA var_decl .

    $default  reduce using rule 9 (variable_definitions)


State 25

   15 function_declarations: dtype ID OPENPAREN . argument_list CLOSEPAREN statement_block

    error       shift, and go to state 27
    DTYPE_INT   shift, and go to state 3
    DTYPE_BOOL  shift, and go to state 4
    DTYPE_CHAR  shift, and go to state 5

    CLOSEPAREN  reduce using rule 18 (argument_list)

    dtype          go to state 28
    argument_list  go to state 31


State 26

   64 var_decl: ID OPENSQUARE . INTCONST CLOSESQUARE

    INTCONST  shift, and go to state 32


State 27

   14 dtype: error .

    $default  reduce using rule 14 (dtype)


State 28

   17 argument_list: dtype . var_decl COMMA argument_list
   19              | dtype . ID error argument_list
   20              | dtype . error COMMA argument_list

    error  shift, and go to state 33
    ID     shift, and go to state 34

    var_decl  go to state 35


State 29

   16 function_declarations: VOID ID OPENPAREN argument_list . CLOSEPAREN statement_block

    CLOSEPAREN  shift, and go to state 36


State 30

   10 variable_definitions: variable_definitions error var_decl '\n' .

    $default  reduce using rule 10 (variable_definitions)


State 31

   15 function_declarations: dtype ID OPENPAREN argument_list . CLOSEPAREN statement_block

    CLOSEPAREN  shift, and go to state 37


State 32

   64 var_decl: ID OPENSQUARE INTCONST . CLOSESQUARE

    CLOSESQUARE  shift, and go to state 38


State 33

   20 argument_list: dtype error . COMMA argument_list

    COMMA  shift, and go to state 39


State 34

   19 argument_list: dtype ID . error argument_list
   63 var_decl: ID .
   64         | ID . OPENSQUARE INTCONST CLOSESQUARE

    error       shift, and go to state 40
    OPENSQUARE  shift, and go to state 26

    COMMA  reduce using rule 63 (var_decl)


State 35

   17 argument_list: dtype var_decl . COMMA argument_list

    COMMA  shift, and go to state 41


State 36

   16 function_declarations: VOID ID OPENPAREN argument_list CLOSEPAREN . statement_block

    OPENCURLY  shift, and go to state 42

    statement_block  go to state 43


State 37

   15 function_declarations: dtype ID OPENPAREN argument_list CLOSEPAREN . statement_block

    OPENCURLY  shift, and go to state 42

    statement_block  go to state 44


State 38

   64 var_decl: ID OPENSQUARE INTCONST CLOSESQUARE .

    $default  reduce using rule 64 (var_decl)


State 39

   20 argument_list: dtype error COMMA . argument_list

    error       shift, and go to state 27
    DTYPE_INT   shift, and go to state 3
    DTYPE_BOOL  shift, and go to state 4
    DTYPE_CHAR  shift, and go to state 5

    CLOSEPAREN  reduce using rule 18 (argument_list)

    dtype          go to state 28
    argument_list  go to state 45


State 40

   19 argument_list: dtype ID error . argument_list

    error       shift, and go to state 27
    DTYPE_INT   shift, and go to state 3
    DTYPE_BOOL  shift, and go to state 4
    DTYPE_CHAR  shift, and go to state 5

    CLOSEPAREN  reduce using rule 18 (argument_list)

    dtype          go to state 28
    argument_list  go to state 46


State 41

   17 argument_list: dtype var_decl COMMA . argument_list

    error       shift, and go to state 27
    DTYPE_INT   shift, and go to state 3
    DTYPE_BOOL  shift, and go to state 4
    DTYPE_CHAR  shift, and go to state 5

    CLOSEPAREN  reduce using rule 18 (argument_list)

    dtype          go to state 28
    argument_list  go to state 47


State 42

   21 statement_block: OPENCURLY . variable_list statement_list CLOSECURLY
   22                | OPENCURLY . variable_list statement_list error

    error       shift, and go to state 27
    DTYPE_INT   shift, and go to state 3
    DTYPE_BOOL  shift, and go to state 4
    DTYPE_CHAR  shift, and go to state 5

    error       [reduce using rule 23 (variable_list)]
    ID          reduce using rule 23 (variable_list)
    OPENPAREN   reduce using rule 23 (variable_list)
    OPENCURLY   reduce using rule 23 (variable_list)
    CLOSECURLY  reduce using rule 23 (variable_list)
    OPENNEGATE  reduce using rule 23 (variable_list)
    LOGICALNOT  reduce using rule 23 (variable_list)
    IF          reduce using rule 23 (variable_list)
    WHILE       reduce using rule 23 (variable_list)
    RETURN      reduce using rule 23 (variable_list)
    BOOLCONST   reduce using rule 23 (variable_list)
    INTCONST    reduce using rule 23 (variable_list)
    CHARCONST   reduce using rule 23 (variable_list)

    variable_declarations  go to state 48
    variable_definitions   go to state 9
    dtype                  go to state 49
    variable_list          go to state 50


State 43

   16 function_declarations: VOID ID OPENPAREN argument_list CLOSEPAREN statement_block .

    $default  reduce using rule 16 (function_declarations)


State 44

   15 function_declarations: dtype ID OPENPAREN argument_list CLOSEPAREN statement_block .

    $default  reduce using rule 15 (function_declarations)


State 45

   20 argument_list: dtype error COMMA argument_list .

    $default  reduce using rule 20 (argument_list)


State 46

   19 argument_list: dtype ID error argument_list .

    $default  reduce using rule 19 (argument_list)


State 47

   17 argument_list: dtype var_decl COMMA argument_list .

    $default  reduce using rule 17 (argument_list)


State 48

   24 variable_list: variable_declarations . variable_list

    error       shift, and go to state 27
    DTYPE_INT   shift, and go to state 3
    DTYPE_BOOL  shift, and go to state 4
    DTYPE_CHAR  shift, and go to state 5

    error       [reduce using rule 23 (variable_list)]
    ID          reduce using rule 23 (variable_list)
    OPENPAREN   reduce using rule 23 (variable_list)
    OPENCURLY   reduce using rule 23 (variable_list)
    CLOSECURLY  reduce using rule 23 (variable_list)
    OPENNEGATE  reduce using rule 23 (variable_list)
    LOGICALNOT  reduce using rule 23 (variable_list)
    IF          reduce using rule 23 (variable_list)
    WHILE       reduce using rule 23 (variable_list)
    RETURN      reduce using rule 23 (variable_list)
    BOOLCONST   reduce using rule 23 (variable_list)
    INTCONST    reduce using rule 23 (variable_list)
    CHARCONST   reduce using rule 23 (variable_list)

    variable_declarations  go to state 48
    variable_definitions   go to state 9
    dtype                  go to state 49
    variable_list          go to state 51


State 49

    8 variable_definitions: dtype . var_decl

    ID  shift, and go to state 22

    var_decl  go to state 20


State 50

   21 statement_block: OPENCURLY variable_list . statement_list CLOSECURLY
   22                | OPENCURLY variable_list . statement_list error

    error       shift, and go to state 52
    ID          shift, and go to state 53
    OPENPAREN   shift, and go to state 54
    OPENCURLY   shift, and go to state 42
    OPENNEGATE  shift, and go to state 55
    LOGICALNOT  shift, and go to state 56
    IF          shift, and go to state 57
    WHILE       shift, and go to state 58
    RETURN      shift, and go to state 59
    BOOLCONST   shift, and go to state 60
    INTCONST    shift, and go to state 61
    CHARCONST   shift, and go to state 62

    error       [reduce using rule 25 (statement_list)]
    CLOSECURLY  reduce using rule 25 (statement_list)

    statement_block      go to state 63
    statement_list       go to state 64
    supported_statement  go to state 65
    if_statement         go to state 66
    while_statement      go to state 67
    return_statement     go to state 68
    alr_subexpression    go to state 69
    lhs                  go to state 70
    var_use              go to state 71
    supported_constant   go to state 72


State 51

   24 variable_list: variable_declarations variable_list .

    $default  reduce using rule 24 (variable_list)


State 52

   54 alr_subexpression: error . EQ alr_subexpression

    EQ  shift, and go to state 73


State 53

   44 alr_subexpression: ID . OPENPAREN id_list CLOSEPAREN
   61 lhs: ID .
   62    | ID . OPENSQUARE INTCONST CLOSESQUARE
   65 var_use: ID .
   66        | ID . OPENSQUARE INTCONST CLOSESQUARE

    OPENPAREN   shift, and go to state 74
    OPENSQUARE  shift, and go to state 75

    OPENPAREN  [reduce using rule 65 (var_use)]
    EQ         reduce using rule 61 (lhs)
    $default   reduce using rule 65 (var_use)


State 54

   45 alr_subexpression: OPENPAREN . alr_subexpression CLOSEPAREN

    error       shift, and go to state 52
    ID          shift, and go to state 53
    OPENPAREN   shift, and go to state 54
    OPENNEGATE  shift, and go to state 55
    LOGICALNOT  shift, and go to state 56
    BOOLCONST   shift, and go to state 60
    INTCONST    shift, and go to state 61
    CHARCONST   shift, and go to state 62

    alr_subexpression   go to state 76
    lhs                 go to state 70
    var_use             go to state 71
    supported_constant  go to state 72


State 55

   48 alr_subexpression: OPENNEGATE . alr_subexpression CLOSEPAREN
   70 supported_constant: OPENNEGATE . INTCONST CLOSEPAREN

    error       shift, and go to state 52
    ID          shift, and go to state 53
    OPENPAREN   shift, and go to state 54
    OPENNEGATE  shift, and go to state 55
    LOGICALNOT  shift, and go to state 56
    BOOLCONST   shift, and go to state 60
    INTCONST    shift, and go to state 77
    CHARCONST   shift, and go to state 62

    alr_subexpression   go to state 78
    lhs                 go to state 70
    var_use             go to state 71
    supported_constant  go to state 72


State 56

   53 alr_subexpression: LOGICALNOT . alr_subexpression

    error       shift, and go to state 52
    ID          shift, and go to state 53
    OPENPAREN   shift, and go to state 54
    OPENNEGATE  shift, and go to state 55
    LOGICALNOT  shift, and go to state 56
    BOOLCONST   shift, and go to state 60
    INTCONST    shift, and go to state 61
    CHARCONST   shift, and go to state 62

    alr_subexpression   go to state 79
    lhs                 go to state 70
    var_use             go to state 71
    supported_constant  go to state 72


State 57

   33 if_statement: IF . OPENPAREN alr_subexpression CLOSEPAREN statement_block else_statement

    OPENPAREN  shift, and go to state 80


State 58

   36 while_statement: WHILE . OPENPAREN alr_subexpression CLOSEPAREN statement_block

    OPENPAREN  shift, and go to state 81


State 59

   37 return_statement: RETURN . SEMI
   38                 | RETURN . alr_subexpression SEMI
   39                 | RETURN . error
   40                 | RETURN . alr_subexpression error

    error       shift, and go to state 82
    ID          shift, and go to state 53
    SEMI        shift, and go to state 83
    OPENPAREN   shift, and go to state 54
    OPENNEGATE  shift, and go to state 55
    LOGICALNOT  shift, and go to state 56
    BOOLCONST   shift, and go to state 60
    INTCONST    shift, and go to state 61
    CHARCONST   shift, and go to state 62

    alr_subexpression   go to state 84
    lhs                 go to state 70
    var_use             go to state 71
    supported_constant  go to state 72


State 60

   69 supported_constant: BOOLCONST .

    $default  reduce using rule 69 (supported_constant)


State 61

   67 supported_constant: INTCONST .

    $default  reduce using rule 67 (supported_constant)


State 62

   68 supported_constant: CHARCONST .

    $default  reduce using rule 68 (supported_constant)


State 63

   31 supported_statement: statement_block .

    $default  reduce using rule 31 (supported_statement)


State 64

   21 statement_block: OPENCURLY variable_list statement_list . CLOSECURLY
   22                | OPENCURLY variable_list statement_list . error

    error       shift, and go to state 85
    CLOSECURLY  shift, and go to state 86


State 65

   26 statement_list: supported_statement . statement_list

    error       shift, and go to state 52
    ID          shift, and go to state 53
    OPENPAREN   shift, and go to state 54
    OPENCURLY   shift, and go to state 42
    OPENNEGATE  shift, and go to state 55
    LOGICALNOT  shift, and go to state 56
    IF          shift, and go to state 57
    WHILE       shift, and go to state 58
    RETURN      shift, and go to state 59
    BOOLCONST   shift, and go to state 60
    INTCONST    shift, and go to state 61
    CHARCONST   shift, and go to state 62

    error       [reduce using rule 25 (statement_list)]
    CLOSECURLY  reduce using rule 25 (statement_list)

    statement_block      go to state 63
    statement_list       go to state 87
    supported_statement  go to state 65
    if_statement         go to state 66
    while_statement      go to state 67
    return_statement     go to state 68
    alr_subexpression    go to state 69
    lhs                  go to state 70
    var_use              go to state 71
    supported_constant   go to state 72


State 66

   28 supported_statement: if_statement .

    $default  reduce using rule 28 (supported_statement)


State 67

   29 supported_statement: while_statement .

    $default  reduce using rule 29 (supported_statement)


State 68

   30 supported_statement: return_statement .

    $default  reduce using rule 30 (supported_statement)


State 69

   27 supported_statement: alr_subexpression . SEMI
   32                    | alr_subexpression . error
   47 alr_subexpression: alr_subexpression . @1 ARITH alr_subexpression
   50                  | alr_subexpression . @2 RELN alr_subexpression
   52                  | alr_subexpression . @3 LOGICAL alr_subexpression

    error  shift, and go to state 88
    SEMI   shift, and go to state 89

    ARITH    reduce using rule 46 (@1)
    RELN     reduce using rule 49 (@2)
    LOGICAL  reduce using rule 51 (@3)

    @1  go to state 90
    @2  go to state 91
    @3  go to state 92


State 70

   41 alr_subexpression: lhs . EQ alr_subexpression

    EQ  shift, and go to state 93


State 71

   43 alr_subexpression: var_use .
   55                  | var_use . error alr_subexpression
   56                  | var_use . OPENPAREN id_list error

    error      shift, and go to state 94
    OPENPAREN  shift, and go to state 95

    error       [reduce using rule 43 (alr_subexpression)]
    SEMI        reduce using rule 43 (alr_subexpression)
    CLOSEPAREN  reduce using rule 43 (alr_subexpression)
    ARITH       reduce using rule 43 (alr_subexpression)
    RELN        reduce using rule 43 (alr_subexpression)
    LOGICAL     reduce using rule 43 (alr_subexpression)


State 72

   42 alr_subexpression: supported_constant .

    $default  reduce using rule 42 (alr_subexpression)


State 73

   54 alr_subexpression: error EQ . alr_subexpression

    error       shift, and go to state 52
    ID          shift, and go to state 53
    OPENPAREN   shift, and go to state 54
    OPENNEGATE  shift, and go to state 55
    LOGICALNOT  shift, and go to state 56
    BOOLCONST   shift, and go to state 60
    INTCONST    shift, and go to state 61
    CHARCONST   shift, and go to state 62

    alr_subexpression   go to state 96
    lhs                 go to state 70
    var_use             go to state 71
    supported_constant  go to state 72


State 74

   44 alr_subexpression: ID OPENPAREN . id_list CLOSEPAREN

    error  shift, and go to state 97
    ID     shift, and go to state 98

    COMMA       reduce using rule 59 (id_list)
    CLOSEPAREN  reduce using rule 59 (id_list)

    id_list  go to state 99
    var_use  go to state 100


State 75

   62 lhs: ID OPENSQUARE . INTCONST CLOSESQUARE
   66 var_use: ID OPENSQUARE . INTCONST CLOSESQUARE

    INTCONST  shift, and go to state 101


State 76

   45 alr_subexpression: OPENPAREN alr_subexpression . CLOSEPAREN
   47                  | alr_subexpression . @1 ARITH alr_subexpression
   50                  | alr_subexpression . @2 RELN alr_subexpression
   52                  | alr_subexpression . @3 LOGICAL alr_subexpression

    CLOSEPAREN  shift, and go to state 102

    RELN      reduce using rule 49 (@2)
    LOGICAL   reduce using rule 51 (@3)
    $default  reduce using rule 46 (@1)

    @1  go to state 90
    @2  go to state 91
    @3  go to state 92


State 77

   67 supported_constant: INTCONST .
   70                   | OPENNEGATE INTCONST . CLOSEPAREN

    CLOSEPAREN  shift, and go to state 103

    CLOSEPAREN  [reduce using rule 67 (supported_constant)]
    $default    reduce using rule 67 (supported_constant)


State 78

   47 alr_subexpression: alr_subexpression . @1 ARITH alr_subexpression
   48                  | OPENNEGATE alr_subexpression . CLOSEPAREN
   50                  | alr_subexpression . @2 RELN alr_subexpression
   52                  | alr_subexpression . @3 LOGICAL alr_subexpression

    CLOSEPAREN  shift, and go to state 104

    RELN      reduce using rule 49 (@2)
    LOGICAL   reduce using rule 51 (@3)
    $default  reduce using rule 46 (@1)

    @1  go to state 90
    @2  go to state 91
    @3  go to state 92


State 79

   47 alr_subexpression: alr_subexpression . @1 ARITH alr_subexpression
   50                  | alr_subexpression . @2 RELN alr_subexpression
   52                  | alr_subexpression . @3 LOGICAL alr_subexpression
   53                  | LOGICALNOT alr_subexpression .

    ARITH     reduce using rule 46 (@1)
    ARITH     [reduce using rule 53 (alr_subexpression)]
    RELN      reduce using rule 49 (@2)
    RELN      [reduce using rule 53 (alr_subexpression)]
    LOGICAL   reduce using rule 51 (@3)
    LOGICAL   [reduce using rule 53 (alr_subexpression)]
    $default  reduce using rule 53 (alr_subexpression)

    @1  go to state 90
    @2  go to state 91
    @3  go to state 92


State 80

   33 if_statement: IF OPENPAREN . alr_subexpression CLOSEPAREN statement_block else_statement

    error       shift, and go to state 52
    ID          shift, and go to state 53
    OPENPAREN   shift, and go to state 54
    OPENNEGATE  shift, and go to state 55
    LOGICALNOT  shift, and go to state 56
    BOOLCONST   shift, and go to state 60
    INTCONST    shift, and go to state 61
    CHARCONST   shift, and go to state 62

    alr_subexpression   go to state 105
    lhs                 go to state 70
    var_use             go to state 71
    supported_constant  go to state 72


State 81

   36 while_statement: WHILE OPENPAREN . alr_subexpression CLOSEPAREN statement_block

    error       shift, and go to state 52
    ID          shift, and go to state 53
    OPENPAREN   shift, and go to state 54
    OPENNEGATE  shift, and go to state 55
    LOGICALNOT  shift, and go to state 56
    BOOLCONST   shift, and go to state 60
    INTCONST    shift, and go to state 61
    CHARCONST   shift, and go to state 62

    alr_subexpression   go to state 106
    lhs                 go to state 70
    var_use             go to state 71
    supported_constant  go to state 72


State 82

   39 return_statement: RETURN error .
   54 alr_subexpression: error . EQ alr_subexpression

    EQ  shift, and go to state 73

    $default  reduce using rule 39 (return_statement)


State 83

   37 return_statement: RETURN SEMI .

    $default  reduce using rule 37 (return_statement)


State 84

   38 return_statement: RETURN alr_subexpression . SEMI
   40                 | RETURN alr_subexpression . error
   47 alr_subexpression: alr_subexpression . @1 ARITH alr_subexpression
   50                  | alr_subexpression . @2 RELN alr_subexpression
   52                  | alr_subexpression . @3 LOGICAL alr_subexpression

    error  shift, and go to state 107
    SEMI   shift, and go to state 108

    ARITH    reduce using rule 46 (@1)
    RELN     reduce using rule 49 (@2)
    LOGICAL  reduce using rule 51 (@3)

    @1  go to state 90
    @2  go to state 91
    @3  go to state 92


State 85

   22 statement_block: OPENCURLY variable_list statement_list error .

    $default  reduce using rule 22 (statement_block)


State 86

   21 statement_block: OPENCURLY variable_list statement_list CLOSECURLY .

    $default  reduce using rule 21 (statement_block)


State 87

   26 statement_list: supported_statement statement_list .

    $default  reduce using rule 26 (statement_list)


State 88

   32 supported_statement: alr_subexpression error .

    $default  reduce using rule 32 (supported_statement)


State 89

   27 supported_statement: alr_subexpression SEMI .

    $default  reduce using rule 27 (supported_statement)


State 90

   47 alr_subexpression: alr_subexpression @1 . ARITH alr_subexpression

    ARITH  shift, and go to state 109


State 91

   50 alr_subexpression: alr_subexpression @2 . RELN alr_subexpression

    RELN  shift, and go to state 110


State 92

   52 alr_subexpression: alr_subexpression @3 . LOGICAL alr_subexpression

    LOGICAL  shift, and go to state 111


State 93

   41 alr_subexpression: lhs EQ . alr_subexpression

    error       shift, and go to state 52
    ID          shift, and go to state 53
    OPENPAREN   shift, and go to state 54
    OPENNEGATE  shift, and go to state 55
    LOGICALNOT  shift, and go to state 56
    BOOLCONST   shift, and go to state 60
    INTCONST    shift, and go to state 61
    CHARCONST   shift, and go to state 62

    alr_subexpression   go to state 112
    lhs                 go to state 70
    var_use             go to state 71
    supported_constant  go to state 72


State 94

   55 alr_subexpression: var_use error . alr_subexpression

    error       shift, and go to state 52
    ID          shift, and go to state 53
    OPENPAREN   shift, and go to state 54
    OPENNEGATE  shift, and go to state 55
    LOGICALNOT  shift, and go to state 56
    BOOLCONST   shift, and go to state 60
    INTCONST    shift, and go to state 61
    CHARCONST   shift, and go to state 62

    alr_subexpression   go to state 113
    lhs                 go to state 70
    var_use             go to state 71
    supported_constant  go to state 72


State 95

   56 alr_subexpression: var_use OPENPAREN . id_list error

    error  shift, and go to state 97
    ID     shift, and go to state 98

    error  [reduce using rule 59 (id_list)]
    COMMA  reduce using rule 59 (id_list)

    id_list  go to state 114
    var_use  go to state 100


State 96

   47 alr_subexpression: alr_subexpression . @1 ARITH alr_subexpression
   50                  | alr_subexpression . @2 RELN alr_subexpression
   52                  | alr_subexpression . @3 LOGICAL alr_subexpression
   54                  | error EQ alr_subexpression .

    ARITH     reduce using rule 46 (@1)
    ARITH     [reduce using rule 54 (alr_subexpression)]
    RELN      reduce using rule 49 (@2)
    RELN      [reduce using rule 54 (alr_subexpression)]
    LOGICAL   reduce using rule 51 (@3)
    LOGICAL   [reduce using rule 54 (alr_subexpression)]
    $default  reduce using rule 54 (alr_subexpression)

    @1  go to state 90
    @2  go to state 91
    @3  go to state 92


State 97

   60 id_list: error . COMMA id_list

    COMMA  shift, and go to state 115


State 98

   65 var_use: ID .
   66        | ID . OPENSQUARE INTCONST CLOSESQUARE

    OPENSQUARE  shift, and go to state 116

    $default  reduce using rule 65 (var_use)


State 99

   44 alr_subexpression: ID OPENPAREN id_list . CLOSEPAREN
   57 id_list: id_list . COMMA var_use

    COMMA       shift, and go to state 117
    CLOSEPAREN  shift, and go to state 118


State 100

   58 id_list: var_use .

    $default  reduce using rule 58 (id_list)


State 101

   62 lhs: ID OPENSQUARE INTCONST . CLOSESQUARE
   66 var_use: ID OPENSQUARE INTCONST . CLOSESQUARE

    CLOSESQUARE  shift, and go to state 119


State 102

   45 alr_subexpression: OPENPAREN alr_subexpression CLOSEPAREN .

    $default  reduce using rule 45 (alr_subexpression)


State 103

   70 supported_constant: OPENNEGATE INTCONST CLOSEPAREN .

    $default  reduce using rule 70 (supported_constant)


State 104

   48 alr_subexpression: OPENNEGATE alr_subexpression CLOSEPAREN .

    $default  reduce using rule 48 (alr_subexpression)


State 105

   33 if_statement: IF OPENPAREN alr_subexpression . CLOSEPAREN statement_block else_statement
   47 alr_subexpression: alr_subexpression . @1 ARITH alr_subexpression
   50                  | alr_subexpression . @2 RELN alr_subexpression
   52                  | alr_subexpression . @3 LOGICAL alr_subexpression

    CLOSEPAREN  shift, and go to state 120

    RELN      reduce using rule 49 (@2)
    LOGICAL   reduce using rule 51 (@3)
    $default  reduce using rule 46 (@1)

    @1  go to state 90
    @2  go to state 91
    @3  go to state 92


State 106

   36 while_statement: WHILE OPENPAREN alr_subexpression . CLOSEPAREN statement_block
   47 alr_subexpression: alr_subexpression . @1 ARITH alr_subexpression
   50                  | alr_subexpression . @2 RELN alr_subexpression
   52                  | alr_subexpression . @3 LOGICAL alr_subexpression

    CLOSEPAREN  shift, and go to state 121

    RELN      reduce using rule 49 (@2)
    LOGICAL   reduce using rule 51 (@3)
    $default  reduce using rule 46 (@1)

    @1  go to state 90
    @2  go to state 91
    @3  go to state 92


State 107

   40 return_statement: RETURN alr_subexpression error .

    $default  reduce using rule 40 (return_statement)


State 108

   38 return_statement: RETURN alr_subexpression SEMI .

    $default  reduce using rule 38 (return_statement)


State 109

   47 alr_subexpression: alr_subexpression @1 ARITH . alr_subexpression

    error       shift, and go to state 52
    ID          shift, and go to state 53
    OPENPAREN   shift, and go to state 54
    OPENNEGATE  shift, and go to state 55
    LOGICALNOT  shift, and go to state 56
    BOOLCONST   shift, and go to state 60
    INTCONST    shift, and go to state 61
    CHARCONST   shift, and go to state 62

    alr_subexpression   go to state 122
    lhs                 go to state 70
    var_use             go to state 71
    supported_constant  go to state 72


State 110

   50 alr_subexpression: alr_subexpression @2 RELN . alr_subexpression

    error       shift, and go to state 52
    ID          shift, and go to state 53
    OPENPAREN   shift, and go to state 54
    OPENNEGATE  shift, and go to state 55
    LOGICALNOT  shift, and go to state 56
    BOOLCONST   shift, and go to state 60
    INTCONST    shift, and go to state 61
    CHARCONST   shift, and go to state 62

    alr_subexpression   go to state 123
    lhs                 go to state 70
    var_use             go to state 71
    supported_constant  go to state 72


State 111

   52 alr_subexpression: alr_subexpression @3 LOGICAL . alr_subexpression

    error       shift, and go to state 52
    ID          shift, and go to state 53
    OPENPAREN   shift, and go to state 54
    OPENNEGATE  shift, and go to state 55
    LOGICALNOT  shift, and go to state 56
    BOOLCONST   shift, and go to state 60
    INTCONST    shift, and go to state 61
    CHARCONST   shift, and go to state 62

    alr_subexpression   go to state 124
    lhs                 go to state 70
    var_use             go to state 71
    supported_constant  go to state 72


State 112

   41 alr_subexpression: lhs EQ alr_subexpression .
   47                  | alr_subexpression . @1 ARITH alr_subexpression
   50                  | alr_subexpression . @2 RELN alr_subexpression
   52                  | alr_subexpression . @3 LOGICAL alr_subexpression

    ARITH     reduce using rule 41 (alr_subexpression)
    ARITH     [reduce using rule 46 (@1)]
    RELN      reduce using rule 41 (alr_subexpression)
    RELN      [reduce using rule 49 (@2)]
    LOGICAL   reduce using rule 41 (alr_subexpression)
    LOGICAL   [reduce using rule 51 (@3)]
    $default  reduce using rule 41 (alr_subexpression)

    @1  go to state 90
    @2  go to state 91
    @3  go to state 92


State 113

   47 alr_subexpression: alr_subexpression . @1 ARITH alr_subexpression
   50                  | alr_subexpression . @2 RELN alr_subexpression
   52                  | alr_subexpression . @3 LOGICAL alr_subexpression
   55                  | var_use error alr_subexpression .

    ARITH     reduce using rule 46 (@1)
    ARITH     [reduce using rule 55 (alr_subexpression)]
    RELN      reduce using rule 49 (@2)
    RELN      [reduce using rule 55 (alr_subexpression)]
    LOGICAL   reduce using rule 51 (@3)
    LOGICAL   [reduce using rule 55 (alr_subexpression)]
    $default  reduce using rule 55 (alr_subexpression)

    @1  go to state 90
    @2  go to state 91
    @3  go to state 92


State 114

   56 alr_subexpression: var_use OPENPAREN id_list . error
   57 id_list: id_list . COMMA var_use

    error  shift, and go to state 125
    COMMA  shift, and go to state 117


State 115

   60 id_list: error COMMA . id_list

    error  shift, and go to state 97
    ID     shift, and go to state 98

    error       [reduce using rule 59 (id_list)]
    COMMA       reduce using rule 59 (id_list)
    CLOSEPAREN  reduce using rule 59 (id_list)

    id_list  go to state 126
    var_use  go to state 100


State 116

   66 var_use: ID OPENSQUARE . INTCONST CLOSESQUARE

    INTCONST  shift, and go to state 127


State 117

   57 id_list: id_list COMMA . var_use

    ID  shift, and go to state 98

    var_use  go to state 128


State 118

   44 alr_subexpression: ID OPENPAREN id_list CLOSEPAREN .

    $default  reduce using rule 44 (alr_subexpression)


State 119

   62 lhs: ID OPENSQUARE INTCONST CLOSESQUARE .
   66 var_use: ID OPENSQUARE INTCONST CLOSESQUARE .

    EQ        reduce using rule 62 (lhs)
    $default  reduce using rule 66 (var_use)


State 120

   33 if_statement: IF OPENPAREN alr_subexpression CLOSEPAREN . statement_block else_statement

    OPENCURLY  shift, and go to state 42

    statement_block  go to state 129


State 121

   36 while_statement: WHILE OPENPAREN alr_subexpression CLOSEPAREN . statement_block

    OPENCURLY  shift, and go to state 42

    statement_block  go to state 130


State 122

   47 alr_subexpression: alr_subexpression . @1 ARITH alr_subexpression
   47                  | alr_subexpression @1 ARITH alr_subexpression .
   50                  | alr_subexpression . @2 RELN alr_subexpression
   52                  | alr_subexpression . @3 LOGICAL alr_subexpression

    ARITH     reduce using rule 46 (@1)
    ARITH     [reduce using rule 47 (alr_subexpression)]
    RELN      reduce using rule 47 (alr_subexpression)
    RELN      [reduce using rule 49 (@2)]
    LOGICAL   reduce using rule 47 (alr_subexpression)
    LOGICAL   [reduce using rule 51 (@3)]
    $default  reduce using rule 47 (alr_subexpression)

    @1  go to state 90
    @2  go to state 91
    @3  go to state 92


State 123

   47 alr_subexpression: alr_subexpression . @1 ARITH alr_subexpression
   50                  | alr_subexpression . @2 RELN alr_subexpression
   50                  | alr_subexpression @2 RELN alr_subexpression .
   52                  | alr_subexpression . @3 LOGICAL alr_subexpression

    ARITH     reduce using rule 46 (@1)
    ARITH     [reduce using rule 50 (alr_subexpression)]
    RELN      reduce using rule 49 (@2)
    RELN      [reduce using rule 50 (alr_subexpression)]
    LOGICAL   reduce using rule 50 (alr_subexpression)
    LOGICAL   [reduce using rule 51 (@3)]
    $default  reduce using rule 50 (alr_subexpression)

    @1  go to state 90
    @2  go to state 91
    @3  go to state 92


State 124

   47 alr_subexpression: alr_subexpression . @1 ARITH alr_subexpression
   50                  | alr_subexpression . @2 RELN alr_subexpression
   52                  | alr_subexpression . @3 LOGICAL alr_subexpression
   52                  | alr_subexpression @3 LOGICAL alr_subexpression .

    ARITH     reduce using rule 46 (@1)
    ARITH     [reduce using rule 52 (alr_subexpression)]
    RELN      reduce using rule 49 (@2)
    RELN      [reduce using rule 52 (alr_subexpression)]
    LOGICAL   reduce using rule 51 (@3)
    LOGICAL   [reduce using rule 52 (alr_subexpression)]
    $default  reduce using rule 52 (alr_subexpression)

    @1  go to state 90
    @2  go to state 91
    @3  go to state 92


State 125

   56 alr_subexpression: var_use OPENPAREN id_list error .

    $default  reduce using rule 56 (alr_subexpression)


State 126

   57 id_list: id_list . COMMA var_use
   60        | error COMMA id_list .

    COMMA  shift, and go to state 117

    COMMA     [reduce using rule 60 (id_list)]
    $default  reduce using rule 60 (id_list)


State 127

   66 var_use: ID OPENSQUARE INTCONST . CLOSESQUARE

    CLOSESQUARE  shift, and go to state 131


State 128

   57 id_list: id_list COMMA var_use .

    $default  reduce using rule 57 (id_list)


State 129

   33 if_statement: IF OPENPAREN alr_subexpression CLOSEPAREN statement_block . else_statement

    ELSE  shift, and go to state 132

    $default  reduce using rule 34 (else_statement)

    else_statement  go to state 133


State 130

   36 while_statement: WHILE OPENPAREN alr_subexpression CLOSEPAREN statement_block .

    $default  reduce using rule 36 (while_statement)


State 131

   66 var_use: ID OPENSQUARE INTCONST CLOSESQUARE .

    $default  reduce using rule 66 (var_use)


State 132

   35 else_statement: ELSE . supported_statement

    error       shift, and go to state 52
    ID          shift, and go to state 53
    OPENPAREN   shift, and go to state 54
    OPENCURLY   shift, and go to state 42
    OPENNEGATE  shift, and go to state 55
    LOGICALNOT  shift, and go to state 56
    IF          shift, and go to state 57
    WHILE       shift, and go to state 58
    RETURN      shift, and go to state 59
    BOOLCONST   shift, and go to state 60
    INTCONST    shift, and go to state 61
    CHARCONST   shift, and go to state 62

    statement_block      go to state 63
    supported_statement  go to state 134
    if_statement         go to state 66
    while_statement      go to state 67
    return_statement     go to state 68
    alr_subexpression    go to state 69
    lhs                  go to state 70
    var_use              go to state 71
    supported_constant   go to state 72


State 133

   33 if_statement: IF OPENPAREN alr_subexpression CLOSEPAREN statement_block else_statement .

    $default  reduce using rule 33 (if_statement)


State 134

   35 else_statement: ELSE supported_statement .

    $default  reduce using rule 35 (else_statement)
