Terminals unused in grammar

   FOR
   PRINT
   READ
   TERMINAL
   VALUE


State 84 conflicts: 1 shift/reduce
State 86 conflicts: 3 shift/reduce
State 100 conflicts: 3 shift/reduce
State 112 conflicts: 3 shift/reduce
State 113 conflicts: 3 shift/reduce
State 114 conflicts: 3 shift/reduce
State 115 conflicts: 3 shift/reduce


Grammar

    0 $accept: start_mad_program NONTERMINAL

    1 start_mad_program: mad_program

    2 mad_program: supported_declarations
    3            | supported_declarations mad_program
    4            | error '\n'

    5 supported_declarations: variable_declarations
    6                       | function_declarations

    7 variable_declarations: variable_definitions SEMI

    8 variable_definitions: dtype var_decl
    9                     | variable_definitions comma_rule var_decl
   10                     | variable_definitions error var_decl '\n'

   11 comma_rule: COMMA

   12 dtype: DTYPE_INT
   13      | DTYPE_BOOL
   14      | DTYPE_CHAR

   15 $@1: %empty

   16 function_declarations: dtype func_name OPENPAREN $@1 argument_list CLOSEPAREN statement_block

   17 @2: %empty

   18 $@3: %empty

   19 function_declarations: VOID @2 func_name $@3 OPENPAREN argument_list CLOSEPAREN statement_block

   20 func_name: ID

   21 argument_list: dtype var_decl COMMA argument_list
   22              | %empty
   23              | dtype ID error argument_list
   24              | dtype error COMMA argument_list

   25 statement_block: opencurly variable_list statement_list CLOSECURLY

   26 opencurly: OPENCURLY

   27 variable_list: %empty
   28              | variable_declarations variable_list

   29 statement_list: %empty
   30               | supported_statement statement_list

   31 supported_statement: alr_subexpression SEMI
   32                    | if_statement
   33                    | while_statement
   34                    | return_statement
   35                    | statement_block
   36                    | alr_subexpression error

   37 if_statement: IF OPENPAREN alr_subexpression CLOSEPAREN statement_block else_statement

   38 else_statement: %empty
   39               | ELSE statement_block

   40 while_statement: WHILE OPENPAREN alr_subexpression CLOSEPAREN statement_block

   41 return_statement: RETURN SEMI
   42                 | RETURN alr_subexpression SEMI
   43                 | RETURN error
   44                 | RETURN alr_subexpression error

   45 alr_subexpression: supported_constant
   46                  | var_use
   47                  | ID OPENPAREN id_list CLOSEPAREN
   48                  | OPENPAREN alr_subexpression CLOSEPAREN
   49                  | alr_subexpression ARITH alr_subexpression
   50                  | OPENNEGATE alr_subexpression CLOSEPAREN
   51                  | alr_subexpression RELN alr_subexpression
   52                  | alr_subexpression LOGICAL alr_subexpression
   53                  | LOGICALNOT alr_subexpression
   54                  | lhs EQ alr_subexpression
   55                  | error EQ alr_subexpression

   56 id_list: id_list COMMA var_use
   57        | var_use
   58        | %empty

   59 lhs: ID
   60    | ID OPENSQUARE INTCONST CLOSESQUARE

   61 var_decl: ID
   62         | ID OPENSQUARE INTCONST CLOSESQUARE

   63 var_use: ID
   64        | ID OPENSQUARE INTCONST CLOSESQUARE

   65 supported_constant: INTCONST
   66                   | CHARCONST
   67                   | BOOLCONST
   68                   | OPENNEGATE INTCONST CLOSEPAREN


Terminals, with rules where they appear

NONTERMINAL (0) 0
TERMINAL (1)
VALUE (2)
'\n' (10) 4 10
error (256) 4 10 23 24 36 43 44 55
ID (258) 20 23 47 59 60 61 62 63 64
COMMA (259) 11 21 24 56
SEMI (260) 7 31 41 42
OPENPAREN (261) 16 19 37 40 47 48
CLOSEPAREN (262) 16 19 37 40 47 48 50 68
OPENCURLY (263) 26
CLOSECURLY (264) 25
OPENSQUARE (265) 60 62 64
CLOSESQUARE (266) 60 62 64
OPENNEGATE (267) 50 68
VOID (268) 19
DTYPE_INT (269) 12
DTYPE_BOOL (270) 13
DTYPE_CHAR (271) 14
EQ (272) 54 55
ARITH (273) 49
RELN (274) 51
LOGICAL (275) 52
LOGICALNOT (276) 53
IF (277) 37
ELSE (278) 39
WHILE (279) 40
FOR (280)
RETURN (281) 41 42 43 44
PRINT (282)
READ (283)
BOOLCONST (284) 67
INTCONST (285) 60 62 64 65 68
CHARCONST (286) 66


Nonterminals, with rules where they appear

$accept (35)
    on left: 0
start_mad_program (36)
    on left: 1, on right: 0
mad_program (37)
    on left: 2 3 4, on right: 1 3
supported_declarations (38)
    on left: 5 6, on right: 2 3
variable_declarations (39)
    on left: 7, on right: 5 28
variable_definitions (40)
    on left: 8 9 10, on right: 7 9 10
comma_rule (41)
    on left: 11, on right: 9
dtype (42)
    on left: 12 13 14, on right: 8 16 21 23 24
function_declarations (43)
    on left: 16 19, on right: 6
$@1 (44)
    on left: 15, on right: 16
@2 (45)
    on left: 17, on right: 19
$@3 (46)
    on left: 18, on right: 19
func_name (47)
    on left: 20, on right: 16 19
argument_list (48)
    on left: 21 22 23 24, on right: 16 19 21 23 24
statement_block (49)
    on left: 25, on right: 16 19 35 37 39 40
opencurly (50)
    on left: 26, on right: 25
variable_list (51)
    on left: 27 28, on right: 25 28
statement_list (52)
    on left: 29 30, on right: 25 30
supported_statement (53)
    on left: 31 32 33 34 35 36, on right: 30
if_statement (54)
    on left: 37, on right: 32
else_statement (55)
    on left: 38 39, on right: 37
while_statement (56)
    on left: 40, on right: 33
return_statement (57)
    on left: 41 42 43 44, on right: 34
alr_subexpression (58)
    on left: 45 46 47 48 49 50 51 52 53 54 55, on right: 31 36 37 40
    42 44 48 49 50 51 52 53 54 55
id_list (59)
    on left: 56 57 58, on right: 47 56
lhs (60)
    on left: 59 60, on right: 54
var_decl (61)
    on left: 61 62, on right: 8 9 10 21
var_use (62)
    on left: 63 64, on right: 46 56 57
supported_constant (63)
    on left: 65 66 67 68, on right: 45


State 0

    0 $accept: . start_mad_program NONTERMINAL

    error       shift, and go to state 1
    VOID        shift, and go to state 2
    DTYPE_INT   shift, and go to state 3
    DTYPE_BOOL  shift, and go to state 4
    DTYPE_CHAR  shift, and go to state 5

    start_mad_program       go to state 6
    mad_program             go to state 7
    supported_declarations  go to state 8
    variable_declarations   go to state 9
    variable_definitions    go to state 10
    dtype                   go to state 11
    function_declarations   go to state 12


State 1

    4 mad_program: error . '\n'

    '\n'  shift, and go to state 13


State 2

   19 function_declarations: VOID . @2 func_name $@3 OPENPAREN argument_list CLOSEPAREN statement_block

    $default  reduce using rule 17 (@2)

    @2  go to state 14


State 3

   12 dtype: DTYPE_INT .

    $default  reduce using rule 12 (dtype)


State 4

   13 dtype: DTYPE_BOOL .

    $default  reduce using rule 13 (dtype)


State 5

   14 dtype: DTYPE_CHAR .

    $default  reduce using rule 14 (dtype)


State 6

    0 $accept: start_mad_program . NONTERMINAL

    NONTERMINAL  shift, and go to state 15


State 7

    1 start_mad_program: mad_program .

    $default  reduce using rule 1 (start_mad_program)


State 8

    2 mad_program: supported_declarations .
    3            | supported_declarations . mad_program

    error       shift, and go to state 1
    VOID        shift, and go to state 2
    DTYPE_INT   shift, and go to state 3
    DTYPE_BOOL  shift, and go to state 4
    DTYPE_CHAR  shift, and go to state 5

    NONTERMINAL  reduce using rule 2 (mad_program)

    mad_program             go to state 16
    supported_declarations  go to state 8
    variable_declarations   go to state 9
    variable_definitions    go to state 10
    dtype                   go to state 11
    function_declarations   go to state 12


State 9

    5 supported_declarations: variable_declarations .

    $default  reduce using rule 5 (supported_declarations)


State 10

    7 variable_declarations: variable_definitions . SEMI
    9 variable_definitions: variable_definitions . comma_rule var_decl
   10                     | variable_definitions . error var_decl '\n'

    error  shift, and go to state 17
    COMMA  shift, and go to state 18
    SEMI   shift, and go to state 19

    comma_rule  go to state 20


State 11

    8 variable_definitions: dtype . var_decl
   16 function_declarations: dtype . func_name OPENPAREN $@1 argument_list CLOSEPAREN statement_block

    ID  shift, and go to state 21

    func_name  go to state 22
    var_decl   go to state 23


State 12

    6 supported_declarations: function_declarations .

    $default  reduce using rule 6 (supported_declarations)


State 13

    4 mad_program: error '\n' .

    $default  reduce using rule 4 (mad_program)


State 14

   19 function_declarations: VOID @2 . func_name $@3 OPENPAREN argument_list CLOSEPAREN statement_block

    ID  shift, and go to state 24

    func_name  go to state 25


State 15

    0 $accept: start_mad_program NONTERMINAL .

    $default  accept


State 16

    3 mad_program: supported_declarations mad_program .

    $default  reduce using rule 3 (mad_program)


State 17

   10 variable_definitions: variable_definitions error . var_decl '\n'

    ID  shift, and go to state 26

    var_decl  go to state 27


State 18

   11 comma_rule: COMMA .

    $default  reduce using rule 11 (comma_rule)


State 19

    7 variable_declarations: variable_definitions SEMI .

    $default  reduce using rule 7 (variable_declarations)


State 20

    9 variable_definitions: variable_definitions comma_rule . var_decl

    ID  shift, and go to state 26

    var_decl  go to state 28


State 21

   20 func_name: ID .
   61 var_decl: ID .
   62         | ID . OPENSQUARE INTCONST CLOSESQUARE

    OPENSQUARE  shift, and go to state 29

    OPENPAREN  reduce using rule 20 (func_name)
    $default   reduce using rule 61 (var_decl)


State 22

   16 function_declarations: dtype func_name . OPENPAREN $@1 argument_list CLOSEPAREN statement_block

    OPENPAREN  shift, and go to state 30


State 23

    8 variable_definitions: dtype var_decl .

    $default  reduce using rule 8 (variable_definitions)


State 24

   20 func_name: ID .

    $default  reduce using rule 20 (func_name)


State 25

   19 function_declarations: VOID @2 func_name . $@3 OPENPAREN argument_list CLOSEPAREN statement_block

    $default  reduce using rule 18 ($@3)

    $@3  go to state 31


State 26

   61 var_decl: ID .
   62         | ID . OPENSQUARE INTCONST CLOSESQUARE

    OPENSQUARE  shift, and go to state 29

    $default  reduce using rule 61 (var_decl)


State 27

   10 variable_definitions: variable_definitions error var_decl . '\n'

    '\n'  shift, and go to state 32


State 28

    9 variable_definitions: variable_definitions comma_rule var_decl .

    $default  reduce using rule 9 (variable_definitions)


State 29

   62 var_decl: ID OPENSQUARE . INTCONST CLOSESQUARE

    INTCONST  shift, and go to state 33


State 30

   16 function_declarations: dtype func_name OPENPAREN . $@1 argument_list CLOSEPAREN statement_block

    $default  reduce using rule 15 ($@1)

    $@1  go to state 34


State 31

   19 function_declarations: VOID @2 func_name $@3 . OPENPAREN argument_list CLOSEPAREN statement_block

    OPENPAREN  shift, and go to state 35


State 32

   10 variable_definitions: variable_definitions error var_decl '\n' .

    $default  reduce using rule 10 (variable_definitions)


State 33

   62 var_decl: ID OPENSQUARE INTCONST . CLOSESQUARE

    CLOSESQUARE  shift, and go to state 36


State 34

   16 function_declarations: dtype func_name OPENPAREN $@1 . argument_list CLOSEPAREN statement_block

    DTYPE_INT   shift, and go to state 3
    DTYPE_BOOL  shift, and go to state 4
    DTYPE_CHAR  shift, and go to state 5

    $default  reduce using rule 22 (argument_list)

    dtype          go to state 37
    argument_list  go to state 38


State 35

   19 function_declarations: VOID @2 func_name $@3 OPENPAREN . argument_list CLOSEPAREN statement_block

    DTYPE_INT   shift, and go to state 3
    DTYPE_BOOL  shift, and go to state 4
    DTYPE_CHAR  shift, and go to state 5

    $default  reduce using rule 22 (argument_list)

    dtype          go to state 37
    argument_list  go to state 39


State 36

   62 var_decl: ID OPENSQUARE INTCONST CLOSESQUARE .

    $default  reduce using rule 62 (var_decl)


State 37

   21 argument_list: dtype . var_decl COMMA argument_list
   23              | dtype . ID error argument_list
   24              | dtype . error COMMA argument_list

    error  shift, and go to state 40
    ID     shift, and go to state 41

    var_decl  go to state 42


State 38

   16 function_declarations: dtype func_name OPENPAREN $@1 argument_list . CLOSEPAREN statement_block

    CLOSEPAREN  shift, and go to state 43


State 39

   19 function_declarations: VOID @2 func_name $@3 OPENPAREN argument_list . CLOSEPAREN statement_block

    CLOSEPAREN  shift, and go to state 44


State 40

   24 argument_list: dtype error . COMMA argument_list

    COMMA  shift, and go to state 45


State 41

   23 argument_list: dtype ID . error argument_list
   61 var_decl: ID .
   62         | ID . OPENSQUARE INTCONST CLOSESQUARE

    error       shift, and go to state 46
    OPENSQUARE  shift, and go to state 29

    COMMA  reduce using rule 61 (var_decl)


State 42

   21 argument_list: dtype var_decl . COMMA argument_list

    COMMA  shift, and go to state 47


State 43

   16 function_declarations: dtype func_name OPENPAREN $@1 argument_list CLOSEPAREN . statement_block

    OPENCURLY  shift, and go to state 48

    statement_block  go to state 49
    opencurly        go to state 50


State 44

   19 function_declarations: VOID @2 func_name $@3 OPENPAREN argument_list CLOSEPAREN . statement_block

    OPENCURLY  shift, and go to state 48

    statement_block  go to state 51
    opencurly        go to state 50


State 45

   24 argument_list: dtype error COMMA . argument_list

    DTYPE_INT   shift, and go to state 3
    DTYPE_BOOL  shift, and go to state 4
    DTYPE_CHAR  shift, and go to state 5

    $default  reduce using rule 22 (argument_list)

    dtype          go to state 37
    argument_list  go to state 52


State 46

   23 argument_list: dtype ID error . argument_list

    DTYPE_INT   shift, and go to state 3
    DTYPE_BOOL  shift, and go to state 4
    DTYPE_CHAR  shift, and go to state 5

    $default  reduce using rule 22 (argument_list)

    dtype          go to state 37
    argument_list  go to state 53


State 47

   21 argument_list: dtype var_decl COMMA . argument_list

    DTYPE_INT   shift, and go to state 3
    DTYPE_BOOL  shift, and go to state 4
    DTYPE_CHAR  shift, and go to state 5

    $default  reduce using rule 22 (argument_list)

    dtype          go to state 37
    argument_list  go to state 54


State 48

   26 opencurly: OPENCURLY .

    $default  reduce using rule 26 (opencurly)


State 49

   16 function_declarations: dtype func_name OPENPAREN $@1 argument_list CLOSEPAREN statement_block .

    $default  reduce using rule 16 (function_declarations)


State 50

   25 statement_block: opencurly . variable_list statement_list CLOSECURLY

    DTYPE_INT   shift, and go to state 3
    DTYPE_BOOL  shift, and go to state 4
    DTYPE_CHAR  shift, and go to state 5

    $default  reduce using rule 27 (variable_list)

    variable_declarations  go to state 55
    variable_definitions   go to state 10
    dtype                  go to state 56
    variable_list          go to state 57


State 51

   19 function_declarations: VOID @2 func_name $@3 OPENPAREN argument_list CLOSEPAREN statement_block .

    $default  reduce using rule 19 (function_declarations)


State 52

   24 argument_list: dtype error COMMA argument_list .

    $default  reduce using rule 24 (argument_list)


State 53

   23 argument_list: dtype ID error argument_list .

    $default  reduce using rule 23 (argument_list)


State 54

   21 argument_list: dtype var_decl COMMA argument_list .

    $default  reduce using rule 21 (argument_list)


State 55

   28 variable_list: variable_declarations . variable_list

    DTYPE_INT   shift, and go to state 3
    DTYPE_BOOL  shift, and go to state 4
    DTYPE_CHAR  shift, and go to state 5

    $default  reduce using rule 27 (variable_list)

    variable_declarations  go to state 55
    variable_definitions   go to state 10
    dtype                  go to state 56
    variable_list          go to state 58


State 56

    8 variable_definitions: dtype . var_decl

    ID  shift, and go to state 26

    var_decl  go to state 23


State 57

   25 statement_block: opencurly variable_list . statement_list CLOSECURLY

    error       shift, and go to state 59
    ID          shift, and go to state 60
    OPENPAREN   shift, and go to state 61
    OPENCURLY   shift, and go to state 48
    OPENNEGATE  shift, and go to state 62
    LOGICALNOT  shift, and go to state 63
    IF          shift, and go to state 64
    WHILE       shift, and go to state 65
    RETURN      shift, and go to state 66
    BOOLCONST   shift, and go to state 67
    INTCONST    shift, and go to state 68
    CHARCONST   shift, and go to state 69

    CLOSECURLY  reduce using rule 29 (statement_list)

    statement_block      go to state 70
    opencurly            go to state 50
    statement_list       go to state 71
    supported_statement  go to state 72
    if_statement         go to state 73
    while_statement      go to state 74
    return_statement     go to state 75
    alr_subexpression    go to state 76
    lhs                  go to state 77
    var_use              go to state 78
    supported_constant   go to state 79


State 58

   28 variable_list: variable_declarations variable_list .

    $default  reduce using rule 28 (variable_list)


State 59

   55 alr_subexpression: error . EQ alr_subexpression

    EQ  shift, and go to state 80


State 60

   47 alr_subexpression: ID . OPENPAREN id_list CLOSEPAREN
   59 lhs: ID .
   60    | ID . OPENSQUARE INTCONST CLOSESQUARE
   63 var_use: ID .
   64        | ID . OPENSQUARE INTCONST CLOSESQUARE

    OPENPAREN   shift, and go to state 81
    OPENSQUARE  shift, and go to state 82

    EQ        reduce using rule 59 (lhs)
    $default  reduce using rule 63 (var_use)


State 61

   48 alr_subexpression: OPENPAREN . alr_subexpression CLOSEPAREN

    error       shift, and go to state 59
    ID          shift, and go to state 60
    OPENPAREN   shift, and go to state 61
    OPENNEGATE  shift, and go to state 62
    LOGICALNOT  shift, and go to state 63
    BOOLCONST   shift, and go to state 67
    INTCONST    shift, and go to state 68
    CHARCONST   shift, and go to state 69

    alr_subexpression   go to state 83
    lhs                 go to state 77
    var_use             go to state 78
    supported_constant  go to state 79


State 62

   50 alr_subexpression: OPENNEGATE . alr_subexpression CLOSEPAREN
   68 supported_constant: OPENNEGATE . INTCONST CLOSEPAREN

    error       shift, and go to state 59
    ID          shift, and go to state 60
    OPENPAREN   shift, and go to state 61
    OPENNEGATE  shift, and go to state 62
    LOGICALNOT  shift, and go to state 63
    BOOLCONST   shift, and go to state 67
    INTCONST    shift, and go to state 84
    CHARCONST   shift, and go to state 69

    alr_subexpression   go to state 85
    lhs                 go to state 77
    var_use             go to state 78
    supported_constant  go to state 79


State 63

   53 alr_subexpression: LOGICALNOT . alr_subexpression

    error       shift, and go to state 59
    ID          shift, and go to state 60
    OPENPAREN   shift, and go to state 61
    OPENNEGATE  shift, and go to state 62
    LOGICALNOT  shift, and go to state 63
    BOOLCONST   shift, and go to state 67
    INTCONST    shift, and go to state 68
    CHARCONST   shift, and go to state 69

    alr_subexpression   go to state 86
    lhs                 go to state 77
    var_use             go to state 78
    supported_constant  go to state 79


State 64

   37 if_statement: IF . OPENPAREN alr_subexpression CLOSEPAREN statement_block else_statement

    OPENPAREN  shift, and go to state 87


State 65

   40 while_statement: WHILE . OPENPAREN alr_subexpression CLOSEPAREN statement_block

    OPENPAREN  shift, and go to state 88


State 66

   41 return_statement: RETURN . SEMI
   42                 | RETURN . alr_subexpression SEMI
   43                 | RETURN . error
   44                 | RETURN . alr_subexpression error

    error       shift, and go to state 89
    ID          shift, and go to state 60
    SEMI        shift, and go to state 90
    OPENPAREN   shift, and go to state 61
    OPENNEGATE  shift, and go to state 62
    LOGICALNOT  shift, and go to state 63
    BOOLCONST   shift, and go to state 67
    INTCONST    shift, and go to state 68
    CHARCONST   shift, and go to state 69

    alr_subexpression   go to state 91
    lhs                 go to state 77
    var_use             go to state 78
    supported_constant  go to state 79


State 67

   67 supported_constant: BOOLCONST .

    $default  reduce using rule 67 (supported_constant)


State 68

   65 supported_constant: INTCONST .

    $default  reduce using rule 65 (supported_constant)


State 69

   66 supported_constant: CHARCONST .

    $default  reduce using rule 66 (supported_constant)


State 70

   35 supported_statement: statement_block .

    $default  reduce using rule 35 (supported_statement)


State 71

   25 statement_block: opencurly variable_list statement_list . CLOSECURLY

    CLOSECURLY  shift, and go to state 92


State 72

   30 statement_list: supported_statement . statement_list

    error       shift, and go to state 59
    ID          shift, and go to state 60
    OPENPAREN   shift, and go to state 61
    OPENCURLY   shift, and go to state 48
    OPENNEGATE  shift, and go to state 62
    LOGICALNOT  shift, and go to state 63
    IF          shift, and go to state 64
    WHILE       shift, and go to state 65
    RETURN      shift, and go to state 66
    BOOLCONST   shift, and go to state 67
    INTCONST    shift, and go to state 68
    CHARCONST   shift, and go to state 69

    CLOSECURLY  reduce using rule 29 (statement_list)

    statement_block      go to state 70
    opencurly            go to state 50
    statement_list       go to state 93
    supported_statement  go to state 72
    if_statement         go to state 73
    while_statement      go to state 74
    return_statement     go to state 75
    alr_subexpression    go to state 76
    lhs                  go to state 77
    var_use              go to state 78
    supported_constant   go to state 79


State 73

   32 supported_statement: if_statement .

    $default  reduce using rule 32 (supported_statement)


State 74

   33 supported_statement: while_statement .

    $default  reduce using rule 33 (supported_statement)


State 75

   34 supported_statement: return_statement .

    $default  reduce using rule 34 (supported_statement)


State 76

   31 supported_statement: alr_subexpression . SEMI
   36                    | alr_subexpression . error
   49 alr_subexpression: alr_subexpression . ARITH alr_subexpression
   51                  | alr_subexpression . RELN alr_subexpression
   52                  | alr_subexpression . LOGICAL alr_subexpression

    error    shift, and go to state 94
    SEMI     shift, and go to state 95
    ARITH    shift, and go to state 96
    RELN     shift, and go to state 97
    LOGICAL  shift, and go to state 98


State 77

   54 alr_subexpression: lhs . EQ alr_subexpression

    EQ  shift, and go to state 99


State 78

   46 alr_subexpression: var_use .

    $default  reduce using rule 46 (alr_subexpression)


State 79

   45 alr_subexpression: supported_constant .

    $default  reduce using rule 45 (alr_subexpression)


State 80

   55 alr_subexpression: error EQ . alr_subexpression

    error       shift, and go to state 59
    ID          shift, and go to state 60
    OPENPAREN   shift, and go to state 61
    OPENNEGATE  shift, and go to state 62
    LOGICALNOT  shift, and go to state 63
    BOOLCONST   shift, and go to state 67
    INTCONST    shift, and go to state 68
    CHARCONST   shift, and go to state 69

    alr_subexpression   go to state 100
    lhs                 go to state 77
    var_use             go to state 78
    supported_constant  go to state 79


State 81

   47 alr_subexpression: ID OPENPAREN . id_list CLOSEPAREN

    ID  shift, and go to state 101

    $default  reduce using rule 58 (id_list)

    id_list  go to state 102
    var_use  go to state 103


State 82

   60 lhs: ID OPENSQUARE . INTCONST CLOSESQUARE
   64 var_use: ID OPENSQUARE . INTCONST CLOSESQUARE

    INTCONST  shift, and go to state 104


State 83

   48 alr_subexpression: OPENPAREN alr_subexpression . CLOSEPAREN
   49                  | alr_subexpression . ARITH alr_subexpression
   51                  | alr_subexpression . RELN alr_subexpression
   52                  | alr_subexpression . LOGICAL alr_subexpression

    CLOSEPAREN  shift, and go to state 105
    ARITH       shift, and go to state 96
    RELN        shift, and go to state 97
    LOGICAL     shift, and go to state 98


State 84

   65 supported_constant: INTCONST .
   68                   | OPENNEGATE INTCONST . CLOSEPAREN

    CLOSEPAREN  shift, and go to state 106

    CLOSEPAREN  [reduce using rule 65 (supported_constant)]
    $default    reduce using rule 65 (supported_constant)


State 85

   49 alr_subexpression: alr_subexpression . ARITH alr_subexpression
   50                  | OPENNEGATE alr_subexpression . CLOSEPAREN
   51                  | alr_subexpression . RELN alr_subexpression
   52                  | alr_subexpression . LOGICAL alr_subexpression

    CLOSEPAREN  shift, and go to state 107
    ARITH       shift, and go to state 96
    RELN        shift, and go to state 97
    LOGICAL     shift, and go to state 98


State 86

   49 alr_subexpression: alr_subexpression . ARITH alr_subexpression
   51                  | alr_subexpression . RELN alr_subexpression
   52                  | alr_subexpression . LOGICAL alr_subexpression
   53                  | LOGICALNOT alr_subexpression .

    ARITH    shift, and go to state 96
    RELN     shift, and go to state 97
    LOGICAL  shift, and go to state 98

    ARITH     [reduce using rule 53 (alr_subexpression)]
    RELN      [reduce using rule 53 (alr_subexpression)]
    LOGICAL   [reduce using rule 53 (alr_subexpression)]
    $default  reduce using rule 53 (alr_subexpression)


State 87

   37 if_statement: IF OPENPAREN . alr_subexpression CLOSEPAREN statement_block else_statement

    error       shift, and go to state 59
    ID          shift, and go to state 60
    OPENPAREN   shift, and go to state 61
    OPENNEGATE  shift, and go to state 62
    LOGICALNOT  shift, and go to state 63
    BOOLCONST   shift, and go to state 67
    INTCONST    shift, and go to state 68
    CHARCONST   shift, and go to state 69

    alr_subexpression   go to state 108
    lhs                 go to state 77
    var_use             go to state 78
    supported_constant  go to state 79


State 88

   40 while_statement: WHILE OPENPAREN . alr_subexpression CLOSEPAREN statement_block

    error       shift, and go to state 59
    ID          shift, and go to state 60
    OPENPAREN   shift, and go to state 61
    OPENNEGATE  shift, and go to state 62
    LOGICALNOT  shift, and go to state 63
    BOOLCONST   shift, and go to state 67
    INTCONST    shift, and go to state 68
    CHARCONST   shift, and go to state 69

    alr_subexpression   go to state 109
    lhs                 go to state 77
    var_use             go to state 78
    supported_constant  go to state 79


State 89

   43 return_statement: RETURN error .
   55 alr_subexpression: error . EQ alr_subexpression

    EQ  shift, and go to state 80

    $default  reduce using rule 43 (return_statement)


State 90

   41 return_statement: RETURN SEMI .

    $default  reduce using rule 41 (return_statement)


State 91

   42 return_statement: RETURN alr_subexpression . SEMI
   44                 | RETURN alr_subexpression . error
   49 alr_subexpression: alr_subexpression . ARITH alr_subexpression
   51                  | alr_subexpression . RELN alr_subexpression
   52                  | alr_subexpression . LOGICAL alr_subexpression

    error    shift, and go to state 110
    SEMI     shift, and go to state 111
    ARITH    shift, and go to state 96
    RELN     shift, and go to state 97
    LOGICAL  shift, and go to state 98


State 92

   25 statement_block: opencurly variable_list statement_list CLOSECURLY .

    $default  reduce using rule 25 (statement_block)


State 93

   30 statement_list: supported_statement statement_list .

    $default  reduce using rule 30 (statement_list)


State 94

   36 supported_statement: alr_subexpression error .

    $default  reduce using rule 36 (supported_statement)


State 95

   31 supported_statement: alr_subexpression SEMI .

    $default  reduce using rule 31 (supported_statement)


State 96

   49 alr_subexpression: alr_subexpression ARITH . alr_subexpression

    error       shift, and go to state 59
    ID          shift, and go to state 60
    OPENPAREN   shift, and go to state 61
    OPENNEGATE  shift, and go to state 62
    LOGICALNOT  shift, and go to state 63
    BOOLCONST   shift, and go to state 67
    INTCONST    shift, and go to state 68
    CHARCONST   shift, and go to state 69

    alr_subexpression   go to state 112
    lhs                 go to state 77
    var_use             go to state 78
    supported_constant  go to state 79


State 97

   51 alr_subexpression: alr_subexpression RELN . alr_subexpression

    error       shift, and go to state 59
    ID          shift, and go to state 60
    OPENPAREN   shift, and go to state 61
    OPENNEGATE  shift, and go to state 62
    LOGICALNOT  shift, and go to state 63
    BOOLCONST   shift, and go to state 67
    INTCONST    shift, and go to state 68
    CHARCONST   shift, and go to state 69

    alr_subexpression   go to state 113
    lhs                 go to state 77
    var_use             go to state 78
    supported_constant  go to state 79


State 98

   52 alr_subexpression: alr_subexpression LOGICAL . alr_subexpression

    error       shift, and go to state 59
    ID          shift, and go to state 60
    OPENPAREN   shift, and go to state 61
    OPENNEGATE  shift, and go to state 62
    LOGICALNOT  shift, and go to state 63
    BOOLCONST   shift, and go to state 67
    INTCONST    shift, and go to state 68
    CHARCONST   shift, and go to state 69

    alr_subexpression   go to state 114
    lhs                 go to state 77
    var_use             go to state 78
    supported_constant  go to state 79


State 99

   54 alr_subexpression: lhs EQ . alr_subexpression

    error       shift, and go to state 59
    ID          shift, and go to state 60
    OPENPAREN   shift, and go to state 61
    OPENNEGATE  shift, and go to state 62
    LOGICALNOT  shift, and go to state 63
    BOOLCONST   shift, and go to state 67
    INTCONST    shift, and go to state 68
    CHARCONST   shift, and go to state 69

    alr_subexpression   go to state 115
    lhs                 go to state 77
    var_use             go to state 78
    supported_constant  go to state 79


State 100

   49 alr_subexpression: alr_subexpression . ARITH alr_subexpression
   51                  | alr_subexpression . RELN alr_subexpression
   52                  | alr_subexpression . LOGICAL alr_subexpression
   55                  | error EQ alr_subexpression .

    ARITH    shift, and go to state 96
    RELN     shift, and go to state 97
    LOGICAL  shift, and go to state 98

    ARITH     [reduce using rule 55 (alr_subexpression)]
    RELN      [reduce using rule 55 (alr_subexpression)]
    LOGICAL   [reduce using rule 55 (alr_subexpression)]
    $default  reduce using rule 55 (alr_subexpression)


State 101

   63 var_use: ID .
   64        | ID . OPENSQUARE INTCONST CLOSESQUARE

    OPENSQUARE  shift, and go to state 116

    $default  reduce using rule 63 (var_use)


State 102

   47 alr_subexpression: ID OPENPAREN id_list . CLOSEPAREN
   56 id_list: id_list . COMMA var_use

    COMMA       shift, and go to state 117
    CLOSEPAREN  shift, and go to state 118


State 103

   57 id_list: var_use .

    $default  reduce using rule 57 (id_list)


State 104

   60 lhs: ID OPENSQUARE INTCONST . CLOSESQUARE
   64 var_use: ID OPENSQUARE INTCONST . CLOSESQUARE

    CLOSESQUARE  shift, and go to state 119


State 105

   48 alr_subexpression: OPENPAREN alr_subexpression CLOSEPAREN .

    $default  reduce using rule 48 (alr_subexpression)


State 106

   68 supported_constant: OPENNEGATE INTCONST CLOSEPAREN .

    $default  reduce using rule 68 (supported_constant)


State 107

   50 alr_subexpression: OPENNEGATE alr_subexpression CLOSEPAREN .

    $default  reduce using rule 50 (alr_subexpression)


State 108

   37 if_statement: IF OPENPAREN alr_subexpression . CLOSEPAREN statement_block else_statement
   49 alr_subexpression: alr_subexpression . ARITH alr_subexpression
   51                  | alr_subexpression . RELN alr_subexpression
   52                  | alr_subexpression . LOGICAL alr_subexpression

    CLOSEPAREN  shift, and go to state 120
    ARITH       shift, and go to state 96
    RELN        shift, and go to state 97
    LOGICAL     shift, and go to state 98


State 109

   40 while_statement: WHILE OPENPAREN alr_subexpression . CLOSEPAREN statement_block
   49 alr_subexpression: alr_subexpression . ARITH alr_subexpression
   51                  | alr_subexpression . RELN alr_subexpression
   52                  | alr_subexpression . LOGICAL alr_subexpression

    CLOSEPAREN  shift, and go to state 121
    ARITH       shift, and go to state 96
    RELN        shift, and go to state 97
    LOGICAL     shift, and go to state 98


State 110

   44 return_statement: RETURN alr_subexpression error .

    $default  reduce using rule 44 (return_statement)


State 111

   42 return_statement: RETURN alr_subexpression SEMI .

    $default  reduce using rule 42 (return_statement)


State 112

   49 alr_subexpression: alr_subexpression . ARITH alr_subexpression
   49                  | alr_subexpression ARITH alr_subexpression .
   51                  | alr_subexpression . RELN alr_subexpression
   52                  | alr_subexpression . LOGICAL alr_subexpression

    ARITH    shift, and go to state 96
    RELN     shift, and go to state 97
    LOGICAL  shift, and go to state 98

    ARITH     [reduce using rule 49 (alr_subexpression)]
    RELN      [reduce using rule 49 (alr_subexpression)]
    LOGICAL   [reduce using rule 49 (alr_subexpression)]
    $default  reduce using rule 49 (alr_subexpression)


State 113

   49 alr_subexpression: alr_subexpression . ARITH alr_subexpression
   51                  | alr_subexpression . RELN alr_subexpression
   51                  | alr_subexpression RELN alr_subexpression .
   52                  | alr_subexpression . LOGICAL alr_subexpression

    ARITH    shift, and go to state 96
    RELN     shift, and go to state 97
    LOGICAL  shift, and go to state 98

    ARITH     [reduce using rule 51 (alr_subexpression)]
    RELN      [reduce using rule 51 (alr_subexpression)]
    LOGICAL   [reduce using rule 51 (alr_subexpression)]
    $default  reduce using rule 51 (alr_subexpression)


State 114

   49 alr_subexpression: alr_subexpression . ARITH alr_subexpression
   51                  | alr_subexpression . RELN alr_subexpression
   52                  | alr_subexpression . LOGICAL alr_subexpression
   52                  | alr_subexpression LOGICAL alr_subexpression .

    ARITH    shift, and go to state 96
    RELN     shift, and go to state 97
    LOGICAL  shift, and go to state 98

    ARITH     [reduce using rule 52 (alr_subexpression)]
    RELN      [reduce using rule 52 (alr_subexpression)]
    LOGICAL   [reduce using rule 52 (alr_subexpression)]
    $default  reduce using rule 52 (alr_subexpression)


State 115

   49 alr_subexpression: alr_subexpression . ARITH alr_subexpression
   51                  | alr_subexpression . RELN alr_subexpression
   52                  | alr_subexpression . LOGICAL alr_subexpression
   54                  | lhs EQ alr_subexpression .

    ARITH    shift, and go to state 96
    RELN     shift, and go to state 97
    LOGICAL  shift, and go to state 98

    ARITH     [reduce using rule 54 (alr_subexpression)]
    RELN      [reduce using rule 54 (alr_subexpression)]
    LOGICAL   [reduce using rule 54 (alr_subexpression)]
    $default  reduce using rule 54 (alr_subexpression)


State 116

   64 var_use: ID OPENSQUARE . INTCONST CLOSESQUARE

    INTCONST  shift, and go to state 122


State 117

   56 id_list: id_list COMMA . var_use

    ID  shift, and go to state 101

    var_use  go to state 123


State 118

   47 alr_subexpression: ID OPENPAREN id_list CLOSEPAREN .

    $default  reduce using rule 47 (alr_subexpression)


State 119

   60 lhs: ID OPENSQUARE INTCONST CLOSESQUARE .
   64 var_use: ID OPENSQUARE INTCONST CLOSESQUARE .

    EQ        reduce using rule 60 (lhs)
    $default  reduce using rule 64 (var_use)


State 120

   37 if_statement: IF OPENPAREN alr_subexpression CLOSEPAREN . statement_block else_statement

    OPENCURLY  shift, and go to state 48

    statement_block  go to state 124
    opencurly        go to state 50


State 121

   40 while_statement: WHILE OPENPAREN alr_subexpression CLOSEPAREN . statement_block

    OPENCURLY  shift, and go to state 48

    statement_block  go to state 125
    opencurly        go to state 50


State 122

   64 var_use: ID OPENSQUARE INTCONST . CLOSESQUARE

    CLOSESQUARE  shift, and go to state 126


State 123

   56 id_list: id_list COMMA var_use .

    $default  reduce using rule 56 (id_list)


State 124

   37 if_statement: IF OPENPAREN alr_subexpression CLOSEPAREN statement_block . else_statement

    ELSE  shift, and go to state 127

    $default  reduce using rule 38 (else_statement)

    else_statement  go to state 128


State 125

   40 while_statement: WHILE OPENPAREN alr_subexpression CLOSEPAREN statement_block .

    $default  reduce using rule 40 (while_statement)


State 126

   64 var_use: ID OPENSQUARE INTCONST CLOSESQUARE .

    $default  reduce using rule 64 (var_use)


State 127

   39 else_statement: ELSE . statement_block

    OPENCURLY  shift, and go to state 48

    statement_block  go to state 129
    opencurly        go to state 50


State 128

   37 if_statement: IF OPENPAREN alr_subexpression CLOSEPAREN statement_block else_statement .

    $default  reduce using rule 37 (if_statement)


State 129

   39 else_statement: ELSE statement_block .

    $default  reduce using rule 39 (else_statement)
